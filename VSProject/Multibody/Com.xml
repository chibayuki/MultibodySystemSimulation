<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Com</name>
    </assembly>
    <members>
        <member name="T:Com.WinForm.ControlSubstitution">
            <summary>
            为控件的替代使用提供静态方法。
            </summary>
        </member>
        <member name="M:Com.WinForm.ControlSubstitution.LabelAsButton(System.Windows.Forms.Label,System.EventHandler,System.EventHandler,System.EventHandler,System.EventHandler,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Font,System.Drawing.Font,System.Drawing.Font,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color)">
            <summary>
            将 Label 控件作为 Button 控件使用。
            </summary>
            <param name="label">Label 控件。</param>
            <param name="clickEvent">鼠标单击控件时引发的事件。</param>
            <param name="doubleClickEvent">鼠标双击控件时引发的事件。</param>
            <param name="mouseEnterEvent">鼠标进入控件时引发的事件。</param>
            <param name="mouseLeaveEvent">鼠标离开控件时引发的事件。</param>
            <param name="backColor">控件的背景色。</param>
            <param name="mouseOverBackColor">鼠标位于控件内时的背景色。</param>
            <param name="mouseDownBackColor">鼠标按下控件时的背景色。</param>
            <param name="font">控件的字体。</param>
            <param name="mouseOverFont">鼠标位于控件内时的字体。</param>
            <param name="mouseDownFont">鼠标按下控件时的字体。</param>
            <param name="foreColor">控件的前景色。</param>
            <param name="mouseOverForeColor">鼠标位于控件内时的前景色。</param>
            <param name="mouseDownForeColor">鼠标按下控件时的前景色。</param>
        </member>
        <member name="M:Com.WinForm.ControlSubstitution.LabelAsButton(System.Windows.Forms.Label,System.EventHandler,System.EventHandler,System.EventHandler,System.EventHandler,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Font,System.Drawing.Font,System.Drawing.Font)">
            <summary>
            将 Label 控件作为 Button 控件使用。
            </summary>
            <param name="label">Label 控件。</param>
            <param name="clickEvent">鼠标单击控件时引发的事件。</param>
            <param name="doubleClickEvent">鼠标双击控件时引发的事件。</param>
            <param name="mouseEnterEvent">鼠标进入控件时引发的事件。</param>
            <param name="mouseLeaveEvent">鼠标离开控件时引发的事件。</param>
            <param name="backColor">控件的背景色。</param>
            <param name="mouseOverBackColor">鼠标位于控件内时的背景色。</param>
            <param name="mouseDownBackColor">鼠标按下控件时的背景色。</param>
            <param name="font">控件的字体。</param>
            <param name="mouseOverFont">鼠标位于控件内时的字体。</param>
            <param name="mouseDownFont">鼠标按下控件时的字体。</param>
        </member>
        <member name="M:Com.WinForm.ControlSubstitution.LabelAsButton(System.Windows.Forms.Label,System.EventHandler,System.EventHandler,System.EventHandler,System.EventHandler,System.Drawing.Font,System.Drawing.Font,System.Drawing.Font,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color)">
            <summary>
            将 Label 控件作为 Button 控件使用。
            </summary>
            <param name="label">Label 控件。</param>
            <param name="clickEvent">鼠标单击控件时引发的事件。</param>
            <param name="doubleClickEvent">鼠标双击控件时引发的事件。</param>
            <param name="mouseEnterEvent">鼠标进入控件时引发的事件。</param>
            <param name="mouseLeaveEvent">鼠标离开控件时引发的事件。</param>
            <param name="font">控件的字体。</param>
            <param name="mouseOverFont">鼠标位于控件内时的字体。</param>
            <param name="mouseDownFont">鼠标按下控件时的字体。</param>
            <param name="foreColor">控件的前景色。</param>
            <param name="mouseOverForeColor">鼠标位于控件内时的前景色。</param>
            <param name="mouseDownForeColor">鼠标按下控件时的前景色。</param>
        </member>
        <member name="M:Com.WinForm.ControlSubstitution.LabelAsButton(System.Windows.Forms.Label,System.EventHandler,System.EventHandler,System.EventHandler,System.EventHandler,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color)">
            <summary>
            将 Label 控件作为 Button 控件使用。
            </summary>
            <param name="label">Label 控件。</param>
            <param name="clickEvent">鼠标单击控件时引发的事件。</param>
            <param name="doubleClickEvent">鼠标双击控件时引发的事件。</param>
            <param name="mouseEnterEvent">鼠标进入控件时引发的事件。</param>
            <param name="mouseLeaveEvent">鼠标离开控件时引发的事件。</param>
            <param name="backColor">控件的背景色。</param>
            <param name="mouseOverBackColor">鼠标位于控件内时的背景色。</param>
            <param name="mouseDownBackColor">鼠标按下控件时的背景色。</param>
            <param name="foreColor">控件的前景色。</param>
            <param name="mouseOverForeColor">鼠标位于控件内时的前景色。</param>
            <param name="mouseDownForeColor">鼠标按下控件时的前景色。</param>
        </member>
        <member name="M:Com.WinForm.ControlSubstitution.LabelAsButton(System.Windows.Forms.Label,System.EventHandler,System.EventHandler,System.EventHandler,System.EventHandler,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color)">
            <summary>
            将 Label 控件作为 Button 控件使用。
            </summary>
            <param name="label">Label 控件。</param>
            <param name="clickEvent">鼠标单击控件时引发的事件。</param>
            <param name="doubleClickEvent">鼠标双击控件时引发的事件。</param>
            <param name="mouseEnterEvent">鼠标进入控件时引发的事件。</param>
            <param name="mouseLeaveEvent">鼠标离开控件时引发的事件。</param>
            <param name="backColor">控件的背景色。</param>
            <param name="mouseOverBackColor">鼠标位于控件内时的背景色。</param>
            <param name="mouseDownBackColor">鼠标按下控件时的背景色。</param>
        </member>
        <member name="M:Com.WinForm.ControlSubstitution.LabelAsButton(System.Windows.Forms.Label,System.EventHandler,System.EventHandler,System.EventHandler,System.EventHandler)">
            <summary>
            将 Label 控件作为 Button 控件使用。
            </summary>
            <param name="label">Label 控件。</param>
            <param name="clickEvent">鼠标单击控件时引发的事件。</param>
            <param name="doubleClickEvent">鼠标双击控件时引发的事件。</param>
            <param name="mouseEnterEvent">鼠标进入控件时引发的事件。</param>
            <param name="mouseLeaveEvent">鼠标离开控件时引发的事件。</param>
        </member>
        <member name="M:Com.WinForm.ControlSubstitution.LabelAsButton(System.Windows.Forms.Label,System.EventHandler,System.EventHandler,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Font,System.Drawing.Font,System.Drawing.Font,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color)">
            <summary>
            将 Label 控件作为 Button 控件使用。
            </summary>
            <param name="label">Label 控件。</param>
            <param name="clickEvent">鼠标单击控件时引发的事件。</param>
            <param name="doubleClickEvent">鼠标双击控件时引发的事件。</param>
            <param name="backColor">控件的背景色。</param>
            <param name="mouseOverBackColor">鼠标位于控件内时的背景色。</param>
            <param name="mouseDownBackColor">鼠标按下控件时的背景色。</param>
            <param name="font">控件的字体。</param>
            <param name="mouseOverFont">鼠标位于控件内时的字体。</param>
            <param name="mouseDownFont">鼠标按下控件时的字体。</param>
            <param name="foreColor">控件的前景色。</param>
            <param name="mouseOverForeColor">鼠标位于控件内时的前景色。</param>
            <param name="mouseDownForeColor">鼠标按下控件时的前景色。</param>
        </member>
        <member name="M:Com.WinForm.ControlSubstitution.LabelAsButton(System.Windows.Forms.Label,System.EventHandler,System.EventHandler,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Font,System.Drawing.Font,System.Drawing.Font)">
            <summary>
            将 Label 控件作为 Button 控件使用。
            </summary>
            <param name="label">Label 控件。</param>
            <param name="clickEvent">鼠标单击控件时引发的事件。</param>
            <param name="doubleClickEvent">鼠标双击控件时引发的事件。</param>
            <param name="backColor">控件的背景色。</param>
            <param name="mouseOverBackColor">鼠标位于控件内时的背景色。</param>
            <param name="mouseDownBackColor">鼠标按下控件时的背景色。</param>
            <param name="font">控件的字体。</param>
            <param name="mouseOverFont">鼠标位于控件内时的字体。</param>
            <param name="mouseDownFont">鼠标按下控件时的字体。</param>
        </member>
        <member name="M:Com.WinForm.ControlSubstitution.LabelAsButton(System.Windows.Forms.Label,System.EventHandler,System.EventHandler,System.Drawing.Font,System.Drawing.Font,System.Drawing.Font,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color)">
            <summary>
            将 Label 控件作为 Button 控件使用。
            </summary>
            <param name="label">Label 控件。</param>
            <param name="clickEvent">鼠标单击控件时引发的事件。</param>
            <param name="doubleClickEvent">鼠标双击控件时引发的事件。</param>
            <param name="font">控件的字体。</param>
            <param name="mouseOverFont">鼠标位于控件内时的字体。</param>
            <param name="mouseDownFont">鼠标按下控件时的字体。</param>
            <param name="foreColor">控件的前景色。</param>
            <param name="mouseOverForeColor">鼠标位于控件内时的前景色。</param>
            <param name="mouseDownForeColor">鼠标按下控件时的前景色。</param>
        </member>
        <member name="M:Com.WinForm.ControlSubstitution.LabelAsButton(System.Windows.Forms.Label,System.EventHandler,System.EventHandler,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color)">
            <summary>
            将 Label 控件作为 Button 控件使用。
            </summary>
            <param name="label">Label 控件。</param>
            <param name="clickEvent">鼠标单击控件时引发的事件。</param>
            <param name="doubleClickEvent">鼠标双击控件时引发的事件。</param>
            <param name="backColor">控件的背景色。</param>
            <param name="mouseOverBackColor">鼠标位于控件内时的背景色。</param>
            <param name="mouseDownBackColor">鼠标按下控件时的背景色。</param>
            <param name="foreColor">控件的前景色。</param>
            <param name="mouseOverForeColor">鼠标位于控件内时的前景色。</param>
            <param name="mouseDownForeColor">鼠标按下控件时的前景色。</param>
        </member>
        <member name="M:Com.WinForm.ControlSubstitution.LabelAsButton(System.Windows.Forms.Label,System.EventHandler,System.EventHandler,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color)">
            <summary>
            将 Label 控件作为 Button 控件使用。
            </summary>
            <param name="label">Label 控件。</param>
            <param name="clickEvent">鼠标单击控件时引发的事件。</param>
            <param name="doubleClickEvent">鼠标双击控件时引发的事件。</param>
            <param name="backColor">控件的背景色。</param>
            <param name="mouseOverBackColor">鼠标位于控件内时的背景色。</param>
            <param name="mouseDownBackColor">鼠标按下控件时的背景色。</param>
        </member>
        <member name="M:Com.WinForm.ControlSubstitution.LabelAsButton(System.Windows.Forms.Label,System.EventHandler,System.EventHandler)">
            <summary>
            将 Label 控件作为 Button 控件使用。
            </summary>
            <param name="label">Label 控件。</param>
            <param name="clickEvent">鼠标单击控件时引发的事件。</param>
            <param name="doubleClickEvent">鼠标双击控件时引发的事件。</param>
        </member>
        <member name="M:Com.WinForm.ControlSubstitution.LabelAsButton(System.Windows.Forms.Label,System.EventHandler,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Font,System.Drawing.Font,System.Drawing.Font,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color)">
            <summary>
            将 Label 控件作为 Button 控件使用。
            </summary>
            <param name="label">Label 控件。</param>
            <param name="clickEvent">鼠标单击控件时引发的事件。</param>
            <param name="backColor">控件的背景色。</param>
            <param name="mouseOverBackColor">鼠标位于控件内时的背景色。</param>
            <param name="mouseDownBackColor">鼠标按下控件时的背景色。</param>
            <param name="font">控件的字体。</param>
            <param name="mouseOverFont">鼠标位于控件内时的字体。</param>
            <param name="mouseDownFont">鼠标按下控件时的字体。</param>
            <param name="foreColor">控件的前景色。</param>
            <param name="mouseOverForeColor">鼠标位于控件内时的前景色。</param>
            <param name="mouseDownForeColor">鼠标按下控件时的前景色。</param>
        </member>
        <member name="M:Com.WinForm.ControlSubstitution.LabelAsButton(System.Windows.Forms.Label,System.EventHandler,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Font,System.Drawing.Font,System.Drawing.Font)">
            <summary>
            将 Label 控件作为 Button 控件使用。
            </summary>
            <param name="label">Label 控件。</param>
            <param name="clickEvent">鼠标单击控件时引发的事件。</param>
            <param name="backColor">控件的背景色。</param>
            <param name="mouseOverBackColor">鼠标位于控件内时的背景色。</param>
            <param name="mouseDownBackColor">鼠标按下控件时的背景色。</param>
            <param name="font">控件的字体。</param>
            <param name="mouseOverFont">鼠标位于控件内时的字体。</param>
            <param name="mouseDownFont">鼠标按下控件时的字体。</param>
        </member>
        <member name="M:Com.WinForm.ControlSubstitution.LabelAsButton(System.Windows.Forms.Label,System.EventHandler,System.Drawing.Font,System.Drawing.Font,System.Drawing.Font,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color)">
            <summary>
            将 Label 控件作为 Button 控件使用。
            </summary>
            <param name="label">Label 控件。</param>
            <param name="clickEvent">鼠标单击控件时引发的事件。</param>
            <param name="font">控件的字体。</param>
            <param name="mouseOverFont">鼠标位于控件内时的字体。</param>
            <param name="mouseDownFont">鼠标按下控件时的字体。</param>
            <param name="foreColor">控件的前景色。</param>
            <param name="mouseOverForeColor">鼠标位于控件内时的前景色。</param>
            <param name="mouseDownForeColor">鼠标按下控件时的前景色。</param>
        </member>
        <member name="M:Com.WinForm.ControlSubstitution.LabelAsButton(System.Windows.Forms.Label,System.EventHandler,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color)">
            <summary>
            将 Label 控件作为 Button 控件使用。
            </summary>
            <param name="label">Label 控件。</param>
            <param name="clickEvent">鼠标单击控件时引发的事件。</param>
            <param name="backColor">控件的背景色。</param>
            <param name="mouseOverBackColor">鼠标位于控件内时的背景色。</param>
            <param name="mouseDownBackColor">鼠标按下控件时的背景色。</param>
            <param name="foreColor">控件的前景色。</param>
            <param name="mouseOverForeColor">鼠标位于控件内时的前景色。</param>
            <param name="mouseDownForeColor">鼠标按下控件时的前景色。</param>
        </member>
        <member name="M:Com.WinForm.ControlSubstitution.LabelAsButton(System.Windows.Forms.Label,System.EventHandler,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color)">
            <summary>
            将 Label 控件作为 Button 控件使用。
            </summary>
            <param name="label">Label 控件。</param>
            <param name="clickEvent">鼠标单击控件时引发的事件。</param>
            <param name="backColor">控件的背景色。</param>
            <param name="mouseOverBackColor">鼠标位于控件内时的背景色。</param>
            <param name="mouseDownBackColor">鼠标按下控件时的背景色。</param>
        </member>
        <member name="M:Com.WinForm.ControlSubstitution.LabelAsButton(System.Windows.Forms.Label,System.EventHandler)">
            <summary>
            将 Label 控件作为 Button 控件使用。
            </summary>
            <param name="label">Label 控件。</param>
            <param name="clickEvent">鼠标单击控件时引发的事件。</param>
        </member>
        <member name="M:Com.WinForm.ControlSubstitution.PictureBoxAsButton(System.Windows.Forms.PictureBox,System.EventHandler,System.EventHandler,System.EventHandler,System.EventHandler,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Image,System.Drawing.Image,System.Drawing.Image)">
            <summary>
            将 PictureBox 控件作为 Button 控件使用。
            </summary>
            <param name="pictureBox">PictureBox 控件。</param>
            <param name="clickEvent">鼠标单击控件时引发的事件。</param>
            <param name="doubleClickEvent">鼠标双击控件时引发的事件。</param>
            <param name="mouseEnterEvent">鼠标进入控件时引发的事件。</param>
            <param name="mouseLeaveEvent">鼠标离开控件时引发的事件。</param>
            <param name="backColor">控件的背景色。</param>
            <param name="mouseOverBackColor">鼠标位于控件内时的背景色。</param>
            <param name="mouseDownBackColor">鼠标按下控件时的背景色。</param>
            <param name="image">控件的图像。</param>
            <param name="mouseOverImage">鼠标位于控件内时的图像。</param>
            <param name="mouseDownImage">鼠标按下控件时的图像。</param>
        </member>
        <member name="M:Com.WinForm.ControlSubstitution.PictureBoxAsButton(System.Windows.Forms.PictureBox,System.EventHandler,System.EventHandler,System.EventHandler,System.EventHandler,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color)">
            <summary>
            将 PictureBox 控件作为 Button 控件使用。
            </summary>
            <param name="pictureBox">PictureBox 控件。</param>
            <param name="clickEvent">鼠标单击控件时引发的事件。</param>
            <param name="doubleClickEvent">鼠标双击控件时引发的事件。</param>
            <param name="mouseEnterEvent">鼠标进入控件时引发的事件。</param>
            <param name="mouseLeaveEvent">鼠标离开控件时引发的事件。</param>
            <param name="backColor">控件的背景色。</param>
            <param name="mouseOverBackColor">鼠标位于控件内时的背景色。</param>
            <param name="mouseDownBackColor">鼠标按下控件时的背景色。</param>
        </member>
        <member name="M:Com.WinForm.ControlSubstitution.PictureBoxAsButton(System.Windows.Forms.PictureBox,System.EventHandler,System.EventHandler,System.EventHandler,System.EventHandler,System.Drawing.Image,System.Drawing.Image,System.Drawing.Image)">
            <summary>
            将 PictureBox 控件作为 Button 控件使用。
            </summary>
            <param name="pictureBox">PictureBox 控件。</param>
            <param name="clickEvent">鼠标单击控件时引发的事件。</param>
            <param name="doubleClickEvent">鼠标双击控件时引发的事件。</param>
            <param name="mouseEnterEvent">鼠标进入控件时引发的事件。</param>
            <param name="mouseLeaveEvent">鼠标离开控件时引发的事件。</param>
            <param name="image">控件的图像。</param>
            <param name="mouseOverImage">鼠标位于控件内时的图像。</param>
            <param name="mouseDownImage">鼠标按下控件时的图像。</param>
        </member>
        <member name="M:Com.WinForm.ControlSubstitution.PictureBoxAsButton(System.Windows.Forms.PictureBox,System.EventHandler,System.EventHandler,System.EventHandler,System.EventHandler)">
            <summary>
            将 PictureBox 控件作为 Button 控件使用。
            </summary>
            <param name="pictureBox">PictureBox 控件。</param>
            <param name="clickEvent">鼠标单击控件时引发的事件。</param>
            <param name="doubleClickEvent">鼠标双击控件时引发的事件。</param>
            <param name="mouseEnterEvent">鼠标进入控件时引发的事件。</param>
            <param name="mouseLeaveEvent">鼠标离开控件时引发的事件。</param>
        </member>
        <member name="M:Com.WinForm.ControlSubstitution.PictureBoxAsButton(System.Windows.Forms.PictureBox,System.EventHandler,System.EventHandler,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Image,System.Drawing.Image,System.Drawing.Image)">
            <summary>
            将 PictureBox 控件作为 Button 控件使用。
            </summary>
            <param name="pictureBox">PictureBox 控件。</param>
            <param name="clickEvent">鼠标单击控件时引发的事件。</param>
            <param name="doubleClickEvent">鼠标双击控件时引发的事件。</param>
            <param name="backColor">控件的背景色。</param>
            <param name="mouseOverBackColor">鼠标位于控件内时的背景色。</param>
            <param name="mouseDownBackColor">鼠标按下控件时的背景色。</param>
            <param name="image">控件的图像。</param>
            <param name="mouseOverImage">鼠标位于控件内时的图像。</param>
            <param name="mouseDownImage">鼠标按下控件时的图像。</param>
        </member>
        <member name="M:Com.WinForm.ControlSubstitution.PictureBoxAsButton(System.Windows.Forms.PictureBox,System.EventHandler,System.EventHandler,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color)">
            <summary>
            将 PictureBox 控件作为 Button 控件使用。
            </summary>
            <param name="pictureBox">PictureBox 控件。</param>
            <param name="clickEvent">鼠标单击控件时引发的事件。</param>
            <param name="doubleClickEvent">鼠标双击控件时引发的事件。</param>
            <param name="backColor">控件的背景色。</param>
            <param name="mouseOverBackColor">鼠标位于控件内时的背景色。</param>
            <param name="mouseDownBackColor">鼠标按下控件时的背景色。</param>
        </member>
        <member name="M:Com.WinForm.ControlSubstitution.PictureBoxAsButton(System.Windows.Forms.PictureBox,System.EventHandler,System.EventHandler,System.Drawing.Image,System.Drawing.Image,System.Drawing.Image)">
            <summary>
            将 PictureBox 控件作为 Button 控件使用。
            </summary>
            <param name="pictureBox">PictureBox 控件。</param>
            <param name="clickEvent">鼠标单击控件时引发的事件。</param>
            <param name="doubleClickEvent">鼠标双击控件时引发的事件。</param>
            <param name="image">控件的图像。</param>
            <param name="mouseOverImage">鼠标位于控件内时的图像。</param>
            <param name="mouseDownImage">鼠标按下控件时的图像。</param>
        </member>
        <member name="M:Com.WinForm.ControlSubstitution.PictureBoxAsButton(System.Windows.Forms.PictureBox,System.EventHandler,System.EventHandler)">
            <summary>
            将 PictureBox 控件作为 Button 控件使用。
            </summary>
            <param name="pictureBox">PictureBox 控件。</param>
            <param name="clickEvent">鼠标单击控件时引发的事件。</param>
            <param name="doubleClickEvent">鼠标双击控件时引发的事件。</param>
        </member>
        <member name="M:Com.WinForm.ControlSubstitution.PictureBoxAsButton(System.Windows.Forms.PictureBox,System.EventHandler,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Image,System.Drawing.Image,System.Drawing.Image)">
            <summary>
            将 PictureBox 控件作为 Button 控件使用。
            </summary>
            <param name="pictureBox">PictureBox 控件。</param>
            <param name="clickEvent">鼠标单击控件时引发的事件。</param>
            <param name="backColor">控件的背景色。</param>
            <param name="mouseOverBackColor">鼠标位于控件内时的背景色。</param>
            <param name="mouseDownBackColor">鼠标按下控件时的背景色。</param>
            <param name="image">控件的图像。</param>
            <param name="mouseOverImage">鼠标位于控件内时的图像。</param>
            <param name="mouseDownImage">鼠标按下控件时的图像。</param>
        </member>
        <member name="M:Com.WinForm.ControlSubstitution.PictureBoxAsButton(System.Windows.Forms.PictureBox,System.EventHandler,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color)">
            <summary>
            将 PictureBox 控件作为 Button 控件使用。
            </summary>
            <param name="pictureBox">PictureBox 控件。</param>
            <param name="clickEvent">鼠标单击控件时引发的事件。</param>
            <param name="backColor">控件的背景色。</param>
            <param name="mouseOverBackColor">鼠标位于控件内时的背景色。</param>
            <param name="mouseDownBackColor">鼠标按下控件时的背景色。</param>
        </member>
        <member name="M:Com.WinForm.ControlSubstitution.PictureBoxAsButton(System.Windows.Forms.PictureBox,System.EventHandler,System.Drawing.Image,System.Drawing.Image,System.Drawing.Image)">
            <summary>
            将 PictureBox 控件作为 Button 控件使用。
            </summary>
            <param name="pictureBox">PictureBox 控件。</param>
            <param name="clickEvent">鼠标单击控件时引发的事件。</param>
            <param name="image">控件的图像。</param>
            <param name="mouseOverImage">鼠标位于控件内时的图像。</param>
            <param name="mouseDownImage">鼠标按下控件时的图像。</param>
        </member>
        <member name="M:Com.WinForm.ControlSubstitution.PictureBoxAsButton(System.Windows.Forms.PictureBox,System.EventHandler)">
            <summary>
            将 PictureBox 控件作为 Button 控件使用。
            </summary>
            <param name="pictureBox">PictureBox 控件。</param>
            <param name="clickEvent">鼠标单击控件时引发的事件。</param>
        </member>
        <member name="T:Com.WinForm.Effect">
            <summary>
            窗口交互过程显示的效果。
            </summary>
        </member>
        <member name="F:Com.WinForm.Effect.None">
            <summary>
            不显示任何效果。
            </summary>
        </member>
        <member name="F:Com.WinForm.Effect.SmoothShift">
            <summary>
            显示平滑位移效果。
            </summary>
        </member>
        <member name="F:Com.WinForm.Effect.Fade">
            <summary>
            显示淡入淡出效果。
            </summary>
        </member>
        <member name="F:Com.WinForm.Effect.All">
            <summary>
            显示所有效果。
            </summary>
        </member>
        <member name="F:Com.WinForm.Resizer.components">
            <summary>
            必需的设计器变量。
            </summary>
        </member>
        <member name="M:Com.WinForm.Resizer.Dispose(System.Boolean)">
            <summary>
            清理所有正在使用的资源。
            </summary>
            <param name="disposing">如果应释放托管资源，为 true；否则为 false。</param>
        </member>
        <member name="M:Com.WinForm.Resizer.InitializeComponent">
            <summary>
            设计器支持所需的方法 - 不要
            使用代码编辑器修改此方法的内容。
            </summary>
        </member>
        <member name="T:Com.WinForm.FormManager">
            <summary>
            窗口管理器。
            </summary>
        </member>
        <member name="M:Com.WinForm.FormManager.#ctor(System.Windows.Forms.Form)">
            <summary>
            使用 Form 对象初始化 FormManager 的新实例。
            </summary>
            <param name="client">Form 对象，表示工作区。</param>
        </member>
        <member name="M:Com.WinForm.FormManager.#ctor(System.Windows.Forms.Form,Com.WinForm.FormManager)">
            <summary>
            使用 Form 对象与 FormManager 对象初始化 FormManager 的新实例。
            </summary>
            <param name="client">Form 对象，表示工作区。</param>
            <param name="owner">FormManager 对象，表示拥有此窗口的窗口的窗口管理器。</param>
        </member>
        <member name="P:Com.WinForm.FormManager.Owner">
            <summary>
            获取拥有此窗口的窗口的窗口管理器。
            </summary>
        </member>
        <member name="P:Com.WinForm.FormManager.Owned">
            <summary>
            获取表示此窗口拥有的所有窗口的窗口管理器数组。
            </summary>
        </member>
        <member name="P:Com.WinForm.FormManager.IsActive">
            <summary>
            获取表示窗口是否处于激活状态的布尔值。
            </summary>
        </member>
        <member name="P:Com.WinForm.FormManager.FormStyle">
            <summary>
            获取或设置窗口的样式。
            </summary>
        </member>
        <member name="P:Com.WinForm.FormManager.EnableMinimize">
            <summary>
            获取或设置表示是否允许窗口最小化的布尔值。
            </summary>
        </member>
        <member name="P:Com.WinForm.FormManager.EnableMaximize">
            <summary>
            获取或设置表示是否允许窗口最大化的布尔值。
            </summary>
        </member>
        <member name="P:Com.WinForm.FormManager.EnableFullScreen">
            <summary>
            获取或设置表示是否允许窗口以全屏幕模式运行的布尔值。
            </summary>
        </member>
        <member name="P:Com.WinForm.FormManager.ShowIconOnCaptionBar">
            <summary>
            获取或设置表示是否在窗口标题栏上显示图标的布尔值。
            </summary>
        </member>
        <member name="P:Com.WinForm.FormManager.ShowInTaskbar">
            <summary>
            获取或设置表示窗口是否在任务栏显示的布尔值。
            </summary>
        </member>
        <member name="P:Com.WinForm.FormManager.TopMost">
            <summary>
            获取或设置表示是否允许窗口置于顶层的布尔值。
            </summary>
        </member>
        <member name="P:Com.WinForm.FormManager.Effect">
            <summary>
            获取或设置窗口交互过程显示的效果。
            </summary>
        </member>
        <member name="P:Com.WinForm.FormManager.MinimumSize">
            <summary>
            获取或设置窗口的最小大小。
            </summary>
        </member>
        <member name="P:Com.WinForm.FormManager.MaximumSize">
            <summary>
            获取或设置窗口的最大大小。
            </summary>
        </member>
        <member name="P:Com.WinForm.FormManager.CaptionBarHeight">
            <summary>
            获取或设置窗口标题栏的高度。
            </summary>
        </member>
        <member name="P:Com.WinForm.FormManager.Enabled">
            <summary>
            获取或设置表示窗口是否对用户交互作出响应的布尔值。
            </summary>
        </member>
        <member name="P:Com.WinForm.FormManager.Visible">
            <summary>
            获取或设置表示窗口是否可见的布尔值。
            </summary>
        </member>
        <member name="P:Com.WinForm.FormManager.Opacity">
            <summary>
            获取或设置窗口的不透明度，取值范围为 [0, 1] 或 (1, 100]。
            </summary>
        </member>
        <member name="P:Com.WinForm.FormManager.Caption">
            <summary>
            获取或设置窗口的标题。
            </summary>
        </member>
        <member name="P:Com.WinForm.FormManager.ShowCaption">
            <summary>
            获取或设置表示是否在窗口标题栏上显示窗口的标题的布尔值。
            </summary>
        </member>
        <member name="P:Com.WinForm.FormManager.CaptionFont">
            <summary>
            获取或设置窗口标题的字体。
            </summary>
        </member>
        <member name="P:Com.WinForm.FormManager.CaptionAlign">
            <summary>
            获取或设置窗口标题的文本对齐方式。
            </summary>
        </member>
        <member name="P:Com.WinForm.FormManager.CaptionBarBackgroundImage">
            <summary>
            获取或设置窗口标题栏的背景图像。
            </summary>
        </member>
        <member name="P:Com.WinForm.FormManager.Theme">
            <summary>
            获取或设置窗口的主题。
            </summary>
        </member>
        <member name="P:Com.WinForm.FormManager.ThemeColor">
            <summary>
            获取或设置窗口的主题色。
            </summary>
        </member>
        <member name="P:Com.WinForm.FormManager.ShowCaptionBarColor">
            <summary>
            获取或设置表示是否在窗口标题栏上显示主题色的布尔值。
            </summary>
        </member>
        <member name="P:Com.WinForm.FormManager.EnableCaptionBarTransparent">
            <summary>
            获取或设置表示是否允许以半透明方式显示窗口标题栏的布尔值。
            </summary>
        </member>
        <member name="P:Com.WinForm.FormManager.ShowShadowColor">
            <summary>
            获取或设置表示是否在窗口阴影显示主题色的布尔值。
            </summary>
        </member>
        <member name="P:Com.WinForm.FormManager.RecommendColors">
            <summary>
            获取当前主题建议的颜色。
            </summary>
        </member>
        <member name="P:Com.WinForm.FormManager.FormState">
            <summary>
            获取或设置窗口的状态。
            </summary>
        </member>
        <member name="P:Com.WinForm.FormManager.X">
            <summary>
            获取或设置窗口在桌面的左边距。
            </summary>
        </member>
        <member name="P:Com.WinForm.FormManager.Y">
            <summary>
            获取或设置窗口在桌面的上边距。
            </summary>
        </member>
        <member name="P:Com.WinForm.FormManager.Left">
            <summary>
            获取或设置窗口在桌面的左边距。
            </summary>
        </member>
        <member name="P:Com.WinForm.FormManager.Right">
            <summary>
            获取窗口在桌面的右边距。
            </summary>
        </member>
        <member name="P:Com.WinForm.FormManager.Top">
            <summary>
            获取或设置窗口在桌面的上边距。
            </summary>
        </member>
        <member name="P:Com.WinForm.FormManager.Bottom">
            <summary>
            获取窗口在桌面的下边距。
            </summary>
        </member>
        <member name="P:Com.WinForm.FormManager.Location">
            <summary>
            获取或设置窗口在桌面的位置。
            </summary>
        </member>
        <member name="P:Com.WinForm.FormManager.Width">
            <summary>
            获取或设置窗口的宽度。
            </summary>
        </member>
        <member name="P:Com.WinForm.FormManager.Height">
            <summary>
            获取或设置窗口的高度。
            </summary>
        </member>
        <member name="P:Com.WinForm.FormManager.Size">
            <summary>
            获取或设置窗口的大小。
            </summary>
        </member>
        <member name="P:Com.WinForm.FormManager.Bounds">
            <summary>
            获取或设置窗口的位置与大小。
            </summary>
        </member>
        <member name="P:Com.WinForm.FormManager.ClientLocation">
            <summary>
            获取或设置窗口的工作区的位置。
            </summary>
        </member>
        <member name="P:Com.WinForm.FormManager.ClientSize">
            <summary>
            获取或设置窗口的工作区的大小。
            </summary>
        </member>
        <member name="P:Com.WinForm.FormManager.ClientBounds">
            <summary>
            获取或设置窗口的工作区的位置与大小。
            </summary>
        </member>
        <member name="P:Com.WinForm.FormManager.ReturnVerification">
            <summary>
            设置用于验证是否允许窗口还原的方法。
            </summary>
        </member>
        <member name="P:Com.WinForm.FormManager.MaximizeVerification">
            <summary>
            设置用于验证是否允许窗口最大化的方法。
            </summary>
        </member>
        <member name="P:Com.WinForm.FormManager.EnterFullScreenVerification">
            <summary>
            设置用于验证是否允许窗口进入全屏的方法。
            </summary>
        </member>
        <member name="P:Com.WinForm.FormManager.ExitFullScreenVerification">
            <summary>
            设置用于验证是否允许窗口退出全屏的方法。
            </summary>
        </member>
        <member name="P:Com.WinForm.FormManager.CloseVerification">
            <summary>
            设置用于验证是否允许窗口关闭的方法。
            </summary>
        </member>
        <member name="E:Com.WinForm.FormManager.Loading">
            <summary>
            在窗口加载时发生。
            </summary>
        </member>
        <member name="E:Com.WinForm.FormManager.Loaded">
            <summary>
            在窗口加载后发生。
            </summary>
        </member>
        <member name="E:Com.WinForm.FormManager.Closing">
            <summary>
            在窗口关闭时发生。
            </summary>
        </member>
        <member name="E:Com.WinForm.FormManager.Closed">
            <summary>
            在窗口关闭后发生。
            </summary>
        </member>
        <member name="E:Com.WinForm.FormManager.Activated">
            <summary>
            在窗口变为激活状态时发生。
            </summary>
        </member>
        <member name="E:Com.WinForm.FormManager.Deactivate">
            <summary>
            在窗口变为非激活状态时发生。
            </summary>
        </member>
        <member name="E:Com.WinForm.FormManager.Move">
            <summary>
            在窗口移动时发生。
            </summary>
        </member>
        <member name="E:Com.WinForm.FormManager.LocationChanged">
            <summary>
            在窗口的位置更改时发生。
            </summary>
        </member>
        <member name="E:Com.WinForm.FormManager.Resize">
            <summary>
            在窗口的大小调整时发生。
            </summary>
        </member>
        <member name="E:Com.WinForm.FormManager.SizeChanged">
            <summary>
            在窗口的大小更改时发生。
            </summary>
        </member>
        <member name="E:Com.WinForm.FormManager.FormStateChanged">
            <summary>
            在窗口的状态更改时发生。
            </summary>
        </member>
        <member name="E:Com.WinForm.FormManager.EnabledChanged">
            <summary>
            在表示窗口是否对用户交互作出响应的布尔值更改时发生。
            </summary>
        </member>
        <member name="E:Com.WinForm.FormManager.VisibleChanged">
            <summary>
            在表示窗口是否可见的布尔值更改时发生。
            </summary>
        </member>
        <member name="E:Com.WinForm.FormManager.OpacityChanged">
            <summary>
            在窗口的不透明度更改时发生。
            </summary>
        </member>
        <member name="E:Com.WinForm.FormManager.CaptionChanged">
            <summary>
            在窗口的标题更改时发生。
            </summary>
        </member>
        <member name="E:Com.WinForm.FormManager.ThemeChanged">
            <summary>
            在窗口的主题更改时发生。
            </summary>
        </member>
        <member name="E:Com.WinForm.FormManager.ThemeColorChanged">
            <summary>
            在窗口的主题色更改时发生。
            </summary>
        </member>
        <member name="M:Com.WinForm.FormManager.Equals(System.Object)">
            <summary>
            判断此 FormManager 是否与指定的对象相等。
            </summary>
            <param name="obj">用于比较的对象。</param>
            <returns>布尔值，表示此 FormManager 是否与指定的对象相等。</returns>
        </member>
        <member name="M:Com.WinForm.FormManager.GetHashCode">
            <summary>
            返回此 FormManager 的哈希代码。
            </summary>
            <returns>32 位整数，表示此 FormManager 的哈希代码。</returns>
        </member>
        <member name="M:Com.WinForm.FormManager.ToString">
            <summary>
            将此 FormManager 转换为字符串。
            </summary>
            <returns>字符串，表示此 FormManager 的字符串形式。</returns>
        </member>
        <member name="M:Com.WinForm.FormManager.Equals(Com.WinForm.FormManager)">
            <summary>
            判断此 FormManager 是否与指定的 FormManager 对象相等。
            </summary>
            <param name="formManager">用于比较的 FormManager 对象。</param>
            <returns>布尔值，表示此 FormManager 是否与指定的 FormManager 对象相等。</returns>
        </member>
        <member name="M:Com.WinForm.FormManager.Return">
            <summary>
            使窗口还原至普通大小。
            </summary>
            <returns>布尔值，表示此操作是否成功执行。</returns>
        </member>
        <member name="M:Com.WinForm.FormManager.Minimize">
            <summary>
            使窗口最小化至任务栏。
            </summary>
            <returns>布尔值，表示此操作是否成功执行。</returns>
        </member>
        <member name="M:Com.WinForm.FormManager.Maximize">
            <summary>
            使窗口最大化。
            </summary>
            <returns>布尔值，表示此操作是否成功执行。</returns>
        </member>
        <member name="M:Com.WinForm.FormManager.EnterFullScreen">
            <summary>
            使窗口进入全屏幕模式。
            </summary>
            <returns>布尔值，表示此操作是否成功执行。</returns>
        </member>
        <member name="M:Com.WinForm.FormManager.ExitFullScreen">
            <summary>
            使窗口退出全屏幕模式。
            </summary>
            <returns>布尔值，表示此操作是否成功执行。</returns>
        </member>
        <member name="M:Com.WinForm.FormManager.LeftHalfScreen">
            <summary>
            使窗口占据桌面的左半区域。
            </summary>
            <returns>布尔值，表示此操作是否成功执行。</returns>
        </member>
        <member name="M:Com.WinForm.FormManager.RightHalfScreen">
            <summary>
            使窗口占据桌面的右半区域。
            </summary>
            <returns>布尔值，表示此操作是否成功执行。</returns>
        </member>
        <member name="M:Com.WinForm.FormManager.HighAsScreen">
            <summary>
            使窗口与桌面的高度相同。
            </summary>
            <returns>布尔值，表示此操作是否成功执行。</returns>
        </member>
        <member name="M:Com.WinForm.FormManager.TopLeftQuarterScreen">
            <summary>
            使窗口占据桌面的左上四分之一区域。
            </summary>
            <returns>布尔值，表示此操作是否成功执行。</returns>
        </member>
        <member name="M:Com.WinForm.FormManager.TopRightQuarterScreen">
            <summary>
            使窗口占据桌面的右上四分之一区域。
            </summary>
            <returns>布尔值，表示此操作是否成功执行。</returns>
        </member>
        <member name="M:Com.WinForm.FormManager.BottomLeftQuarterScreen">
            <summary>
            使窗口占据桌面的左下四分之一区域。
            </summary>
            <returns>布尔值，表示此操作是否成功执行。</returns>
        </member>
        <member name="M:Com.WinForm.FormManager.BottomRightQuarterScreen">
            <summary>
            使窗口占据桌面的右下四分之一区域。
            </summary>
            <returns>布尔值，表示此操作是否成功执行。</returns>
        </member>
        <member name="M:Com.WinForm.FormManager.Close">
            <summary>
            关闭窗口。
            </summary>
            <returns>布尔值，表示此操作是否成功执行。</returns>
        </member>
        <member name="M:Com.WinForm.FormManager.OnLoading">
            <summary>
            引发 Loading 事件。
            </summary>
        </member>
        <member name="M:Com.WinForm.FormManager.OnLoaded">
            <summary>
            引发 Loaded 事件。
            </summary>
        </member>
        <member name="M:Com.WinForm.FormManager.OnClosing">
            <summary>
            引发 Closing 事件。
            </summary>
        </member>
        <member name="M:Com.WinForm.FormManager.OnClosed">
            <summary>
            引发 Closed 事件。
            </summary>
        </member>
        <member name="M:Com.WinForm.FormManager.OnMove">
            <summary>
            引发 Move 事件。
            </summary>
        </member>
        <member name="M:Com.WinForm.FormManager.OnLocationChanged">
            <summary>
            引发 LocationChanged 事件。
            </summary>
        </member>
        <member name="M:Com.WinForm.FormManager.OnResize">
            <summary>
            引发 Resize 事件。
            </summary>
        </member>
        <member name="M:Com.WinForm.FormManager.OnSizeChanged">
            <summary>
            引发 SizeChanged 事件。
            </summary>
        </member>
        <member name="M:Com.WinForm.FormManager.OnFormStateChanged">
            <summary>
            引发 FormStateChanged 事件。
            </summary>
        </member>
        <member name="M:Com.WinForm.FormManager.OnEnabledChanged">
            <summary>
            引发 EnabledChanged 事件。
            </summary>
        </member>
        <member name="M:Com.WinForm.FormManager.OnVisibleChanged">
            <summary>
            引发 VisibleChanged 事件。
            </summary>
        </member>
        <member name="M:Com.WinForm.FormManager.OnOpacityChanged">
            <summary>
            引发 OpacityChanged 事件。
            </summary>
        </member>
        <member name="M:Com.WinForm.FormManager.OnCaptionChanged">
            <summary>
            引发 CaptionChanged 事件。
            </summary>
        </member>
        <member name="M:Com.WinForm.FormManager.OnThemeChanged">
            <summary>
            引发 ThemeChanged 事件。
            </summary>
        </member>
        <member name="M:Com.WinForm.FormManager.OnThemeColorChanged">
            <summary>
            引发 ThemeColorChanged 事件。
            </summary>
        </member>
        <member name="M:Com.WinForm.FormManager.Equals(Com.WinForm.FormManager,Com.WinForm.FormManager)">
            <summary>
            判断两个 FormManager 对象是否相等。
            </summary>
            <param name="left">用于比较的第一个 FormManager 对象。</param>
            <param name="right">用于比较的第二个 FormManager 对象。</param>
            <returns>布尔值，表示此 FormManager 是否与指定的 FormManager 对象相等。</returns>
        </member>
        <member name="M:Com.WinForm.FormManager.op_Equality(Com.WinForm.FormManager,Com.WinForm.FormManager)">
            <summary>
            判断两个 FormManager 对象是否相等。
            </summary>
            <param name="left">运算符左侧比较的 FormManager 对象。</param>
            <param name="right">运算符右侧比较的 FormManager 对象。</param>
            <returns>布尔值，表示两个 FormManager 对象是否相等。</returns>
        </member>
        <member name="M:Com.WinForm.FormManager.op_Inequality(Com.WinForm.FormManager,Com.WinForm.FormManager)">
            <summary>
            判断两个 FormManager 对象是否不相等。
            </summary>
            <param name="left">运算符左侧比较的 FormManager 对象。</param>
            <param name="right">运算符右侧比较的 FormManager 对象。</param>
            <returns>布尔值，表示两个 FormManager 对象是否不相等。</returns>
        </member>
        <member name="T:Com.WinForm.FormState">
            <summary>
            窗口状态。
            </summary>
        </member>
        <member name="F:Com.WinForm.FormState.Normal">
            <summary>
            普通大小的窗口。
            </summary>
        </member>
        <member name="F:Com.WinForm.FormState.Minimized">
            <summary>
            最小化的窗口。
            </summary>
        </member>
        <member name="F:Com.WinForm.FormState.Maximized">
            <summary>
            最大化的窗口。
            </summary>
        </member>
        <member name="F:Com.WinForm.FormState.FullScreen">
            <summary>
            全屏幕的窗口。
            </summary>
        </member>
        <member name="F:Com.WinForm.FormState.HighAsScreen">
            <summary>
            与桌面高度相同的窗口。
            </summary>
        </member>
        <member name="F:Com.WinForm.FormState.QuarterScreen">
            <summary>
            占据桌面四分之一的窗口。
            </summary>
        </member>
        <member name="T:Com.WinForm.FormStyle">
            <summary>
            窗口样式。
            </summary>
        </member>
        <member name="F:Com.WinForm.FormStyle.Sizable">
            <summary>
            大小可调的窗口。
            </summary>
        </member>
        <member name="F:Com.WinForm.FormStyle.Fixed">
            <summary>
            大小固定的窗口。
            </summary>
        </member>
        <member name="F:Com.WinForm.SplashScreen.components">
            <summary>
            必需的设计器变量。
            </summary>
        </member>
        <member name="M:Com.WinForm.SplashScreen.Dispose(System.Boolean)">
            <summary>
            清理所有正在使用的资源。
            </summary>
            <param name="disposing">如果应释放托管资源，为 true；否则为 false。</param>
        </member>
        <member name="M:Com.WinForm.SplashScreen.InitializeComponent">
            <summary>
            设计器支持所需的方法 - 不要
            使用代码编辑器修改此方法的内容。
            </summary>
        </member>
        <member name="F:Com.WinForm.CaptionBar.components">
            <summary>
            必需的设计器变量。
            </summary>
        </member>
        <member name="M:Com.WinForm.CaptionBar.Dispose(System.Boolean)">
            <summary>
            清理所有正在使用的资源。
            </summary>
            <param name="disposing">如果应释放托管资源，为 true；否则为 false。</param>
        </member>
        <member name="M:Com.WinForm.CaptionBar.InitializeComponent">
            <summary>
            设计器支持所需的方法 - 不要
            使用代码编辑器修改此方法的内容。
            </summary>
        </member>
        <member name="T:Com.WinForm.UIMessageProcessorState">
            <summary>
            界面消息处理器状态。
            </summary>
        </member>
        <member name="F:Com.WinForm.UIMessageProcessorState.Stopped">
            <summary>
            消息处理器尚未开始运行消息循环或已停止运行消息循环。
            </summary>
        </member>
        <member name="F:Com.WinForm.UIMessageProcessorState.Running">
            <summary>
            消息处理器正在运行消息循环。
            </summary>
        </member>
        <member name="F:Com.WinForm.UIMessageProcessorState.Stopping">
            <summary>
            消息处理器正在停止运行消息循环，仍有未处理完的消息在处理。
            </summary>
        </member>
        <member name="T:Com.WinForm.UIMessageState">
            <summary>
            界面消息状态。
            </summary>
        </member>
        <member name="F:Com.WinForm.UIMessageState.Created">
            <summary>
            已创建消息，但尚未推送给消息处理器。
            </summary>
        </member>
        <member name="F:Com.WinForm.UIMessageState.WaitingToProcess">
            <summary>
            此消息已推送给消息处理器，但消息处理器尚未开始处理。
            </summary>
        </member>
        <member name="F:Com.WinForm.UIMessageState.Processing">
            <summary>
            消息处理器已开始处理此消息，但尚未完成。
            </summary>
        </member>
        <member name="F:Com.WinForm.UIMessageState.ProcessCompleted">
            <summary>
            消息处理器已成功处理此消息。
            </summary>
        </member>
        <member name="F:Com.WinForm.UIMessageState.ProcessFailed">
            <summary>
            消息处理器已处理此消息，但发生了异常。
            </summary>
        </member>
        <member name="F:Com.WinForm.UIMessageState.Discarded">
            <summary>
            消息处理器已丢弃此消息。
            </summary>
        </member>
        <member name="T:Com.WinForm.UIMessageProcessedHandler">
            <summary>
            表示当界面消息处理完成时应执行的方法。
            </summary>
            <param name="sender">发送界面消息的控件。</param>
            <param name="message">界面消息。</param>
        </member>
        <member name="T:Com.WinForm.UIMessage">
            <summary>
            界面消息。
            </summary>
        </member>
        <member name="M:Com.WinForm.UIMessage.#ctor(System.Int32)">
            <summary>
            使用消息码初始化 UIMessage 的新实例。
            </summary>
            <param name="messageCode">消息码。</param>
        </member>
        <member name="M:Com.WinForm.UIMessage.#ctor(System.Int32,System.Boolean)">
            <summary>
            使用消息码与表示是否允许异步处理的布尔值初始化 UIMessage 的新实例。
            </summary>
            <param name="messageCode">消息码。</param>
            <param name="allowAsync">是否允许异步处理。</param>
        </member>
        <member name="M:Com.WinForm.UIMessage.#ctor(System.Int32,System.Boolean,System.Boolean)">
            <summary>
            使用消息码、表示是否允许异步处理的布尔值与表示是否允许丢弃的布尔值初始化 UIMessage 的新实例。
            </summary>
            <param name="messageCode">消息码。</param>
            <param name="allowAsync">是否允许异步处理。</param>
            <param name="allowDiscard">是否允许丢弃。</param>
        </member>
        <member name="M:Com.WinForm.UIMessage.#ctor(System.Int32,System.Windows.Forms.Control,Com.WinForm.UIMessageProcessedHandler)">
            <summary>
            使用消息码、发送界面消息的控件与回调方法初始化 UIMessage 的新实例。
            </summary>
            <param name="messageCode">消息码。</param>
            <param name="sender">发送界面消息的控件。</param>
            <param name="callbackMethod">回调方法。</param>
        </member>
        <member name="M:Com.WinForm.UIMessage.#ctor(System.Int32,System.Windows.Forms.Control,Com.WinForm.UIMessageProcessedHandler,System.Boolean)">
            <summary>
            使用消息码、发送界面消息的控件、回调方法与表示是否允许异步处理的布尔值初始化 UIMessage 的新实例。
            </summary>
            <param name="messageCode">消息码。</param>
            <param name="sender">发送界面消息的控件。</param>
            <param name="callbackMethod">回调方法。</param>
            <param name="allowAsync">是否允许异步处理。</param>
        </member>
        <member name="M:Com.WinForm.UIMessage.#ctor(System.Int32,System.Windows.Forms.Control,Com.WinForm.UIMessageProcessedHandler,System.Boolean,System.Boolean)">
            <summary>
            使用消息码、发送界面消息的控件、回调方法、表示是否允许异步处理的布尔值与表示是否允许丢弃的布尔值初始化 UIMessage 的新实例。
            </summary>
            <param name="messageCode">消息码。</param>
            <param name="sender">发送界面消息的控件。</param>
            <param name="callbackMethod">回调方法。</param>
            <param name="allowAsync">是否允许异步处理。</param>
            <param name="allowDiscard">是否允许丢弃。</param>
        </member>
        <member name="M:Com.WinForm.UIMessage.#ctor(System.Int32,System.Windows.Forms.Control,Com.WinForm.UIMessageProcessedHandler,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            使用消息码、发送界面消息的控件、回调方法、表示是否允许异步处理的布尔值、表示是否允许丢弃的布尔值与表示被丢弃时是否需要答复的布尔值初始化 UIMessage 的新实例。
            </summary>
            <param name="messageCode">消息码。</param>
            <param name="sender">发送界面消息的控件。</param>
            <param name="callbackMethod">回调方法。</param>
            <param name="allowAsync">是否允许异步处理。</param>
            <param name="allowDiscard">是否允许丢弃。</param>
            <param name="replyWhenDiscarded">被丢弃时是否需要答复。</param>
        </member>
        <member name="M:Com.WinForm.UIMessage.Finalize">
            <summary>
            在垃圾回收将此 UIMessage 对象回收前尝试释放资源并执行其他清理操作。
            </summary>
        </member>
        <member name="P:Com.WinForm.UIMessage.Uid">
            <summary>
            获取此界面消息的唯一码。
            </summary>
        </member>
        <member name="P:Com.WinForm.UIMessage.MessageCode">
            <summary>
            获取此界面消息的消息码。
            </summary>
        </member>
        <member name="P:Com.WinForm.UIMessage.AllowAsync">
            <summary>
            获取表示此界面消息是否允许异步处理的布尔值。
            </summary>
        </member>
        <member name="P:Com.WinForm.UIMessage.AllowDiscard">
            <summary>
            获取表示此界面消息是否允许丢弃的布尔值。
            </summary>
        </member>
        <member name="P:Com.WinForm.UIMessage.NeedReply">
            <summary>
            获取表示此界面消息是否需要答复（引发回调方法）的布尔值。
            </summary>
        </member>
        <member name="P:Com.WinForm.UIMessage.ReplyWhenDiscarded">
            <summary>
            获取表示此界面消息被丢弃时是否需要答复（引发回调方法）的布尔值。
            </summary>
        </member>
        <member name="P:Com.WinForm.UIMessage.CreateTime">
            <summary>
            获取此界面消息的创建时刻。
            </summary>
        </member>
        <member name="P:Com.WinForm.UIMessage.RequestTime">
            <summary>
            获取此界面消息的请求时刻。
            </summary>
        </member>
        <member name="P:Com.WinForm.UIMessage.ProcessStartTime">
            <summary>
            获取此界面消息开始处理的时刻。
            </summary>
        </member>
        <member name="P:Com.WinForm.UIMessage.ProcessFinishTime">
            <summary>
            获取此界面消息处理完毕的时刻。
            </summary>
        </member>
        <member name="P:Com.WinForm.UIMessage.ReplyTime">
            <summary>
            获取此界面消息的答复时刻。
            </summary>
        </member>
        <member name="P:Com.WinForm.UIMessage.State">
            <summary>
            获取此界面消息的状态。
            </summary>
        </member>
        <member name="P:Com.WinForm.UIMessage.Exception">
            <summary>
            获取此界面消息在处理时发生的异常。
            </summary>
        </member>
        <member name="P:Com.WinForm.UIMessage.RequestData">
            <summary>
            获取或设置此界面消息的请求数据。
            </summary>
        </member>
        <member name="P:Com.WinForm.UIMessage.ReplyData">
            <summary>
            获取或设置此界面消息的答复数据。
            </summary>
        </member>
        <member name="T:Com.WinForm.UIMessageProcessorStoppedHandler">
            <summary>
            表示当界面消息处理器停止时应执行的方法。
            </summary>
            <param name="sender">调用 Stop 方法的控件。</param>
            <param name="messageProcessor">界面消息处理器。</param>
        </member>
        <member name="T:Com.WinForm.UIMessageProcessor">
            <summary>
            界面消息处理器。
            </summary>
        </member>
        <member name="M:Com.WinForm.UIMessageProcessor.#ctor">
            <summary>
            不使用任何参数初始化 UIMessageProcessor 的新实例。
            </summary>
        </member>
        <member name="M:Com.WinForm.UIMessageProcessor.Finalize">
            <summary>
            在垃圾回收将此 UIMessageProcessor 对象回收前尝试释放资源并执行其他清理操作。
            </summary>
        </member>
        <member name="P:Com.WinForm.UIMessageProcessor.State">
            <summary>
            获取此界面消息的状态。
            </summary>
        </member>
        <member name="M:Com.WinForm.UIMessageProcessor.SelectAsyncMessagesForThisLoop(System.Collections.Generic.IEnumerable{Com.WinForm.UIMessage},System.Int32@,System.Collections.Generic.HashSet{System.Int64}@)">
            <summary>
            为当前循环选择要处理的异步消息的数量与要丢弃的异步消息的次序号。
            </summary>
            <param name="messages">供选择的异步消息。</param>
            <param name="processCount">要处理的异步消息的数量（包括要丢弃的异步消息的数量）。</param>
            <param name="discardUids">要丢弃的异步消息的唯一码。</param>
        </member>
        <member name="M:Com.WinForm.UIMessageProcessor.SelectSyncMessagesForThisLoop(System.Collections.Generic.IEnumerable{Com.WinForm.UIMessage},System.Int32@,System.Collections.Generic.HashSet{System.Int64}@)">
            <summary>
            为当前循环选择要处理的同步消息的数量与要丢弃的同步消息的次序号。
            </summary>
            <param name="messages">供选择的同步消息。</param>
            <param name="processCount">要处理的同步消息的数量（包括要丢弃的同步消息的数量）。</param>
            <param name="discardUids">要丢弃的同步消息的唯一码。</param>
        </member>
        <member name="M:Com.WinForm.UIMessageProcessor.ProcessMessage(Com.WinForm.UIMessage)">
            <summary>
            处理一个消息。
            </summary>
            <param name="message">消息。</param>
        </member>
        <member name="M:Com.WinForm.UIMessageProcessor.MessageLoop">
            <summary>
            执行一次消息循环。
            </summary>
        </member>
        <member name="M:Com.WinForm.UIMessageProcessor.Start">
            <summary>
            开始在此界面消息处理器上运行消息循环。
            </summary>
        </member>
        <member name="M:Com.WinForm.UIMessageProcessor.Stop">
            <summary>
            所有正在处理的消息处理完成后，停止在此界面消息处理器上运行消息循环。
            </summary>
        </member>
        <member name="M:Com.WinForm.UIMessageProcessor.Stop(System.Windows.Forms.Control,Com.WinForm.UIMessageProcessorStoppedHandler)">
            <summary>
            所有正在处理的消息处理完成后，停止在此界面消息处理器上运行消息循环。
            </summary>
            <param name="sender">调用此方法的控件。</param>
            <param name="callbackMethod">回调方法。</param>
        </member>
        <member name="M:Com.WinForm.UIMessageProcessor.PushMessage(Com.WinForm.UIMessage)">
            <summary>
            向此界面消息处理器推送一条消息。
            </summary>
            <param name="message">消息。</param>
        </member>
        <member name="T:Com.WinForm.RecommendColors">
            <summary>
            建议的颜色。
            </summary>
        </member>
        <member name="P:Com.WinForm.RecommendColors.FormBackground">
            <summary>
            获取窗口背景颜色。
            </summary>
        </member>
        <member name="P:Com.WinForm.RecommendColors.CaptionBar">
            <summary>
            获取窗口标题栏颜色。
            </summary>
        </member>
        <member name="P:Com.WinForm.RecommendColors.Caption">
            <summary>
            获取窗口标题颜色。
            </summary>
        </member>
        <member name="P:Com.WinForm.RecommendColors.Shadow">
            <summary>
            获取窗口阴影颜色。
            </summary>
        </member>
        <member name="P:Com.WinForm.RecommendColors.MenuItemBackground">
            <summary>
            获取菜单项背景颜色。
            </summary>
        </member>
        <member name="P:Com.WinForm.RecommendColors.MenuItemText">
            <summary>
            获取菜单项文字颜色。
            </summary>
        </member>
        <member name="P:Com.WinForm.RecommendColors.Main">
            <summary>
            获取主要颜色。
            </summary>
        </member>
        <member name="P:Com.WinForm.RecommendColors.Main_DEC">
            <summary>
            获取主要颜色（降低对比度）。
            </summary>
        </member>
        <member name="P:Com.WinForm.RecommendColors.Main_INC">
            <summary>
            获取主要颜色（提高对比度）。
            </summary>
        </member>
        <member name="P:Com.WinForm.RecommendColors.Text">
            <summary>
            获取文本颜色。
            </summary>
        </member>
        <member name="P:Com.WinForm.RecommendColors.Text_DEC">
            <summary>
            获取文本颜色（降低对比度）。
            </summary>
        </member>
        <member name="P:Com.WinForm.RecommendColors.Text_INC">
            <summary>
            获取文本颜色（提高对比度）。
            </summary>
        </member>
        <member name="P:Com.WinForm.RecommendColors.Background">
            <summary>
            获取背景颜色。
            </summary>
        </member>
        <member name="P:Com.WinForm.RecommendColors.Background_DEC">
            <summary>
            获取背景颜色（降低对比度）。
            </summary>
        </member>
        <member name="P:Com.WinForm.RecommendColors.Background_INC">
            <summary>
            获取背景颜色（提高对比度）。
            </summary>
        </member>
        <member name="P:Com.WinForm.RecommendColors.Border">
            <summary>
            获取边框颜色。
            </summary>
        </member>
        <member name="P:Com.WinForm.RecommendColors.Border_DEC">
            <summary>
            获取边框颜色（降低对比度）。
            </summary>
        </member>
        <member name="P:Com.WinForm.RecommendColors.Border_INC">
            <summary>
            获取边框颜色（提高对比度）。
            </summary>
        </member>
        <member name="P:Com.WinForm.RecommendColors.Button">
            <summary>
            获取按钮颜色。
            </summary>
        </member>
        <member name="P:Com.WinForm.RecommendColors.Button_DEC">
            <summary>
            获取按钮颜色（降低对比度）。
            </summary>
        </member>
        <member name="P:Com.WinForm.RecommendColors.Button_INC">
            <summary>
            获取按钮颜色（提高对比度）。
            </summary>
        </member>
        <member name="P:Com.WinForm.RecommendColors.Slider">
            <summary>
            获取滑块颜色。
            </summary>
        </member>
        <member name="P:Com.WinForm.RecommendColors.Slider_DEC">
            <summary>
            获取滑块颜色（降低对比度）。
            </summary>
        </member>
        <member name="P:Com.WinForm.RecommendColors.Slider_INC">
            <summary>
            获取滑块颜色（提高对比度）。
            </summary>
        </member>
        <member name="P:Com.WinForm.RecommendColors.ScrollBar">
            <summary>
            获取滚动条颜色。
            </summary>
        </member>
        <member name="P:Com.WinForm.RecommendColors.ScrollBar_DEC">
            <summary>
            获取滚动条颜色（降低对比度）。
            </summary>
        </member>
        <member name="P:Com.WinForm.RecommendColors.ScrollBar_INC">
            <summary>
            获取滚动条颜色（提高对比度）。
            </summary>
        </member>
        <member name="M:Com.WinForm.RecommendColors.Equals(System.Object)">
            <summary>
            判断此 RecommendColors 是否与指定的对象相等。
            </summary>
            <param name="obj">用于比较的对象。</param>
            <returns>布尔值，表示此 RecommendColors 是否与指定的对象相等。</returns>
        </member>
        <member name="M:Com.WinForm.RecommendColors.GetHashCode">
            <summary>
            返回此 RecommendColors 的哈希代码。
            </summary>
            <returns>32 位整数，表示此 RecommendColors 的哈希代码。</returns>
        </member>
        <member name="M:Com.WinForm.RecommendColors.ToString">
            <summary>
            将此 RecommendColors 转换为字符串。
            </summary>
            <returns>字符串，表示此 RecommendColors 的字符串形式。</returns>
        </member>
        <member name="M:Com.WinForm.RecommendColors.Equals(Com.WinForm.RecommendColors)">
            <summary>
            判断此 RecommendColors 是否与指定的 RecommendColors 对象相等。
            </summary>
            <param name="recommendColors">用于比较的 RecommendColors 对象。</param>
            <returns>布尔值，表示此 RecommendColors 是否与指定的 RecommendColors 对象相等。</returns>
        </member>
        <member name="M:Com.WinForm.RecommendColors.Equals(Com.WinForm.RecommendColors,Com.WinForm.RecommendColors)">
            <summary>
            判断两个 RecommendColors 对象是否相等。
            </summary>
            <param name="left">用于比较的第一个 RecommendColors 对象。</param>
            <param name="right">用于比较的第二个 RecommendColors 对象。</param>
            <returns>布尔值，表示两个 RecommendColors 对象是否相等。</returns>
        </member>
        <member name="M:Com.WinForm.RecommendColors.op_Equality(Com.WinForm.RecommendColors,Com.WinForm.RecommendColors)">
            <summary>
            判断两个 RecommendColors 对象是否相等。
            </summary>
            <param name="left">运算符左侧比较的 RecommendColors 对象。</param>
            <param name="right">运算符右侧比较的 RecommendColors 对象。</param>
            <returns>布尔值，表示两个 RecommendColors 对象是否相等。</returns>
        </member>
        <member name="M:Com.WinForm.RecommendColors.op_Inequality(Com.WinForm.RecommendColors,Com.WinForm.RecommendColors)">
            <summary>
            判断两个 RecommendColors 对象是否不相等。
            </summary>
            <param name="left">运算符左侧比较的 RecommendColors 对象。</param>
            <param name="right">运算符右侧比较的 RecommendColors 对象。</param>
            <returns>布尔值，表示两个 RecommendColors 对象是否不相等。</returns>
        </member>
        <member name="T:Com.WinForm.Theme">
            <summary>
            主题。
            </summary>
        </member>
        <member name="F:Com.WinForm.Theme.Colorful">
            <summary>
            彩色主题。
            </summary>
        </member>
        <member name="F:Com.WinForm.Theme.White">
            <summary>
            白色主题。
            </summary>
        </member>
        <member name="F:Com.WinForm.Theme.LightGray">
            <summary>
            浅灰色主题。
            </summary>
        </member>
        <member name="F:Com.WinForm.Theme.DarkGray">
            <summary>
            深灰色主题。
            </summary>
        </member>
        <member name="F:Com.WinForm.Theme.Black">
            <summary>
            黑色主题。
            </summary>
        </member>
        <member name="T:Com.AffineTransformation">
            <summary>
            表示一个仿射变换，或者由多个仿射变换构成的序列。
            </summary>
        </member>
        <member name="P:Com.AffineTransformation.IsEmpty">
            <summary>
            获取表示此 AffineTransformation 是否为空变换的布尔值。
            </summary>
        </member>
        <member name="P:Com.AffineTransformation.IsSingle">
            <summary>
            获取表示此 AffineTransformation 是否为单一变换的布尔值。
            </summary>
        </member>
        <member name="P:Com.AffineTransformation.IsMultiple">
            <summary>
            获取表示此 AffineTransformation 是否为复合变换的布尔值。
            </summary>
        </member>
        <member name="P:Com.AffineTransformation.Empty">
            <summary>
            获取表示空变换的 AffineTransformation 的新实例。
            </summary>
        </member>
        <member name="M:Com.AffineTransformation.Equals(System.Object)">
            <summary>
            判断此 AffineTransformation 是否与指定的对象相等。
            </summary>
            <param name="obj">用于比较的对象。</param>
            <returns>布尔值，表示此 AffineTransformation 是否与指定的对象相等。</returns>
        </member>
        <member name="M:Com.AffineTransformation.GetHashCode">
            <summary>
            返回此 AffineTransformation 的哈希代码。
            </summary>
            <returns>32 位整数，表示此 AffineTransformation 的哈希代码。</returns>
        </member>
        <member name="M:Com.AffineTransformation.ToString">
            <summary>
            将此 AffineTransformation 转换为字符串。
            </summary>
            <returns>字符串，表示此 AffineTransformation 的字符串形式。</returns>
        </member>
        <member name="M:Com.AffineTransformation.Equals(Com.AffineTransformation)">
            <summary>
            判断此 AffineTransformation 是否与指定的 AffineTransformation 对象相等。
            </summary>
            <param name="affineTransformation">用于比较的 AffineTransformation 对象。</param>
            <returns>布尔值，表示此 AffineTransformation 是否与指定的 AffineTransformation 对象相等。</returns>
        </member>
        <member name="M:Com.AffineTransformation.Copy">
            <summary>
            获取此 AffineTransformation 的副本。
            </summary>
            <returns>AffineTransformation 对象，表示此 AffineTransformation 的副本。</returns>
        </member>
        <member name="M:Com.AffineTransformation.Split">
            <summary>
            返回将此 AffineTransformation 分割为表示一系列单一变换的 AffineTransformation 数组。
            </summary>
            <returns>AffineTransformation 数组，表示将此 AffineTransformation 分割的结果。</returns>
        </member>
        <member name="M:Com.AffineTransformation.ToMatrix(Com.VectorType,System.Int32)">
            <summary>
            返回将此 AffineTransformation 转换为矩阵的 Matrix 的新实例。
            </summary>
            <param name="type">向量类型。</param>
            <param name="dimension">向量维度。</param>
            <returns>Matrix 对象，表示将此 AffineTransformation 转换为矩阵的结果。</returns>
        </member>
        <member name="M:Com.AffineTransformation.ToMatrix(Com.Vector.Type,System.Int32)">
            <summary>
            返回将此 AffineTransformation 转换为矩阵的 Matrix 的新实例。
            </summary>
            <param name="type">向量类型。</param>
            <param name="dimension">向量维度。</param>
            <returns>Matrix 对象，表示将此 AffineTransformation 转换为矩阵的结果。</returns>
        </member>
        <member name="M:Com.AffineTransformation.Compress(Com.VectorType,System.Int32)">
            <summary>
            将此 AffineTransformation 压缩为单一变换。
            </summary>
            <param name="type">向量类型。</param>
            <param name="dimension">向量维度。</param>
        </member>
        <member name="M:Com.AffineTransformation.Compress(Com.Vector.Type,System.Int32)">
            <summary>
            将此 AffineTransformation 压缩为单一变换。
            </summary>
            <param name="type">向量类型。</param>
            <param name="dimension">向量维度。</param>
        </member>
        <member name="M:Com.AffineTransformation.CompressCopy(Com.VectorType,System.Int32)">
            <summary>
            获取表示将此 AffineTransformation 压缩为单一变换的 AffineTransformation 的新实例。
            </summary>
            <param name="type">向量类型。</param>
            <param name="dimension">向量维度。</param>
            <returns>AffineTransformation 对象，表示将此 AffineTransformation 压缩后的单一变换。</returns>
        </member>
        <member name="M:Com.AffineTransformation.CompressCopy(Com.Vector.Type,System.Int32)">
            <summary>
            获取表示将此 AffineTransformation 压缩为单一变换的 AffineTransformation 的新实例。
            </summary>
            <param name="type">向量类型。</param>
            <param name="dimension">向量维度。</param>
            <returns>AffineTransformation 对象，表示将此 AffineTransformation 压缩后的单一变换。</returns>
        </member>
        <member name="M:Com.AffineTransformation.InverseTransform">
            <summary>
            将此 AffineTransformation 进行逆变换。
            </summary>
        </member>
        <member name="M:Com.AffineTransformation.InverseTransformCopy">
            <summary>
            获取表示将此 AffineTransformation 进行逆变换的 AffineTransformation 的新实例。
            </summary>
            <returns>AffineTransformation 对象，表示此 AffineTransformation 的逆变换。</returns>
        </member>
        <member name="M:Com.AffineTransformation.Offset(System.Int32,System.Double)">
            <summary>
            按双精度浮点数表示的位移对指定的基向量方向的分量平移指定的量。
            </summary>
            <param name="index">索引，用于指定平移的分量所在方向的基向量。</param>
            <param name="d">双精度浮点数表示的位移。</param>
        </member>
        <member name="M:Com.AffineTransformation.Offset(System.Double)">
            <summary>
            按双精度浮点数表示的位移对所有分量平移指定的量。
            </summary>
            <param name="d">双精度浮点数表示的位移。</param>
        </member>
        <member name="M:Com.AffineTransformation.OffsetCopy(System.Int32,System.Double)">
            <summary>
            返回表示按双精度浮点数表示的位移对指定的基向量方向的分量平移指定的量的 AffineTransformation 的新实例。
            </summary>
            <param name="index">索引，用于指定平移的分量所在方向的基向量。</param>
            <param name="d">双精度浮点数表示的位移。</param>
            <returns>AffineTransformation 对象，表示按双精度浮点数表示的位移对指定的基向量方向的分量平移指定的量。</returns>
        </member>
        <member name="M:Com.AffineTransformation.OffsetCopy(System.Double)">
            <summary>
            返回表示按双精度浮点数表示的位移对所有分量平移指定的量的 AffineTransformation 的新实例。
            </summary>
            <param name="d">双精度浮点数表示的位移。</param>
            <returns>AffineTransformation 对象，表示按双精度浮点数表示的位移对所有分量平移指定的量。</returns>
        </member>
        <member name="M:Com.AffineTransformation.Scale(System.Int32,System.Double)">
            <summary>
            按双精度浮点数表示的缩放因数对指定的基向量方向的分量缩放指定的倍数。
            </summary>
            <param name="index">索引，用于指定缩放的分量所在方向的基向量。</param>
            <param name="s">双精度浮点数表示的缩放因数。</param>
        </member>
        <member name="M:Com.AffineTransformation.Scale(System.Double)">
            <summary>
            按双精度浮点数表示的缩放因数对所有分量缩放指定的倍数。
            </summary>
            <param name="s">双精度浮点数表示的缩放因数。</param>
        </member>
        <member name="M:Com.AffineTransformation.ScaleCopy(System.Int32,System.Double)">
            <summary>
            返回表示按双精度浮点数表示的缩放因数对指定的基向量方向的分量缩放指定的倍数的 AffineTransformation 的新实例。
            </summary>
            <param name="index">索引，用于指定缩放的分量所在方向的基向量。</param>
            <param name="s">双精度浮点数表示的缩放因数。</param>
            <returns>AffineTransformation 对象，表示按双精度浮点数表示的缩放因数对指定的基向量方向的分量缩放指定的倍数。</returns>
        </member>
        <member name="M:Com.AffineTransformation.ScaleCopy(System.Double)">
            <summary>
            返回表示按双精度浮点数表示的缩放因数对所有分量缩放指定的倍数的 AffineTransformation 的新实例。
            </summary>
            <param name="s">双精度浮点数表示的缩放因数。</param>
            <returns>AffineTransformation 对象，表示按双精度浮点数表示的缩放因数对所有分量缩放指定的倍数。</returns>
        </member>
        <member name="M:Com.AffineTransformation.Reflect(System.Int32)">
            <summary>
            对指定的基向量方向的分量翻转。
            </summary>
            <param name="index">索引，用于指定翻转的分量所在方向的基向量。</param>
        </member>
        <member name="M:Com.AffineTransformation.ReflectCopy(System.Int32)">
            <summary>
            返回表示对指定的基向量方向的分量翻转的 AffineTransformation 的新实例。
            </summary>
            <param name="index">索引，用于指定翻转的分量所在方向的基向量。</param>
            <returns>AffineTransformation 对象，表示对指定的基向量方向的分量翻转。</returns>
        </member>
        <member name="M:Com.AffineTransformation.Shear(System.Int32,System.Int32,System.Double)">
            <summary>
            按双精度浮点数表示的弧度错切指定的角度。
            </summary>
            <param name="index1">索引，用于指定与错切方向同向的基向量。</param>
            <param name="index2">索引，用于指定与错切方向共面正交的基向量。</param>
            <param name="angle">双精度浮点数，表示沿索引 index1 指定的基向量方向且共面正交于 index2 指定的基向量方向错切的角度（弧度）。</param>
        </member>
        <member name="M:Com.AffineTransformation.ShearCopy(System.Int32,System.Int32,System.Double)">
            <summary>
            返回表示按双精度浮点数表示的弧度错切指定的角度的 AffineTransformation 的新实例。
            </summary>
            <param name="index1">索引，用于指定与错切方向同向的基向量。</param>
            <param name="index2">索引，用于指定与错切方向共面正交的基向量。</param>
            <param name="angle">双精度浮点数，表示沿索引 index1 指定的基向量方向且共面正交于 index2 指定的基向量方向错切的角度（弧度）。</param>
            <returns>AffineTransformation 对象，表示按双精度浮点数表示的弧度错切指定的角度。</returns>
        </member>
        <member name="M:Com.AffineTransformation.Rotate(System.Int32,System.Int32,System.Double)">
            <summary>
            按双精度浮点数表示的弧度旋转指定的角度。
            </summary>
            <param name="index1">索引，用于指定构成旋转轨迹所在平面的第一个基向量。</param>
            <param name="index2">索引，用于指定构成旋转轨迹所在平面的第二个基向量。</param>
            <param name="angle">双精度浮点数，表示绕索引 index1 与 index2 指定的基向量构成的平面的法向空间旋转的角度（弧度）（以索引 index1 指定的基向量为 0 弧度，从索引 index1 指定的基向量指向索引 index2 指定的基向量的方向为正方向）。</param>
        </member>
        <member name="M:Com.AffineTransformation.RotateCopy(System.Int32,System.Int32,System.Double)">
            <summary>
            返回表示按双精度浮点数表示的弧度旋转指定的角度的 AffineTransformation 的新实例。
            </summary>
            <param name="index1">索引，用于指定构成旋转轨迹所在平面的第一个基向量。</param>
            <param name="index2">索引，用于指定构成旋转轨迹所在平面的第二个基向量。</param>
            <param name="angle">双精度浮点数，表示绕索引 index1 与 index2 指定的基向量构成的平面的法向空间旋转的角度（弧度）（以索引 index1 指定的基向量为 0 弧度，从索引 index1 指定的基向量指向索引 index2 指定的基向量的方向为正方向）。</param>
            <returns>AffineTransformation 对象，表示按双精度浮点数表示的弧度旋转指定的角度。</returns>
        </member>
        <member name="M:Com.AffineTransformation.MatrixTransform(Com.Matrix)">
            <summary>
            按仿射矩阵进行仿射变换。
            </summary>
            <param name="matrix">仿射矩阵，对于列向量应为左矩阵，对于行向量应为右矩阵。</param>
        </member>
        <member name="M:Com.AffineTransformation.MatrixTransformCopy(Com.Matrix)">
            <summary>
            返回表示按仿射矩阵进行仿射变换的 AffineTransformation 的新实例。
            </summary>
            <param name="matrix">仿射矩阵，对于列向量应为左矩阵，对于行向量应为右矩阵。</param>
            <returns>AffineTransformation 对象，表示按仿射矩阵进行仿射变换。</returns>
        </member>
        <member name="M:Com.AffineTransformation.AffineTransform(Com.AffineTransformation)">
            <summary>
            按 AffineTransformation 对象进行仿射变换。
            </summary>
            <param name="affineTransformation">AffineTransformation 对象。</param>
        </member>
        <member name="M:Com.AffineTransformation.AffineTransformCopy(Com.AffineTransformation)">
            <summary>
            返回表示按 AffineTransformation 对象进行仿射变换的 AffineTransformation 的新实例。
            </summary>
            <param name="affineTransformation">AffineTransformation 对象。</param>
            <returns>AffineTransformation 对象，表示按 AffineTransformation 对象进行仿射变换。</returns>
        </member>
        <member name="M:Com.AffineTransformation.IsNullOrEmpty(Com.AffineTransformation)">
            <summary>
            判断指定的 AffineTransformation 是否为 null 或表示空向量。
            </summary>
            <param name="affineTransformation">用于判断的 AffineTransformation 对象。</param>
            <returns>布尔值，表示指定的 AffineTransformation 是否为 null 或表示空变换。</returns>
        </member>
        <member name="M:Com.AffineTransformation.Equals(Com.AffineTransformation,Com.AffineTransformation)">
            <summary>
            判断两个 AffineTransformation 对象是否相等。
            </summary>
            <param name="left">用于比较的第一个 AffineTransformation 对象。</param>
            <param name="right">用于比较的第二个 AffineTransformation 对象。</param>
            <returns>布尔值，表示两个 AffineTransformation 对象是否相等。</returns>
        </member>
        <member name="M:Com.AffineTransformation.Join(Com.AffineTransformation[])">
            <summary>
            返回将 AffineTransformation 对象数组合并为表示复合变换的 AffineTransformation 的新实例。
            </summary>
            <param name="affineTransformations">AffineTransformation 对象数组。</param>
            <returns>AffineTransformation 对象，表示将 AffineTransformation 对象数组合并的结果。</returns>
        </member>
        <member name="M:Com.AffineTransformation.Join(System.Collections.Generic.IEnumerable{Com.AffineTransformation})">
            <summary>
            返回将 AffineTransformation 对象枚举容器合并为表示复合变换的 AffineTransformation 的新实例。
            </summary>
            <param name="affineTransformations">AffineTransformation 对象枚举容器。</param>
            <returns>AffineTransformation 对象，表示将 AffineTransformation 对象枚举容器合并的结果。</returns>
        </member>
        <member name="M:Com.AffineTransformation.FromOffset(System.Int32,System.Double)">
            <summary>
            返回表示按双精度浮点数表示的位移对指定的基向量方向的分量平移指定的量的 AffineTransformation 的新实例。
            </summary>
            <param name="index">索引，用于指定平移的分量所在方向的基向量。</param>
            <param name="d">双精度浮点数表示的位移。</param>
            <returns>AffineTransformation 对象，表示按双精度浮点数表示的位移对指定的基向量方向的分量平移指定的量。</returns>
        </member>
        <member name="M:Com.AffineTransformation.FromOffset(System.Double)">
            <summary>
            返回表示按双精度浮点数表示的位移对所有分量平移指定的量的 AffineTransformation 的新实例。
            </summary>
            <param name="d">双精度浮点数表示的位移。</param>
            <returns>AffineTransformation 对象，表示按双精度浮点数表示的位移对所有分量平移指定的量。</returns>
        </member>
        <member name="M:Com.AffineTransformation.FromScale(System.Int32,System.Double)">
            <summary>
            返回表示按双精度浮点数表示的缩放因数对指定的基向量方向的分量缩放指定的倍数的 AffineTransformation 的新实例。
            </summary>
            <param name="index">索引，用于指定缩放的分量所在方向的基向量。</param>
            <param name="s">双精度浮点数表示的缩放因数。</param>
            <returns>AffineTransformation 对象，表示按双精度浮点数表示的缩放因数对指定的基向量方向的分量缩放指定的倍数。</returns>
        </member>
        <member name="M:Com.AffineTransformation.FromScale(System.Double)">
            <summary>
            返回表示按双精度浮点数表示的缩放因数对所有分量缩放指定的倍数的 AffineTransformation 的新实例。
            </summary>
            <param name="s">双精度浮点数表示的缩放因数。</param>
            <returns>AffineTransformation 对象，表示按双精度浮点数表示的缩放因数对所有分量缩放指定的倍数。</returns>
        </member>
        <member name="M:Com.AffineTransformation.FromReflect(System.Int32)">
            <summary>
            返回表示对指定的基向量方向的分量翻转的 AffineTransformation 的新实例。
            </summary>
            <param name="index">索引，用于指定翻转的分量所在方向的基向量。</param>
            <returns>AffineTransformation 对象，表示对指定的基向量方向的分量翻转。</returns>
        </member>
        <member name="M:Com.AffineTransformation.FromShear(System.Int32,System.Int32,System.Double)">
            <summary>
            返回表示按双精度浮点数表示的弧度错切指定的角度的 AffineTransformation 的新实例。
            </summary>
            <param name="index1">索引，用于指定与错切方向同向的基向量。</param>
            <param name="index2">索引，用于指定与错切方向共面正交的基向量。</param>
            <param name="angle">双精度浮点数，表示沿索引 index1 指定的基向量方向且共面正交于 index2 指定的基向量方向错切的角度（弧度）。</param>
            <returns>AffineTransformation 对象，表示按双精度浮点数表示的弧度错切指定的角度。</returns>
        </member>
        <member name="M:Com.AffineTransformation.FromRotate(System.Int32,System.Int32,System.Double)">
            <summary>
            返回表示按双精度浮点数表示的弧度旋转指定的角度的 AffineTransformation 的新实例。
            </summary>
            <param name="index1">索引，用于指定构成旋转轨迹所在平面的第一个基向量。</param>
            <param name="index2">索引，用于指定构成旋转轨迹所在平面的第二个基向量。</param>
            <param name="angle">双精度浮点数，表示绕索引 index1 与 index2 指定的基向量构成的平面的法向空间旋转的角度（弧度）（以索引 index1 指定的基向量为 0 弧度，从索引 index1 指定的基向量指向索引 index2 指定的基向量的方向为正方向）。</param>
            <returns>AffineTransformation 对象，表示按双精度浮点数表示的弧度旋转指定的角度。</returns>
        </member>
        <member name="M:Com.AffineTransformation.FromMatrixTransform(Com.Matrix)">
            <summary>
            返回表示按仿射矩阵进行仿射变换的 AffineTransformation 的新实例。
            </summary>
            <param name="matrix">仿射矩阵，对于列向量应为左矩阵，对于行向量应为右矩阵。</param>
            <returns>AffineTransformation 对象，表示按仿射矩阵进行仿射变换。</returns>
        </member>
        <member name="M:Com.AffineTransformation.op_Equality(Com.AffineTransformation,Com.AffineTransformation)">
            <summary>
            判断两个 AffineTransformation 对象是否相等。
            </summary>
            <param name="left">运算符左侧比较的 AffineTransformation 对象。</param>
            <param name="right">运算符右侧比较的 AffineTransformation 对象。</param>
            <returns>布尔值，表示两个 AffineTransformation 对象是否相等。</returns>
        </member>
        <member name="M:Com.AffineTransformation.op_Inequality(Com.AffineTransformation,Com.AffineTransformation)">
            <summary>
            判断两个 AffineTransformation 对象是否不相等。
            </summary>
            <param name="left">运算符左侧比较的 AffineTransformation 对象。</param>
            <param name="right">运算符右侧比较的 AffineTransformation 对象。</param>
            <returns>布尔值，表示两个 AffineTransformation 对象是否不相等。</returns>
        </member>
        <member name="T:Com.BitSet">
            <summary>
            以数组的形式管理位值的集合，位值 1 与 0 分别以布尔值 true 与 false 表示。
            </summary>
        </member>
        <member name="M:Com.BitSet.#ctor(System.Int32)">
            <summary>
            使用指定的元素数量与默认的位值（false）初始化 BitSet 的新实例。
            </summary>
            <param name="length">元素数量。</param>
        </member>
        <member name="M:Com.BitSet.#ctor(System.Int32,System.Boolean)">
            <summary>
            使用指定的元素数量与位值初始化 BitSet 的新实例。
            </summary>
            <param name="length">元素数量。</param>
            <param name="bitValue">位值。</param>
        </member>
        <member name="M:Com.BitSet.#ctor(System.Boolean[])">
            <summary>
            使用表示位值的布尔值数组初始化 BitSet 的新实例。
            </summary>
            <param name="values">表示位值的布尔值数组。</param>
        </member>
        <member name="M:Com.BitSet.#ctor(System.Byte[])">
            <summary>
            使用 8 位无符号整数数组初始化 BitSet 的新实例。
            </summary>
            <param name="values">8 位无符号整数数组。</param>
        </member>
        <member name="M:Com.BitSet.#ctor(System.UInt16[])">
            <summary>
            使用 16 位无符号整数数组初始化 BitSet 的新实例。
            </summary>
            <param name="values">16 位无符号整数数组。</param>
        </member>
        <member name="M:Com.BitSet.#ctor(System.UInt32[])">
            <summary>
            使用 32 位无符号整数数组初始化 BitSet 的新实例。
            </summary>
            <param name="values">32 位无符号整数数组。</param>
        </member>
        <member name="M:Com.BitSet.#ctor(System.UInt64[])">
            <summary>
            使用 64 位无符号整数数组初始化 BitSet 的新实例。
            </summary>
            <param name="values">64 位无符号整数数组。</param>
        </member>
        <member name="P:Com.BitSet.Item(System.Int32)">
            <summary>
            获取或设置此 BitSet 指定索引位置的位值。
            </summary>
            <param name="index">索引。</param>
        </member>
        <member name="P:Com.BitSet.IsEmpty">
            <summary>
            获取表示此 BitSet 是否不包含任何元素的布尔值。
            </summary>
        </member>
        <member name="P:Com.BitSet.IsReadOnly">
            <summary>
            获取表示此 BitSet 是否只读的布尔值。
            </summary>
        </member>
        <member name="P:Com.BitSet.IsFixedSize">
            <summary>
            获取表示此 BitSet 是否具有固定的大小的布尔值。
            </summary>
        </member>
        <member name="P:Com.BitSet.Size">
            <summary>
            获取或设置此 BitSet 包含的元素数量。
            </summary>
        </member>
        <member name="P:Com.BitSet.Count">
            <summary>
            获取此 BitSet 包含的元素数量。
            </summary>
        </member>
        <member name="P:Com.BitSet.Capacity">
            <summary>
            获取此 BitSet 在其内部数据结构不调整大小的情况下能够容纳的元素数量。
            </summary>
        </member>
        <member name="P:Com.BitSet.Empty">
            <summary>
            获取表示不包含任何元素的 BitSet 的新实例。
            </summary>
        </member>
        <member name="M:Com.BitSet.Equals(System.Object)">
            <summary>
            判断此 BitSet 是否与指定的对象相等。
            </summary>
            <param name="obj">用于比较的对象。</param>
            <returns>布尔值，表示此 BitSet 是否与指定的对象相等。</returns>
        </member>
        <member name="M:Com.BitSet.GetHashCode">
            <summary>
            返回此 BitSet 的哈希代码。
            </summary>
            <returns>32 位整数，表示此 BitSet 的哈希代码。</returns>
        </member>
        <member name="M:Com.BitSet.ToString">
            <summary>
            将此 BitSet 转换为字符串。
            </summary>
            <returns>字符串，表示此 BitSet 的字符串形式。</returns>
        </member>
        <member name="M:Com.BitSet.Equals(Com.BitSet)">
            <summary>
            判断此 BitSet 是否与指定的 BitSet 对象相等。
            </summary>
            <param name="bitSet">用于比较的 BitSet 对象。</param>
            <returns>布尔值，表示此 BitSet 是否与指定的 BitSet 对象相等。</returns>
        </member>
        <member name="M:Com.BitSet.CompareTo(System.Object)">
            <summary>
            将此 BitSet 与指定的对象进行次序比较。
            </summary>
            <param name="obj">用于比较的对象。</param>
            <returns>32 位整数，表示此 BitSet 与指定的对象进行次序比较的结果。</returns>
        </member>
        <member name="M:Com.BitSet.CompareTo(Com.BitSet)">
            <summary>
            将此 BitSet 与指定的 BitSet 对象进行次序比较。
            </summary>
            <param name="bitSet">用于比较的 BitSet 对象。</param>
            <returns>32 位整数，表示此 BitSet 与指定的 BitSet 对象进行次序比较的结果。</returns>
        </member>
        <member name="M:Com.BitSet.Copy">
            <summary>
            获取此 BitSet 的副本。
            </summary>
            <returns>BitSet 对象，表示此 BitSet 的副本。</returns>
        </member>
        <member name="M:Com.BitSet.IndexOf(System.Boolean)">
            <summary>
            遍历此 BitSet 的所有位值并返回第一个与指定值相等的位值的索引。
            </summary>
            <param name="item">用于检索的值。</param>
            <returns>32 位整数，表示第一个与指定值相等的位值的索引。</returns>
        </member>
        <member name="M:Com.BitSet.IndexOf(System.Boolean,System.Int32)">
            <summary>
            从指定的索引开始遍历此 BitSet 的所有位值并返回第一个与指定值相等的位值的索引。
            </summary>
            <param name="item">用于检索的值。</param>
            <param name="startIndex">起始索引。</param>
            <returns>32 位整数，表示第一个与指定值相等的位值的索引。</returns>
        </member>
        <member name="M:Com.BitSet.IndexOf(System.Boolean,System.Int32,System.Int32)">
            <summary>
            从指定的索引开始遍历此 BitSet 指定数量的位值并返回第一个与指定值相等的位值的索引。
            </summary>
            <param name="item">用于检索的值。</param>
            <param name="startIndex">起始索引。</param>
            <param name="count">遍历的位值数量。</param>
            <returns>32 位整数，表示第一个与指定值相等的位值的索引。</returns>
        </member>
        <member name="M:Com.BitSet.LastIndexOf(System.Boolean)">
            <summary>
            逆序遍历此 BitSet 的所有位值并返回第一个与指定值相等的位值的索引。
            </summary>
            <param name="item">用于检索的值。</param>
            <returns>32 位整数，表示第一个与指定值相等的位值的索引。</returns>
        </member>
        <member name="M:Com.BitSet.LastIndexOf(System.Boolean,System.Int32)">
            <summary>
            从指定的索引开始逆序遍历此 BitSet 的所有位值并返回第一个与指定值相等的位值的索引。
            </summary>
            <param name="item">用于检索的值。</param>
            <param name="startIndex">起始索引。</param>
            <returns>32 位整数，表示第一个与指定值相等的位值的索引。</returns>
        </member>
        <member name="M:Com.BitSet.LastIndexOf(System.Boolean,System.Int32,System.Int32)">
            <summary>
            从指定的索引开始逆序遍历此 BitSet 指定数量的位值并返回第一个与指定值相等的位值的索引。
            </summary>
            <param name="item">用于检索的值。</param>
            <param name="startIndex">起始索引。</param>
            <param name="count">遍历的位值数量。</param>
            <returns>32 位整数，表示第一个与指定值相等的位值的索引。</returns>
        </member>
        <member name="M:Com.BitSet.Contains(System.Boolean)">
            <summary>
            遍历此 BitSet 的所有位值并返回表示是否存在与指定值相等的位值的布尔值。
            </summary>
            <param name="item">用于检索的值。</param>
            <returns>布尔值，表示是否存在与指定值相等的位值。</returns>
        </member>
        <member name="M:Com.BitSet.ToArray">
            <summary>
            将此 BitSet 转换为布尔值数组。
            </summary>
            <returns>布尔值数组，数组元素表示此 BitSet 的位值的布尔值形式。</returns>
        </member>
        <member name="M:Com.BitSet.ToList">
            <summary>
            将此 BitSet 转换为布尔值列表。
            </summary>
            <returns>布尔值列表，列表元素表示此 BitSet 的位值的布尔值形式。</returns>
        </member>
        <member name="M:Com.BitSet.CopyTo(System.Boolean[],System.Int32)">
            <summary>
            将此 BitSet 的所有位值复制到布尔值数组中。
            </summary>
            <param name="array">布尔值数组。</param>
            <param name="index">布尔值数组的起始索引。</param>
        </member>
        <member name="M:Com.BitSet.Trim">
            <summary>
            释放此 BitSet 内部数据结构的冗余空间。
            </summary>
        </member>
        <member name="M:Com.BitSet.Get(System.Int32)">
            <summary>
            获取此 BitSet 指定索引位置的位值。
            </summary>
            <param name="index">索引。</param>
            <returns>布尔值，表示此 BitSet 指定索引位置的位值。</returns>
        </member>
        <member name="M:Com.BitSet.Set(System.Int32,System.Boolean)">
            <summary>
            设置此 BitSet 指定索引位置的位值。
            </summary>
            <param name="index">索引。</param>
            <param name="bitValue">位值。</param>
        </member>
        <member name="M:Com.BitSet.SetAll(System.Boolean)">
            <summary>
            设置此 BitSet 的所有位值。
            </summary>
            <param name="bitValue">位值。</param>
        </member>
        <member name="M:Com.BitSet.TrueForBit(System.Int32)">
            <summary>
            将此 BitSet 指定索引位置的位值设为 true。
            </summary>
            <param name="index">索引。</param>
        </member>
        <member name="M:Com.BitSet.FalseForBit(System.Int32)">
            <summary>
            将此 BitSet 指定索引位置的位值设为 false。
            </summary>
            <param name="index">索引。</param>
        </member>
        <member name="M:Com.BitSet.InverseBit(System.Int32)">
            <summary>
            将此 BitSet 指定索引位置的位值取反。
            </summary>
            <param name="index">索引。</param>
        </member>
        <member name="M:Com.BitSet.TrueForAll">
            <summary>
            将此 BitSet 的所有位值设为 true。
            </summary>
        </member>
        <member name="M:Com.BitSet.FalseForAll">
            <summary>
            将此 BitSet 的所有位值设为 false。
            </summary>
        </member>
        <member name="M:Com.BitSet.InverseAll">
            <summary>
            将此 BitSet 的所有位值取反。
            </summary>
        </member>
        <member name="M:Com.BitSet.TrueBitCount">
            <summary>
            返回此 BitSet 值为 true 的位值的数量。
            </summary>
            <returns>32 位整数，表示此 BitSet 值为 true 的位值的数量。</returns>
        </member>
        <member name="M:Com.BitSet.FalseBitCount">
            <summary>
            返回此 BitSet 值为 false 的位值的数量。
            </summary>
            <returns>32 位整数，表示此 BitSet 值为 false 的位值的数量。</returns>
        </member>
        <member name="M:Com.BitSet.TrueBitIndex">
            <summary>
            返回包含此 BitSet 值为 true 的位值的索引的数组。
            </summary>
            <returns>32 位整数数组，该数组包含此 BitSet 值为 true 的位值的索引。</returns>
        </member>
        <member name="M:Com.BitSet.FalseBitIndex">
            <summary>
            返回包含此 BitSet 值为 false 的位值的索引的数组。
            </summary>
            <returns>32 位整数数组，该数组包含此 BitSet 值为 false 的位值的索引。</returns>
        </member>
        <member name="M:Com.BitSet.And(Com.BitSet)">
            <summary>
            返回将此 BitSet 与指定的 BitSet 按位与得到的 BitSet 的新实例。
            </summary>
            <param name="bitSet">运算符右侧的 BitSet。</param>
            <returns>BitSet 对象，表示将此 BitSet 与指定的 BitSet 按位与得到的结果。</returns>
        </member>
        <member name="M:Com.BitSet.Or(Com.BitSet)">
            <summary>
            返回将此 BitSet 与指定的 BitSet 按位或得到的 BitSet 的新实例。
            </summary>
            <param name="bitSet">运算符右侧的 BitSet。</param>
            <returns>BitSet 对象，表示将此 BitSet 与指定的 BitSet 按位或得到的结果。</returns>
        </member>
        <member name="M:Com.BitSet.Xor(Com.BitSet)">
            <summary>
            返回将此 BitSet 与指定的 BitSet 按位异或得到的 BitSet 的新实例。
            </summary>
            <param name="bitSet">运算符右侧的 BitSet。</param>
            <returns>BitSet 对象，表示将此 BitSet 与指定的 BitSet 按位异或得到的结果。</returns>
        </member>
        <member name="M:Com.BitSet.Not">
            <summary>
            返回将此 BitSet 按位取反得到的 BitSet 的新实例。
            </summary>
            <returns>BitSet 对象，表示将此 BitSet 按位取反得到的结果。</returns>
        </member>
        <member name="M:Com.BitSet.ToBinaryString">
            <summary>
            将此 BitSet 转换为二进制形式的字符串。
            </summary>
            <returns>字符串，表示此 BitSet 的二进制形式。</returns>
        </member>
        <member name="M:Com.BitSet.IsNullOrEmpty(Com.BitSet)">
            <summary>
            判断指定的 BitSet 是否为 null 或不包含任何元素。
            </summary>
            <param name="bitSet">用于判断的 BitSet 对象。</param>
            <returns>布尔值，表示指定的 BitSet 是否为 null 或不包含任何元素。</returns>
        </member>
        <member name="M:Com.BitSet.Equals(Com.BitSet,Com.BitSet)">
            <summary>
            判断两个 BitSet 对象是否相等。
            </summary>
            <param name="left">用于比较的第一个 BitSet 对象。</param>
            <param name="right">用于比较的第二个 BitSet 对象。</param>
            <returns>布尔值，表示两个 BitSet 对象是否相等。</returns>
        </member>
        <member name="M:Com.BitSet.Compare(Com.BitSet,Com.BitSet)">
            <summary>
            比较两个 BitSet 对象的次序。
            </summary>
            <param name="left">用于比较的第一个 BitSet 对象。</param>
            <param name="right">用于比较的第二个 BitSet 对象。</param>
            <returns>32 位整数，表示对两个 BitSet 对象进行次序比较的结果。</returns>
        </member>
        <member name="M:Com.BitSet.op_Equality(Com.BitSet,Com.BitSet)">
            <summary>
            判断两个 BitSet 对象表示的整数是否相等。
            </summary>
            <param name="left">运算符左侧比较的 BitSet 对象。</param>
            <param name="right">运算符右侧比较的 BitSet 对象。</param>
            <returns>布尔值，表示两个 BitSet 对象表示的整数是否相等。</returns>
        </member>
        <member name="M:Com.BitSet.op_Inequality(Com.BitSet,Com.BitSet)">
            <summary>
            判断两个 BitSet 对象表示的整数是否不相等。
            </summary>
            <param name="left">运算符左侧比较的 BitSet 对象。</param>
            <param name="right">运算符右侧比较的 BitSet 对象。</param>
            <returns>布尔值，表示两个 BitSet 对象表示的整数是否不相等。</returns>
        </member>
        <member name="M:Com.BitSet.op_LessThan(Com.BitSet,Com.BitSet)">
            <summary>
            判断两个 BitSet 对象表示的整数是否前者小于后者。
            </summary>
            <param name="left">运算符左侧比较的 BitSet 对象。</param>
            <param name="right">运算符右侧比较的 BitSet 对象。</param>
            <returns>布尔值，表示两个 BitSet 对象表示的整数是否前者小于后者。</returns>
        </member>
        <member name="M:Com.BitSet.op_GreaterThan(Com.BitSet,Com.BitSet)">
            <summary>
            判断两个 BitSet 对象表示的整数是否前者大于后者。
            </summary>
            <param name="left">运算符左侧比较的 BitSet 对象。</param>
            <param name="right">运算符右侧比较的 BitSet 对象。</param>
            <returns>布尔值，表示两个 BitSet 对象表示的整数是否前者大于后者。</returns>
        </member>
        <member name="M:Com.BitSet.op_LessThanOrEqual(Com.BitSet,Com.BitSet)">
            <summary>
            判断两个 BitSet 对象表示的整数是否前者小于或等于后者。
            </summary>
            <param name="left">运算符左侧比较的 BitSet 对象。</param>
            <param name="right">运算符右侧比较的 BitSet 对象。</param>
            <returns>布尔值，表示两个 BitSet 对象表示的整数是否前者小于或等于后者。</returns>
        </member>
        <member name="M:Com.BitSet.op_GreaterThanOrEqual(Com.BitSet,Com.BitSet)">
            <summary>
            判断两个 BitSet 对象表示的整数是否前者大于或等于后者。
            </summary>
            <param name="left">运算符左侧比较的 BitSet 对象。</param>
            <param name="right">运算符右侧比较的 BitSet 对象。</param>
            <returns>布尔值，表示两个 BitSet 对象表示的整数是否前者大于或等于后者。</returns>
        </member>
        <member name="M:Com.BitSet.op_BitwiseAnd(Com.BitSet,Com.BitSet)">
            <summary>
            返回将 BitSet 对象与 BitSet 对象按位与得到的 BitSet 的新实例。
            </summary>
            <param name="left">运算符左侧的 BitSet 对象。</param>
            <param name="right">运算符右侧的 BitSet 对象。</param>
            <returns>BitSet 对象，表示将 BitSet 对象与 BitSet 对象按位与得到的结果。</returns>
        </member>
        <member name="M:Com.BitSet.op_BitwiseOr(Com.BitSet,Com.BitSet)">
            <summary>
            返回将 BitSet 对象与 BitSet 对象按位或得到的 BitSet 的新实例。
            </summary>
            <param name="left">运算符左侧的 BitSet 对象。</param>
            <param name="right">运算符右侧的 BitSet 对象。</param>
            <returns>BitSet 对象，表示将 BitSet 对象与 BitSet 对象按位或得到的结果。</returns>
        </member>
        <member name="M:Com.BitSet.op_ExclusiveOr(Com.BitSet,Com.BitSet)">
            <summary>
            返回将 BitSet 对象与 BitSet 对象按位异或得到的 BitSet 的新实例。
            </summary>
            <param name="left">运算符左侧的 BitSet 对象。</param>
            <param name="right">运算符右侧的 BitSet 对象。</param>
            <returns>BitSet 对象，表示将 BitSet 对象与 BitSet 对象按位异或得到的结果。</returns>
        </member>
        <member name="M:Com.BitSet.op_OnesComplement(Com.BitSet)">
            <summary>
            返回将 BitSet 对象按位取反得到的 BitSet 的新实例。
            </summary>
            <param name="bitSet">运算符右侧的 BitSet 对象。</param>
            <returns>BitSet 对象，表示将 BitSet 对象按位取反得到的结果。</returns>
        </member>
        <member name="T:Com.ColorManipulation">
            <summary>
            为基于 ColorX 结构或 Color 结构的颜色的基本处理提供静态方法。
            </summary>
        </member>
        <member name="M:Com.ColorManipulation.GetColorName(Com.ColorX)">
            <summary>
            获取 ColorX 结构表示的颜色的名称。
            </summary>
            <param name="color">ColorX 结构表示的颜色。</param>
            <returns>字符串，表示指定颜色的名称。</returns>
        </member>
        <member name="M:Com.ColorManipulation.GetColorName(System.Drawing.Color)">
            <summary>
            获取 Color 结构表示的颜色的名称。
            </summary>
            <param name="color">Color 结构表示的颜色。</param>
            <returns>字符串，表示指定颜色的名称。</returns>
        </member>
        <member name="M:Com.ColorManipulation.GetRandomColorX">
            <summary>
            返回一个 ColorX 结构表示的随机颜色。
            </summary>
            <returns>ColorX 结构，表示随机颜色。</returns>
        </member>
        <member name="M:Com.ColorManipulation.GetRandomColor">
            <summary>
            返回一个 Color 结构表示的随机颜色。
            </summary>
            <returns>Color 结构，表示随机颜色。</returns>
        </member>
        <member name="M:Com.ColorManipulation.GetInvertColor(Com.ColorX)">
            <summary>
            返回 ColorX 结构表示的颜色的相反色。
            </summary>
            <param name="color">ColorX 结构表示的颜色。</param>
            <returns>ColorX 结构，表示指定颜色的相反色。</returns>
        </member>
        <member name="M:Com.ColorManipulation.GetInvertColor(System.Drawing.Color)">
            <summary>
            返回 Color 结构表示的颜色的相反色。
            </summary>
            <param name="color">Color 结构表示的颜色。</param>
            <returns>Color 结构，表示指定颜色的相反色。</returns>
        </member>
        <member name="M:Com.ColorManipulation.GetComplementaryColor(Com.ColorX)">
            <summary>
            返回 ColorX 结构表示的颜色的互补色。
            </summary>
            <param name="color">ColorX 结构表示的颜色。</param>
            <returns>ColorX 结构，表示指定颜色的互补色。</returns>
        </member>
        <member name="M:Com.ColorManipulation.GetComplementaryColor(System.Drawing.Color)">
            <summary>
            返回 Color 结构表示的颜色的互补色。
            </summary>
            <param name="color">Color 结构表示的颜色。</param>
            <returns>Color 结构，表示指定颜色的互补色。</returns>
        </member>
        <member name="M:Com.ColorManipulation.GetGrayscaleColor(Com.ColorX)">
            <summary>
            返回 ColorX 结构表示的颜色的灰度颜色。
            </summary>
            <param name="color">ColorX 结构表示的颜色。</param>
            <returns>ColorX 结构，表示指定颜色的灰度颜色。</returns>
        </member>
        <member name="M:Com.ColorManipulation.GetGrayscaleColor(System.Drawing.Color)">
            <summary>
            返回 Color 结构表示的颜色的灰度颜色。
            </summary>
            <param name="color">Color 结构表示的颜色。</param>
            <returns>Color 结构，表示指定颜色的灰度颜色。</returns>
        </member>
        <member name="M:Com.ColorManipulation.BlendByRGB(Com.ColorX,Com.ColorX,System.Double)">
            <summary>
            返回将 ColorX 结构表示的两种颜色在 RGB 色彩空间按指定比例线性混合得到的颜色。
            </summary>
            <param name="color1">ColorX 结构表示的第一种颜色。</param>
            <param name="color2">ColorX 结构表示的第二种颜色。</param>
            <param name="proportion">第一种颜色所占的比例，取值范围为 [0, 1] 或 (1, 100]。</param>
            <returns>ColorX 结构，表示将两种颜色在 RGB 色彩空间按指定比例线性混合得到的颜色。</returns>
        </member>
        <member name="M:Com.ColorManipulation.BlendByRGB(System.Drawing.Color,System.Drawing.Color,System.Double)">
            <summary>
            返回将 Color 结构表示的两种颜色在 RGB 色彩空间按指定比例线性混合得到的颜色。
            </summary>
            <param name="color1">Color 结构表示的第一种颜色。</param>
            <param name="color2">Color 结构表示的第二种颜色。</param>
            <param name="proportion">第一种颜色所占的比例，取值范围为 [0, 1] 或 (1, 100]。</param>
            <returns>Color 结构，表示将两种颜色在 RGB 色彩空间按指定比例线性混合得到的颜色。</returns>
        </member>
        <member name="M:Com.ColorManipulation.BlendByHSV(Com.ColorX,Com.ColorX,System.Double)">
            <summary>
            返回将 ColorX 结构表示的两种颜色在 HSV 色彩空间按指定比例线性混合得到的颜色。
            </summary>
            <param name="color1">ColorX 结构表示的第一种颜色。</param>
            <param name="color2">ColorX 结构表示的第二种颜色。</param>
            <param name="proportion">第一种颜色所占的比例，取值范围为 [0, 1] 或 (1, 100]。</param>
            <returns>ColorX 结构，表示将两种颜色在 HSV 色彩空间按指定比例线性混合得到的颜色。</returns>
        </member>
        <member name="M:Com.ColorManipulation.BlendByHSV(System.Drawing.Color,System.Drawing.Color,System.Double)">
            <summary>
            返回将 Color 结构表示的两种颜色在 HSV 色彩空间按指定比例线性混合得到的颜色。
            </summary>
            <param name="color1">Color 结构表示的第一种颜色。</param>
            <param name="color2">Color 结构表示的第二种颜色。</param>
            <param name="proportion">第一种颜色所占的比例，取值范围为 [0, 1] 或 (1, 100]。</param>
            <returns>Color 结构，表示将两种颜色在 HSV 色彩空间按指定比例线性混合得到的颜色。</returns>
        </member>
        <member name="M:Com.ColorManipulation.BlendByHSL(Com.ColorX,Com.ColorX,System.Double)">
            <summary>
            返回将 ColorX 结构表示的两种颜色在 HSL 色彩空间按指定比例线性混合得到的颜色。
            </summary>
            <param name="color1">ColorX 结构表示的第一种颜色。</param>
            <param name="color2">ColorX 结构表示的第二种颜色。</param>
            <param name="proportion">第一种颜色所占的比例，取值范围为 [0, 1] 或 (1, 100]。</param>
            <returns>ColorX 结构，表示将两种颜色在 HSL 色彩空间按指定比例线性混合得到的颜色。</returns>
        </member>
        <member name="M:Com.ColorManipulation.BlendByHSL(System.Drawing.Color,System.Drawing.Color,System.Double)">
            <summary>
            返回将 Color 结构表示的两种颜色在 HSL 色彩空间按指定比例线性混合得到的颜色。
            </summary>
            <param name="color1">Color 结构表示的第一种颜色。</param>
            <param name="color2">Color 结构表示的第二种颜色。</param>
            <param name="proportion">第一种颜色所占的比例，取值范围为 [0, 1] 或 (1, 100]。</param>
            <returns>Color 结构，表示将两种颜色在 HSL 色彩空间按指定比例线性混合得到的颜色。</returns>
        </member>
        <member name="M:Com.ColorManipulation.BlendByCMYK(Com.ColorX,Com.ColorX,System.Double)">
            <summary>
            返回将 ColorX 结构表示的两种颜色在 CMYK 色彩空间按指定比例线性混合得到的颜色。
            </summary>
            <param name="color1">ColorX 结构表示的第一种颜色。</param>
            <param name="color2">ColorX 结构表示的第二种颜色。</param>
            <param name="proportion">第一种颜色所占的比例，取值范围为 [0, 1] 或 (1, 100]。</param>
            <returns>ColorX 结构，表示将两种颜色在 CMYK 色彩空间按指定比例线性混合得到的颜色。</returns>
        </member>
        <member name="M:Com.ColorManipulation.BlendByCMYK(System.Drawing.Color,System.Drawing.Color,System.Double)">
            <summary>
            返回将 Color 结构表示的两种颜色在 CMYK 色彩空间按指定比例线性混合得到的颜色。
            </summary>
            <param name="color1">Color 结构表示的第一种颜色。</param>
            <param name="color2">Color 结构表示的第二种颜色。</param>
            <param name="proportion">第一种颜色所占的比例，取值范围为 [0, 1] 或 (1, 100]。</param>
            <returns>Color 结构，表示将两种颜色在 CMYK 色彩空间按指定比例线性混合得到的颜色。</returns>
        </member>
        <member name="M:Com.ColorManipulation.BlendByLAB(Com.ColorX,Com.ColorX,System.Double)">
            <summary>
            返回将 ColorX 结构表示的两种颜色在 LAB 色彩空间按指定比例线性混合得到的颜色。
            </summary>
            <param name="color1">ColorX 结构表示的第一种颜色。</param>
            <param name="color2">ColorX 结构表示的第二种颜色。</param>
            <param name="proportion">第一种颜色所占的比例，取值范围为 [0, 1] 或 (1, 100]。</param>
            <returns>ColorX 结构，表示将两种颜色在 LAB 色彩空间按指定比例线性混合得到的颜色。</returns>
        </member>
        <member name="M:Com.ColorManipulation.BlendByLAB(System.Drawing.Color,System.Drawing.Color,System.Double)">
            <summary>
            返回将 Color 结构表示的两种颜色在 LAB 色彩空间按指定比例线性混合得到的颜色。
            </summary>
            <param name="color1">Color 结构表示的第一种颜色。</param>
            <param name="color2">Color 结构表示的第二种颜色。</param>
            <param name="proportion">第一种颜色所占的比例，取值范围为 [0, 1] 或 (1, 100]。</param>
            <returns>Color 结构，表示将两种颜色在 LAB 色彩空间按指定比例线性混合得到的颜色。</returns>
        </member>
        <member name="M:Com.ColorManipulation.BlendByYUV(Com.ColorX,Com.ColorX,System.Double)">
            <summary>
            返回将 ColorX 结构表示的两种颜色在 YUV 色彩空间按指定比例线性混合得到的颜色。
            </summary>
            <param name="color1">ColorX 结构表示的第一种颜色。</param>
            <param name="color2">ColorX 结构表示的第二种颜色。</param>
            <param name="proportion">第一种颜色所占的比例，取值范围为 [0, 1] 或 (1, 100]。</param>
            <returns>ColorX 结构，表示将两种颜色在 YUV 色彩空间按指定比例线性混合得到的颜色。</returns>
        </member>
        <member name="M:Com.ColorManipulation.BlendByYUV(System.Drawing.Color,System.Drawing.Color,System.Double)">
            <summary>
            返回将 Color 结构表示的两种颜色在 YUV 色彩空间按指定比例线性混合得到的颜色。
            </summary>
            <param name="color1">Color 结构表示的第一种颜色。</param>
            <param name="color2">Color 结构表示的第二种颜色。</param>
            <param name="proportion">第一种颜色所占的比例，取值范围为 [0, 1] 或 (1, 100]。</param>
            <returns>Color 结构，表示将两种颜色在 YUV 色彩空间按指定比例线性混合得到的颜色。</returns>
        </member>
        <member name="M:Com.ColorManipulation.ShiftLightnessByHSV(Com.ColorX,System.Double)">
            <summary>
            返回将 ColorX 结构表示的颜色在 HSV 色彩空间调整明度得到的颜色。
            </summary>
            <param name="color">ColorX 结构表示的颜色。</param>
            <param name="level">调整的程度，取值范围为 [-1, 1] 或 [-100, -1) ∪ (1, 100]。</param>
            <returns>ColorX 结构，表示将指定颜色在 HSV 色彩空间调整明度得到的颜色。</returns>
        </member>
        <member name="M:Com.ColorManipulation.ShiftLightnessByHSV(System.Drawing.Color,System.Double)">
            <summary>
            返回将 Color 结构表示的颜色在 HSV 色彩空间调整明度得到的颜色。
            </summary>
            <param name="color">Color 结构表示的颜色。</param>
            <param name="level">调整的程度，取值范围为 [-1, 1] 或 [-100, -1) ∪ (1, 100]。</param>
            <returns>Color 结构，表示将指定颜色在 HSV 色彩空间调整明度得到的颜色。</returns>
        </member>
        <member name="M:Com.ColorManipulation.ShiftLightnessByHSL(Com.ColorX,System.Double)">
            <summary>
            返回将 ColorX 结构表示的颜色在 HSL 色彩空间调整明度得到的颜色。
            </summary>
            <param name="color">ColorX 结构表示的颜色。</param>
            <param name="level">调整的程度，取值范围为 [-1, 1] 或 [-100, -1) ∪ (1, 100]。</param>
            <returns>ColorX 结构，表示将指定颜色在 HSL 色彩空间调整明度得到的颜色。</returns>
        </member>
        <member name="M:Com.ColorManipulation.ShiftLightnessByHSL(System.Drawing.Color,System.Double)">
            <summary>
            返回将 Color 结构表示的颜色在 HSL 色彩空间调整明度得到的颜色。
            </summary>
            <param name="color">Color 结构表示的颜色。</param>
            <param name="level">调整的程度，取值范围为 [-1, 1] 或 [-100, -1) ∪ (1, 100]。</param>
            <returns>Color 结构，表示将指定颜色在 HSL 色彩空间调整明度得到的颜色。</returns>
        </member>
        <member name="M:Com.ColorManipulation.ShiftLightnessByLAB(Com.ColorX,System.Double)">
            <summary>
            返回将 ColorX 结构表示的颜色在 LAB 色彩空间调整明度得到的颜色。
            </summary>
            <param name="color">ColorX 结构表示的颜色。</param>
            <param name="level">调整的程度，取值范围为 [-1, 1] 或 [-100, -1) ∪ (1, 100]。</param>
            <returns>ColorX 结构，表示将指定颜色在 LAB 色彩空间调整明度得到的颜色。</returns>
        </member>
        <member name="M:Com.ColorManipulation.ShiftLightnessByLAB(System.Drawing.Color,System.Double)">
            <summary>
            返回将 Color 结构表示的颜色在 LAB 色彩空间调整明度得到的颜色。
            </summary>
            <param name="color">Color 结构表示的颜色。</param>
            <param name="level">调整的程度，取值范围为 [-1, 1] 或 [-100, -1) ∪ (1, 100]。</param>
            <returns>Color 结构，表示将指定颜色在 LAB 色彩空间调整明度得到的颜色。</returns>
        </member>
        <member name="M:Com.ColorManipulation.ShiftLightnessByYUV(Com.ColorX,System.Double)">
            <summary>
            返回将 ColorX 结构表示的颜色在 YUV 色彩空间调整明度得到的颜色。
            </summary>
            <param name="color">ColorX 结构表示的颜色。</param>
            <param name="level">调整的程度，取值范围为 [-1, 1] 或 [-100, -1) ∪ (1, 100]。</param>
            <returns>ColorX 结构，表示将指定颜色在 YUV 色彩空间调整明度得到的颜色。</returns>
        </member>
        <member name="M:Com.ColorManipulation.ShiftLightnessByYUV(System.Drawing.Color,System.Double)">
            <summary>
            返回将 Color 结构表示的颜色在 YUV 色彩空间调整明度得到的颜色。
            </summary>
            <param name="color">Color 结构表示的颜色。</param>
            <param name="level">调整的程度，取值范围为 [-1, 1] 或 [-100, -1) ∪ (1, 100]。</param>
            <returns>Color 结构，表示将指定颜色在 YUV 色彩空间调整明度得到的颜色。</returns>
        </member>
        <member name="M:Com.ColorManipulation.ShiftSaturationByHSV(Com.ColorX,System.Double)">
            <summary>
            返回将 ColorX 结构表示的颜色在 HSV 色彩空间调整饱和度得到的颜色。
            </summary>
            <param name="color">ColorX 结构表示的颜色。</param>
            <param name="level">调整的程度，取值范围为 [-1, 1] 或 [-100, -1) ∪ (1, 100]。</param>
            <returns>ColorX 结构，表示将指定颜色在 HSV 色彩空间调整饱和度得到的颜色。</returns>
        </member>
        <member name="M:Com.ColorManipulation.ShiftSaturationByHSV(System.Drawing.Color,System.Double)">
            <summary>
            返回将 Color 结构表示的颜色在 HSV 色彩空间调整饱和度得到的颜色。
            </summary>
            <param name="color">Color 结构表示的颜色。</param>
            <param name="level">调整的程度，取值范围为 [-1, 1] 或 [-100, -1) ∪ (1, 100]。</param>
            <returns>Color 结构，表示将指定颜色在 HSV 色彩空间调整饱和度得到的颜色。</returns>
        </member>
        <member name="M:Com.ColorManipulation.ShiftSaturationByHSL(Com.ColorX,System.Double)">
            <summary>
            返回将 ColorX 结构表示的颜色在 HSL 色彩空间调整饱和度得到的颜色。
            </summary>
            <param name="color">ColorX 结构表示的颜色。</param>
            <param name="level">调整的程度，取值范围为 [-1, 1] 或 [-100, -1) ∪ (1, 100]。</param>
            <returns>ColorX 结构，表示将指定颜色在 HSL 色彩空间调整饱和度得到的颜色。</returns>
        </member>
        <member name="M:Com.ColorManipulation.ShiftSaturationByHSL(System.Drawing.Color,System.Double)">
            <summary>
            返回将 Color 结构表示的颜色在 HSL 色彩空间调整饱和度得到的颜色。
            </summary>
            <param name="color">Color 结构表示的颜色。</param>
            <param name="level">调整的程度，取值范围为 [-1, 1] 或 [-100, -1) ∪ (1, 100]。</param>
            <returns>Color 结构，表示将指定颜色在 HSL 色彩空间调整饱和度得到的颜色。</returns>
        </member>
        <member name="T:Com.IndexableQueue`1">
            <summary>
            允许通过索引访问元素的队列。
            </summary>
        </member>
        <member name="M:Com.IndexableQueue`1.#ctor">
            <summary>
            不使用任何参数初始化 IndexableQueue 的新实例。
            </summary>
        </member>
        <member name="M:Com.IndexableQueue`1.#ctor(System.Int32,System.Boolean)">
            <summary>
            使用指定的容量与表示是否自动扩展容量的布尔值初始化 IndexableQueue 的新实例。
            </summary>
            <param name="capacity">容量。</param>
            <param name="autoExpand">是否自动扩展容量，如果不自动扩容，队列满后每添加一个元素都将从队首删除一个元素。</param>
        </member>
        <member name="M:Com.IndexableQueue`1.#ctor(System.Int32)">
            <summary>
            使用指定的容量初始化 IndexableQueue 的新实例。
            </summary>
            <param name="capacity">容量。</param>
        </member>
        <member name="M:Com.IndexableQueue`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Boolean)">
            <summary>
            使用包含多个元素的集合与表示是否自动扩展容量的布尔值初始化 IndexableQueue 的新实例。
            </summary>
            <param name="autoExpand">是否自动扩展容量，如果不自动扩容，队列满后每添加一个元素都将从队首删除一个元素。</param>
            <param name="items">包含多个元素的集合。</param>
        </member>
        <member name="M:Com.IndexableQueue`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            使用包含多个元素的集合初始化 IndexableQueue 的新实例。
            </summary>
            <param name="items">包含多个元素的集合。</param>
        </member>
        <member name="P:Com.IndexableQueue`1.Item(System.Int32)">
            <summary>
            获取或设置此 IndexableQueue 对象的指定索引的元素。
            </summary>
            <param name="index">索引。</param>
        </member>
        <member name="P:Com.IndexableQueue`1.Head">
            <summary>
            获取或设置此 IndexableQueue 对象的队首元素。
            </summary>
        </member>
        <member name="P:Com.IndexableQueue`1.Tail">
            <summary>
            获取或设置此 IndexableQueue 对象的队尾元素。
            </summary>
        </member>
        <member name="P:Com.IndexableQueue`1.AutoExpand">
            <summary>
            获取表示此 IndexableQueue 对象是否自动扩展容量的布尔值。
            </summary>
        </member>
        <member name="P:Com.IndexableQueue`1.Capacity">
            <summary>
            获取此 IndexableQueue 对象的容量。
            </summary>
        </member>
        <member name="P:Com.IndexableQueue`1.Count">
            <summary>
            获取此 IndexableQueue 对象的元素数目。
            </summary>
        </member>
        <member name="P:Com.IndexableQueue`1.IsEmpty">
            <summary>
            获取表示此 IndexableQueue 对象是否为空的布尔值。
            </summary>
        </member>
        <member name="P:Com.IndexableQueue`1.IsFull">
            <summary>
            获取表示此 IndexableQueue 对象是否已满的布尔值。
            </summary>
        </member>
        <member name="P:Com.IndexableQueue`1.IsReadOnly">
            <summary>
            获取表示此 IndexableQueue 是否只读的布尔值。
            </summary>
        </member>
        <member name="P:Com.IndexableQueue`1.IsFixedSize">
            <summary>
            获取表示此 IndexableQueue 是否具有固定的大小的布尔值。
            </summary>
        </member>
        <member name="M:Com.IndexableQueue`1.IndexOf(`0)">
            <summary>
            遍历此 IndexableQueue 的所有元素并返回第一个与指定值相等的元素的索引。
            </summary>
            <param name="item">用于检索的值。</param>
            <returns>32 位整数，表示第一个与指定值相等的元素的索引。</returns>
        </member>
        <member name="M:Com.IndexableQueue`1.IndexOf(`0,System.Int32)">
            <summary>
            从指定的索引开始遍历此 IndexableQueue 的所有元素并返回第一个与指定值相等的元素的索引。
            </summary>
            <param name="item">用于检索的值。</param>
            <param name="startIndex">起始索引。</param>
            <returns>32 位整数，表示第一个与指定值相等的元素的索引。</returns>
        </member>
        <member name="M:Com.IndexableQueue`1.IndexOf(`0,System.Int32,System.Int32)">
            <summary>
            从指定的索引开始遍历此 IndexableQueue 指定数量的元素并返回第一个与指定值相等的元素的索引。
            </summary>
            <param name="item">用于检索的值。</param>
            <param name="startIndex">起始索引。</param>
            <param name="count">遍历的元素数量。</param>
            <returns>32 位整数，表示第一个与指定值相等的元素的索引。</returns>
        </member>
        <member name="M:Com.IndexableQueue`1.LastIndexOf(`0)">
            <summary>
            逆序遍历此 IndexableQueue 的所有元素并返回第一个与指定值相等的元素的索引。
            </summary>
            <param name="item">用于检索的值。</param>
            <returns>32 位整数，表示第一个与指定值相等的元素的索引。</returns>
        </member>
        <member name="M:Com.IndexableQueue`1.LastIndexOf(`0,System.Int32)">
            <summary>
            从指定的索引开始逆序遍历此 IndexableQueue 的所有元素并返回第一个与指定值相等的元素的索引。
            </summary>
            <param name="item">用于检索的值。</param>
            <param name="startIndex">起始索引。</param>
            <returns>32 位整数，表示第一个与指定值相等的元素的索引。</returns>
        </member>
        <member name="M:Com.IndexableQueue`1.LastIndexOf(`0,System.Int32,System.Int32)">
            <summary>
            从指定的索引开始逆序遍历此 IndexableQueue 指定数量的元素并返回第一个与指定值相等的元素的索引。
            </summary>
            <param name="item">用于检索的值。</param>
            <param name="startIndex">起始索引。</param>
            <param name="count">遍历的元素数量。</param>
            <returns>32 位整数，表示第一个与指定值相等的元素的索引。</returns>
        </member>
        <member name="M:Com.IndexableQueue`1.Contains(`0)">
            <summary>
            遍历此 IndexableQueue 的所有元素并返回表示是否存在与指定值相等的元素的布尔值。
            </summary>
            <param name="item">用于检索的值。</param>
            <returns>布尔值，表示是否存在与指定值相等的元素。</returns>
        </member>
        <member name="M:Com.IndexableQueue`1.ToArray">
            <summary>
            将此 IndexableQueue 转换为数组。
            </summary>
            <returns>T 数组，数组元素表示此 IndexableQueue 的元素。</returns>
        </member>
        <member name="M:Com.IndexableQueue`1.ToList">
            <summary>
            将此 IndexableQueue 转换为列表。
            </summary>
            <returns>T 列表，列表元素表示此 IndexableQueue 的元素。</returns>
        </member>
        <member name="M:Com.IndexableQueue`1.Enqueue(`0)">
            <summary>
            向此 IndexableQueue 对象的队尾添加一个元素。
            </summary>
            <param name="item">添加的元素。</param>
        </member>
        <member name="M:Com.IndexableQueue`1.Enqueue(`0[])">
            <summary>
            向此 IndexableQueue 对象的队尾添加多个元素。
            </summary>
            <param name="items">添加的元素。</param>
        </member>
        <member name="M:Com.IndexableQueue`1.Enqueue(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            向此 IndexableQueue 对象的队尾添加多个元素。
            </summary>
            <param name="items">添加的元素。</param>
        </member>
        <member name="M:Com.IndexableQueue`1.Dequeue">
            <summary>
            从此 IndexableQueue 对象的队首取出一个元素。
            </summary>
            <returns>T，取出的元素。</returns>
        </member>
        <member name="M:Com.IndexableQueue`1.Dequeue(System.Int32,System.Collections.Generic.ICollection{`0})">
            <summary>
            从此 IndexableQueue 对象的队首取出多个元素。
            </summary>
            <param name="count">取出元素的数目。</param>
            <param name="items">取出的元素。</param>
            <returns>T，取出的元素。</returns>
        </member>
        <member name="M:Com.IndexableQueue`1.Resize(System.Int32)">
            <summary>
            重新设置此 IndexableQueue 对象的容量。
            </summary>
            <param name="capacity">容量。</param>
        </member>
        <member name="M:Com.IndexableQueue`1.Clear">
            <summary>
            删除此 IndexableQueue 对象的所有元素。
            </summary>
        </member>
        <member name="T:Com.FrequencyCounter">
            <summary>
            频率计数器，用于实时计算在过去一小段时间间隔内某一事件发生的频率。
            </summary>
        </member>
        <member name="M:Com.FrequencyCounter.#ctor(System.TimeSpan)">
            <summary>
            使用指定的采样周期初始化 FrequencyCounter 的新实例。
            <param name="samplePeriod">采样周期。</param>
            </summary>
        </member>
        <member name="M:Com.FrequencyCounter.#ctor(System.Double)">
            <summary>
            使用指定的采样周期初始化 FrequencyCounter 的新实例。
            </summary>
            <param name="samplePeriodSeconds">采样周期（秒）。</param>
        </member>
        <member name="M:Com.FrequencyCounter.#ctor">
            <summary>
            使用默认的采样周期（1秒）初始化 FrequencyCounter 的新实例。
            </summary>
        </member>
        <member name="P:Com.FrequencyCounter.SamplePeriod">
            <summary>
            获取此 FrequencyCounter 对象的采样周期。
            </summary>
        </member>
        <member name="P:Com.FrequencyCounter.Frequency">
            <summary>
            获取此 FrequencyCounter 对象的频率（赫兹）。
            </summary>
        </member>
        <member name="P:Com.FrequencyCounter.Period">
            <summary>
            获取此 FrequencyCounter 对象的周期（秒）。
            </summary>
        </member>
        <member name="M:Com.FrequencyCounter.Update(System.Int32)">
            <summary>
            更新此 FrequencyCounter 对象指定的计数次数。
            </summary>
            <param name="count">计数次数。</param>
        </member>
        <member name="M:Com.FrequencyCounter.Update">
            <summary>
            更新此 FrequencyCounter 对象一次计数。
            </summary>
        </member>
        <member name="M:Com.FrequencyCounter.Reset">
            <summary>
            重置此 FrequencyCounter 对象。
            </summary>
        </member>
        <member name="T:Com.IAffine">
            <summary>
            表示用于支持仿射变换的方法。
            </summary>
        </member>
        <member name="M:Com.IAffine.Offset(System.Double)">
            <summary>
            按双精度浮点数表示的位移对所有分量平移指定的量。
            </summary>
            <param name="d">双精度浮点数表示的位移。</param>
        </member>
        <member name="M:Com.IAffine.Scale(System.Double)">
            <summary>
            按双精度浮点数表示的缩放因数对所有分量缩放指定的倍数。
            </summary>
            <param name="s">双精度浮点数表示的缩放因数。</param>
        </member>
        <member name="M:Com.IAffine.Reflect(System.Int32)">
            <summary>
            对指定的基向量方向的分量翻转。
            </summary>
            <param name="index">索引，用于指定翻转的分量所在方向的基向量。</param>
        </member>
        <member name="M:Com.IAffine.Shear(System.Int32,System.Int32,System.Double)">
            <summary>
            按双精度浮点数表示的弧度错切指定的角度。
            </summary>
            <param name="index1">索引，用于指定与错切方向同向的基向量。</param>
            <param name="index2">索引，用于指定与错切方向共面正交的基向量。</param>
            <param name="angle">双精度浮点数，表示沿索引 index1 指定的基向量方向且共面正交于 index2 指定的基向量方向错切的角度（弧度）。</param>
        </member>
        <member name="M:Com.IAffine.Rotate(System.Int32,System.Int32,System.Double)">
            <summary>
            按双精度浮点数表示的弧度旋转指定的角度。
            </summary>
            <param name="index1">索引，用于指定构成旋转轨迹所在平面的第一个基向量。</param>
            <param name="index2">索引，用于指定构成旋转轨迹所在平面的第二个基向量。</param>
            <param name="angle">双精度浮点数，表示绕索引 index1 与 index2 指定的基向量构成的平面的法向空间旋转的角度（弧度）（以索引 index1 指定的基向量为 0 弧度，从索引 index1 指定的基向量指向索引 index2 指定的基向量的方向为正方向）。</param>
        </member>
        <member name="M:Com.IAffine.AffineTransform(Com.Matrix)">
            <summary>
            按仿射矩阵进行仿射变换。
            </summary>
            <param name="matrix">仿射矩阵，对于列向量应为左矩阵，对于行向量应为右矩阵。</param>
        </member>
        <member name="M:Com.IAffine.AffineTransform(Com.Matrix[])">
            <summary>
            按仿射矩阵数组进行仿射变换。
            </summary>
            <param name="matrices">仿射矩阵数组，对于列向量应全部为左矩阵，对于行向量应全部为右矩阵。</param>
        </member>
        <member name="M:Com.IAffine.AffineTransform(System.Collections.Generic.List{Com.Matrix})">
            <summary>
            按仿射矩阵列表进行仿射变换。
            </summary>
            <param name="matrixList">仿射矩阵列表，对于列向量应全部为左矩阵，对于行向量应全部为右矩阵。</param>
        </member>
        <member name="M:Com.IAffine.InverseAffineTransform(Com.Matrix)">
            <summary>
            按仿射矩阵进行逆仿射变换。
            </summary>
            <param name="matrix">仿射矩阵，对于列向量应为左矩阵，对于行向量应为右矩阵。</param>
        </member>
        <member name="M:Com.IAffine.InverseAffineTransform(Com.Matrix[])">
            <summary>
            按仿射矩阵数组进行逆仿射变换。
            </summary>
            <param name="matrices">仿射矩阵数组，对于列向量应全部为左矩阵，对于行向量应全部为右矩阵。</param>
        </member>
        <member name="M:Com.IAffine.InverseAffineTransform(System.Collections.Generic.List{Com.Matrix})">
            <summary>
            按仿射矩阵列表进行逆仿射变换。
            </summary>
            <param name="matrixList">仿射矩阵列表，对于列向量应全部为左矩阵，对于行向量应全部为右矩阵。</param>
        </member>
        <member name="T:Com.IAffine`1">
            <summary>
            表示用于支持仿射变换的方法。
            </summary>
        </member>
        <member name="M:Com.IAffine`1.Offset(`0)">
            <summary>
            按向量表示的位移平移指定的量。
            </summary>
            <param name="vector">向量表示的位移。</param>
        </member>
        <member name="M:Com.IAffine`1.OffsetCopy(System.Double)">
            <summary>
            返回按双精度浮点数表示的位移对所有分量平移指定的量得到的向量。
            </summary>
            <param name="d">双精度浮点数表示的位移。</param>
            <returns>T，表示按双精度浮点数表示的位移对所有分量平移指定的量得到的向量。</returns>
        </member>
        <member name="M:Com.IAffine`1.OffsetCopy(`0)">
            <summary>
            返回按向量表示的位移平移指定的量得到的向量。
            </summary>
            <param name="vector">向量表示的位移。</param>
            <returns>T，表示按向量表示的位移对所有分量平移指定的量得到的向量。</returns>
        </member>
        <member name="M:Com.IAffine`1.Scale(`0)">
            <summary>
            按向量表示的缩放因数缩放指定的倍数。
            </summary>
            <param name="vector">向量表示的缩放因数。</param>
        </member>
        <member name="M:Com.IAffine`1.ScaleCopy(System.Double)">
            <summary>
            返回按双精度浮点数表示的缩放因数对所有分量缩放指定的倍数得到的向量。
            </summary>
            <param name="s">双精度浮点数表示的缩放因数。</param>
            <returns>T，表示按双精度浮点数表示的缩放因数对所有分量缩放指定的倍数得到的向量。</returns>
        </member>
        <member name="M:Com.IAffine`1.ScaleCopy(`0)">
            <summary>
            返回按向量表示的缩放因数缩放指定的倍数得到的向量。
            </summary>
            <param name="vector">向量表示的缩放因数。</param>
            <returns>T，表示按向量表示的缩放因数缩放指定的倍数得到的向量。</returns>
        </member>
        <member name="M:Com.IAffine`1.ReflectCopy(System.Int32)">
            <summary>
            返回对指定的基向量方向的分量翻转得到的向量。
            </summary>
            <param name="index">索引，用于指定翻转的分量所在方向的基向量。</param>
            <returns>T，表示对指定的基向量方向的分量翻转得到的向量。</returns>
        </member>
        <member name="M:Com.IAffine`1.ShearCopy(System.Int32,System.Int32,System.Double)">
            <summary>
            返回按双精度浮点数表示的弧度错切指定的角度得到的向量。
            </summary>
            <param name="index1">索引，用于指定与错切方向同向的基向量。</param>
            <param name="index2">索引，用于指定与错切方向共面正交的基向量。</param>
            <param name="angle">双精度浮点数，表示沿索引 index1 指定的基向量方向且共面正交于 index2 指定的基向量方向错切的角度（弧度）。</param>
            <returns>T，表示按双精度浮点数表示的弧度错切指定的角度得到的向量。</returns>
        </member>
        <member name="M:Com.IAffine`1.RotateCopy(System.Int32,System.Int32,System.Double)">
            <summary>
            返回按双精度浮点数表示的弧度旋转指定的角度得到的向量。
            </summary>
            <param name="index1">索引，用于指定构成旋转轨迹所在平面的第一个基向量。</param>
            <param name="index2">索引，用于指定构成旋转轨迹所在平面的第二个基向量。</param>
            <param name="angle">双精度浮点数，表示绕索引 index1 与 index2 指定的基向量构成的平面的法向空间旋转的角度（弧度）（以索引 index1 指定的基向量为 0 弧度，从索引 index1 指定的基向量指向索引 index2 指定的基向量的方向为正方向）。</param>
            <returns>T，表示按双精度浮点数表示的弧度旋转指定的角度得到的向量。</returns>
        </member>
        <member name="M:Com.IAffine`1.AffineTransformCopy(Com.Matrix)">
            <summary>
            返回按仿射矩阵进行仿射变换得到的向量。
            </summary>
            <param name="matrix">仿射矩阵，对于列向量应为左矩阵，对于行向量应为右矩阵。</param>
            <returns>T，表示按仿射矩阵进行仿射变换得到的向量。</returns>
        </member>
        <member name="M:Com.IAffine`1.AffineTransformCopy(Com.Matrix[])">
            <summary>
            返回按仿射矩阵数组进行仿射变换得到的向量。
            </summary>
            <param name="matrices">仿射矩阵数组，对于列向量应全部为左矩阵，对于行向量应全部为右矩阵。</param>
            <returns>T，表示按仿射矩阵数组进行仿射变换得到的向量。</returns>
        </member>
        <member name="M:Com.IAffine`1.AffineTransformCopy(System.Collections.Generic.List{Com.Matrix})">
            <summary>
            返回按仿射矩阵列表进行仿射变换得到的向量。
            </summary>
            <param name="matrixList">仿射矩阵列表，对于列向量应全部为左矩阵，对于行向量应全部为右矩阵。</param>
            <returns>T，表示按仿射矩阵列表进行仿射变换得到的向量。</returns>
        </member>
        <member name="M:Com.IAffine`1.InverseAffineTransformCopy(Com.Matrix)">
            <summary>
            返回按仿射矩阵进行逆仿射变换得到的向量。
            </summary>
            <param name="matrix">仿射矩阵，对于列向量应为左矩阵，对于行向量应为右矩阵。</param>
            <returns>T，表示按仿射矩阵进行逆仿射变换得到的向量。</returns>
        </member>
        <member name="M:Com.IAffine`1.InverseAffineTransformCopy(Com.Matrix[])">
            <summary>
            返回按仿射矩阵数组进行逆仿射变换得到的向量。
            </summary>
            <param name="matrices">仿射矩阵数组，对于列向量应全部为左矩阵，对于行向量应全部为右矩阵。</param>
            <returns>T，表示按仿射矩阵数组进行逆仿射变换得到的向量。</returns>
        </member>
        <member name="M:Com.IAffine`1.InverseAffineTransformCopy(System.Collections.Generic.List{Com.Matrix})">
            <summary>
            返回按仿射矩阵列表进行逆仿射变换得到的向量。
            </summary>
            <param name="matrixList">仿射矩阵列表，对于列向量应全部为左矩阵，对于行向量应全部为右矩阵。</param>
            <returns>T，表示按仿射矩阵列表进行逆仿射变换得到的向量。</returns>
        </member>
        <member name="T:Com.IAffineTransformable">
            <summary>
            表示支持仿射变换。
            </summary>
        </member>
        <member name="M:Com.IAffineTransformable.Offset(System.Int32,System.Double)">
            <summary>
            按双精度浮点数表示的位移对指定的基向量方向的分量平移指定的量。
            </summary>
            <param name="index">索引，用于指定平移的分量所在方向的基向量。</param>
            <param name="d">双精度浮点数表示的位移。</param>
        </member>
        <member name="M:Com.IAffineTransformable.Offset(System.Double)">
            <summary>
            按双精度浮点数表示的位移对所有分量平移指定的量。
            </summary>
            <param name="d">双精度浮点数表示的位移。</param>
        </member>
        <member name="M:Com.IAffineTransformable.Scale(System.Int32,System.Double)">
            <summary>
            按双精度浮点数表示的缩放因数对指定的基向量方向的分量缩放指定的倍数。
            </summary>
            <param name="index">索引，用于指定缩放的分量所在方向的基向量。</param>
            <param name="s">双精度浮点数表示的缩放因数。</param>
        </member>
        <member name="M:Com.IAffineTransformable.Scale(System.Double)">
            <summary>
            按双精度浮点数表示的缩放因数对所有分量缩放指定的倍数。
            </summary>
            <param name="s">双精度浮点数表示的缩放因数。</param>
        </member>
        <member name="M:Com.IAffineTransformable.Reflect(System.Int32)">
            <summary>
            对指定的基向量方向的分量翻转。
            </summary>
            <param name="index">索引，用于指定翻转的分量所在方向的基向量。</param>
        </member>
        <member name="M:Com.IAffineTransformable.Shear(System.Int32,System.Int32,System.Double)">
            <summary>
            按双精度浮点数表示的弧度错切指定的角度。
            </summary>
            <param name="index1">索引，用于指定与错切方向同向的基向量。</param>
            <param name="index2">索引，用于指定与错切方向共面正交的基向量。</param>
            <param name="angle">双精度浮点数，表示沿索引 index1 指定的基向量方向且共面正交于 index2 指定的基向量方向错切的角度（弧度）。</param>
        </member>
        <member name="M:Com.IAffineTransformable.Rotate(System.Int32,System.Int32,System.Double)">
            <summary>
            按双精度浮点数表示的弧度旋转指定的角度。
            </summary>
            <param name="index1">索引，用于指定构成旋转轨迹所在平面的第一个基向量。</param>
            <param name="index2">索引，用于指定构成旋转轨迹所在平面的第二个基向量。</param>
            <param name="angle">双精度浮点数，表示绕索引 index1 与 index2 指定的基向量构成的平面的法向空间旋转的角度（弧度）（以索引 index1 指定的基向量为 0 弧度，从索引 index1 指定的基向量指向索引 index2 指定的基向量的方向为正方向）。</param>
        </member>
        <member name="M:Com.IAffineTransformable.MatrixTransform(Com.Matrix)">
            <summary>
            按仿射矩阵进行仿射变换。
            </summary>
            <param name="matrix">仿射矩阵，对于列向量应为左矩阵，对于行向量应为右矩阵。</param>
        </member>
        <member name="M:Com.IAffineTransformable.AffineTransform(Com.AffineTransformation)">
            <summary>
            按 AffineTransformation 对象进行仿射变换。
            </summary>
            <param name="affineTransformation">AffineTransformation 对象。</param>
        </member>
        <member name="T:Com.IAffineTransformable`1">
            <summary>
            表示支持仿射变换。
            </summary>
        </member>
        <member name="M:Com.IAffineTransformable`1.OffsetCopy(System.Int32,System.Double)">
            <summary>
            返回按双精度浮点数表示的位移对指定的基向量方向的分量平移指定的量得到的结果。
            </summary>
            <param name="index">索引，用于指定平移的分量所在方向的基向量。</param>
            <param name="d">双精度浮点数表示的位移。</param>
            <returns>T，表示按双精度浮点数表示的位移对指定的基向量方向的分量平移指定的量得到的结果。</returns>
        </member>
        <member name="M:Com.IAffineTransformable`1.OffsetCopy(System.Double)">
            <summary>
            返回按双精度浮点数表示的位移对所有分量平移指定的量得到的结果。
            </summary>
            <param name="d">双精度浮点数表示的位移。</param>
            <returns>T，表示按双精度浮点数表示的位移对所有分量平移指定的量得到的结果。</returns>
        </member>
        <member name="M:Com.IAffineTransformable`1.ScaleCopy(System.Int32,System.Double)">
            <summary>
            返回按双精度浮点数表示的缩放因数对指定的基向量方向的分量缩放指定的倍数得到的结果。
            </summary>
            <param name="index">索引，用于指定缩放的分量所在方向的基向量。</param>
            <param name="s">双精度浮点数表示的缩放因数。</param>
            <returns>T，表示按双精度浮点数表示的缩放因数对指定的基向量方向的分量缩放指定的倍数得到的结果。</returns>
        </member>
        <member name="M:Com.IAffineTransformable`1.ScaleCopy(System.Double)">
            <summary>
            返回按双精度浮点数表示的缩放因数对所有分量缩放指定的倍数得到的结果。
            </summary>
            <param name="s">双精度浮点数表示的缩放因数。</param>
            <returns>T，表示按双精度浮点数表示的缩放因数对所有分量缩放指定的倍数得到的结果。</returns>
        </member>
        <member name="M:Com.IAffineTransformable`1.ReflectCopy(System.Int32)">
            <summary>
            返回对指定的基向量方向的分量翻转得到的结果。
            </summary>
            <param name="index">索引，用于指定翻转的分量所在方向的基向量。</param>
            <returns>T，表示对指定的基向量方向的分量翻转得到的结果。</returns>
        </member>
        <member name="M:Com.IAffineTransformable`1.ShearCopy(System.Int32,System.Int32,System.Double)">
            <summary>
            返回按双精度浮点数表示的弧度错切指定的角度得到的结果。
            </summary>
            <param name="index1">索引，用于指定与错切方向同向的基向量。</param>
            <param name="index2">索引，用于指定与错切方向共面正交的基向量。</param>
            <param name="angle">双精度浮点数，表示沿索引 index1 指定的基向量方向且共面正交于 index2 指定的基向量方向错切的角度（弧度）。</param>
            <returns>T，表示按双精度浮点数表示的弧度错切指定的角度得到的结果。</returns>
        </member>
        <member name="M:Com.IAffineTransformable`1.RotateCopy(System.Int32,System.Int32,System.Double)">
            <summary>
            返回按双精度浮点数表示的弧度旋转指定的角度得到的结果。
            </summary>
            <param name="index1">索引，用于指定构成旋转轨迹所在平面的第一个基向量。</param>
            <param name="index2">索引，用于指定构成旋转轨迹所在平面的第二个基向量。</param>
            <param name="angle">双精度浮点数，表示绕索引 index1 与 index2 指定的基向量构成的平面的法向空间旋转的角度（弧度）（以索引 index1 指定的基向量为 0 弧度，从索引 index1 指定的基向量指向索引 index2 指定的基向量的方向为正方向）。</param>
            <returns>T，表示按双精度浮点数表示的弧度旋转指定的角度得到的结果。</returns>
        </member>
        <member name="M:Com.IAffineTransformable`1.MatrixTransformCopy(Com.Matrix)">
            <summary>
            返回按仿射矩阵进行仿射变换得到的结果。
            </summary>
            <param name="matrix">仿射矩阵，对于列向量应为左矩阵，对于行向量应为右矩阵。</param>
            <returns>T，表示按仿射矩阵进行仿射变换得到的结果。</returns>
        </member>
        <member name="M:Com.IAffineTransformable`1.AffineTransformCopy(Com.AffineTransformation)">
            <summary>
            返回按 AffineTransformation 对象进行仿射变换得到的结果。
            </summary>
            <param name="affineTransformation">AffineTransformation 对象。</param>
            <returns>T，表示按 AffineTransformation 对象进行仿射变换得到的结果。</returns>
        </member>
        <member name="T:Com.IEuclideanVector">
            <summary>
            表示欧几里得向量。
            </summary>
        </member>
        <member name="P:Com.IEuclideanVector.Dimension">
            <summary>
            获取向量的维度。
            </summary>
        </member>
        <member name="P:Com.IEuclideanVector.IsEmpty">
            <summary>
            获取表示向量是否不包含任何元素的布尔值。
            </summary>
        </member>
        <member name="P:Com.IEuclideanVector.IsZero">
            <summary>
            获取表示向量是否为零向量的布尔值。
            </summary>
        </member>
        <member name="P:Com.IEuclideanVector.Module">
            <summary>
            获取向量的模。
            </summary>
        </member>
        <member name="P:Com.IEuclideanVector.ModuleSquared">
            <summary>
            获取向量的模的平方。
            </summary>
        </member>
        <member name="M:Com.IEuclideanVector.ToArray">
            <summary>
            将向量转换为数组。
            </summary>
            <returns>T 数组，表示转换的结果。</returns>
        </member>
        <member name="T:Com.IEuclideanVector`1">
            <summary>
            表示欧几里得向量。
            </summary>
        </member>
        <member name="P:Com.IEuclideanVector`1.Opposite">
            <summary>
            获取相反向量。
            </summary>
        </member>
        <member name="P:Com.IEuclideanVector`1.Normalize">
            <summary>
            获取规范化向量。
            </summary>
        </member>
        <member name="M:Com.IEuclideanVector`1.ToSpherical">
            <summary>
            返回将向量由直角坐标系转换到极坐标系、球坐标系或超球坐标系得到的向量。
            </summary>
            <returns>T，表示将向量由直角坐标系转换到极坐标系、球坐标系或超球坐标系得到的向量。</returns>
        </member>
        <member name="M:Com.IEuclideanVector`1.ToCartesian">
            <summary>
            返回将向量由极坐标系、球坐标系或超球坐标系转换到直角坐标系得到的向量。
            </summary>
            <returns>T，表示将向量由极坐标系、球坐标系或超球坐标系转换到直角坐标系得到的向量。</returns>
        </member>
        <member name="M:Com.IEuclideanVector`1.DistanceFrom(`0)">
            <summary>
            返回与指定向量之间的距离。
            </summary>
            <param name="vector">表示起始向量。</param>
            <returns>双精度浮点数，表示与指定向量之间的距离。</returns>
        </member>
        <member name="M:Com.IEuclideanVector`1.AngleFrom(`0)">
            <summary>
            返回与指定向量之间的夹角（弧度）。
            </summary>
            <param name="vector">表示起始向量。</param>
            <returns>双精度浮点数，表示与指定向量之间的夹角（弧度）。</returns>
        </member>
        <member name="T:Com.ILinearAlgebraVector">
            <summary>
            表示线性代数向量。
            </summary>
        </member>
        <member name="P:Com.ILinearAlgebraVector.Dimension">
            <summary>
            获取向量的维度。
            </summary>
        </member>
        <member name="P:Com.ILinearAlgebraVector.IsEmpty">
            <summary>
            获取表示向量是否不包含任何元素的布尔值。
            </summary>
        </member>
        <member name="P:Com.ILinearAlgebraVector.IsColumnVector">
            <summary>
            获取表示向量是否为列向量的布尔值。
            </summary>
        </member>
        <member name="P:Com.ILinearAlgebraVector.IsRowVector">
            <summary>
            获取表示向量是否为行向量的布尔值。
            </summary>
        </member>
        <member name="M:Com.ILinearAlgebraVector.ToArray">
            <summary>
            将向量转换为数组。
            </summary>
            <returns>T 数组，表示转换的结果。</returns>
        </member>
        <member name="M:Com.ILinearAlgebraVector.ToMatrix">
            <summary>
            将向量转换为矩阵。
            </summary>
            <returns>Matrix 对象，表示转换的结果。</returns>
        </member>
        <member name="T:Com.ILinearAlgebraVector`1">
            <summary>
            表示线性代数向量。
            </summary>
        </member>
        <member name="P:Com.ILinearAlgebraVector`1.Transport">
            <summary>
            获取转置向量。
            </summary>
        </member>
        <member name="T:Com.IVector`1">
            <summary>
            表示向量。向量是包含确定数量与值的元素的可迭代的有限有序集合。
            </summary>
        </member>
        <member name="P:Com.IVector`1.Size">
            <summary>
            获取或设置向量包含的元素数量。
            </summary>
        </member>
        <member name="P:Com.IVector`1.Capacity">
            <summary>
            获取向量在其内部数据结构不调整大小的情况下能够容纳的元素数量。
            </summary>
        </member>
        <member name="P:Com.IVector`1.IsEmpty">
            <summary>
            获取表示向量是否不包含任何元素的布尔值。
            </summary>
        </member>
        <member name="M:Com.IVector`1.Trim">
            <summary>
            释放向量内部数据结构的冗余空间。
            </summary>
        </member>
        <member name="M:Com.IVector`1.ToArray">
            <summary>
            将向量转换为数组。
            </summary>
            <returns>T 数组，表示转换的结果。</returns>
        </member>
        <member name="M:Com.IVector`1.ToList">
            <summary>
            将向量转换为列表。
            </summary>
            <returns>T 列表，表示转换的结果。</returns>
        </member>
        <member name="T:Com.PointD5D">
            <summary>
            以一组有序的双精度浮点数表示的五维直角坐标系坐标。
            </summary>
        </member>
        <member name="M:Com.PointD5D.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            使用双精度浮点数表示的 X 坐标、Y 坐标、Z 坐标、U 坐标与 V 坐标初始化 PointD5D 结构的新实例。
            </summary>
            <param name="x">双精度浮点数表示的 X 坐标。</param>
            <param name="y">双精度浮点数表示的 Y 坐标。</param>
            <param name="z">双精度浮点数表示的 Z 坐标。</param>
            <param name="u">双精度浮点数表示的 U 坐标。</param>
            <param name="v">双精度浮点数表示的 V 坐标。</param>
        </member>
        <member name="F:Com.PointD5D.Zero">
            <summary>
            表示零向量的 PointD5D 结构的实例。
            </summary>
        </member>
        <member name="F:Com.PointD5D.NaN">
            <summary>
            表示所有分量为非数字的 PointD5D 结构的实例。
            </summary>
        </member>
        <member name="F:Com.PointD5D.Ex">
            <summary>
            表示 X 基向量的 PointD5D 结构的实例。
            </summary>
        </member>
        <member name="F:Com.PointD5D.Ey">
            <summary>
            表示 Y 基向量的 PointD5D 结构的实例。
            </summary>
        </member>
        <member name="F:Com.PointD5D.Ez">
            <summary>
            表示 Z 基向量的 PointD5D 结构的实例。
            </summary>
        </member>
        <member name="F:Com.PointD5D.Eu">
            <summary>
            表示 U 基向量的 PointD5D 结构的实例。
            </summary>
        </member>
        <member name="F:Com.PointD5D.Ev">
            <summary>
            表示 V 基向量的 PointD5D 结构的实例。
            </summary>
        </member>
        <member name="P:Com.PointD5D.Item(System.Int32)">
            <summary>
            获取或设置此 PointD5D 结构在指定的基向量方向的分量。
            </summary>
            <param name="index">索引。</param>
        </member>
        <member name="P:Com.PointD5D.X">
            <summary>
            获取或设置此 PointD5D 结构在 X 轴的分量。
            </summary>
        </member>
        <member name="P:Com.PointD5D.Y">
            <summary>
            获取或设置此 PointD5D 结构在 Y 轴的分量。
            </summary>
        </member>
        <member name="P:Com.PointD5D.Z">
            <summary>
            获取或设置此 PointD5D 结构在 Z 轴的分量。
            </summary>
        </member>
        <member name="P:Com.PointD5D.U">
            <summary>
            获取或设置此 PointD5D 结构在 U 轴的分量。
            </summary>
        </member>
        <member name="P:Com.PointD5D.V">
            <summary>
            获取或设置此 PointD5D 结构在 V 轴的分量。
            </summary>
        </member>
        <member name="P:Com.PointD5D.Dimension">
            <summary>
            获取此 PointD5D 结构的维度。
            </summary>
        </member>
        <member name="P:Com.PointD5D.IsEmpty">
            <summary>
            获取表示此 PointD5D 结构是否为空向量的布尔值。
            </summary>
        </member>
        <member name="P:Com.PointD5D.IsZero">
            <summary>
            获取表示此 PointD5D 结构是否为零向量的布尔值。
            </summary>
        </member>
        <member name="P:Com.PointD5D.IsReadOnly">
            <summary>
            获取表示此 PointD5D 结构是否只读的布尔值。
            </summary>
        </member>
        <member name="P:Com.PointD5D.IsFixedSize">
            <summary>
            获取表示此 PointD5D 结构是否具有固定的维度的布尔值。
            </summary>
        </member>
        <member name="P:Com.PointD5D.IsNaN">
            <summary>
            获取表示此 PointD5D 结构是否包含非数字分量的布尔值。
            </summary>
        </member>
        <member name="P:Com.PointD5D.IsInfinity">
            <summary>
            获取表示此 PointD5D 结构是否包含无穷大分量的布尔值。
            </summary>
        </member>
        <member name="P:Com.PointD5D.IsNaNOrInfinity">
            <summary>
            获取表示此 PointD5D 结构是否包含非数字或无穷大分量的布尔值。
            </summary>
        </member>
        <member name="P:Com.PointD5D.Module">
            <summary>
            获取此 PointD5D 结构的模。
            </summary>
        </member>
        <member name="P:Com.PointD5D.ModuleSquared">
            <summary>
            获取此 PointD5D 结构的模的平方。
            </summary>
        </member>
        <member name="P:Com.PointD5D.Opposite">
            <summary>
            获取此 PointD5D 结构的相反向量。
            </summary>
        </member>
        <member name="P:Com.PointD5D.Normalize">
            <summary>
            获取此 PointD5D 结构的规范化向量。
            </summary>
        </member>
        <member name="P:Com.PointD5D.XYZU">
            <summary>
            获取或设置此 PointD5D 结构在 XYZU 空间的分量。
            </summary>
        </member>
        <member name="P:Com.PointD5D.YZUV">
            <summary>
            获取或设置此 PointD5D 结构在 YZUV 空间的分量。
            </summary>
        </member>
        <member name="P:Com.PointD5D.ZUVX">
            <summary>
            获取或设置此 PointD5D 结构在 ZUVX 空间的分量。
            </summary>
        </member>
        <member name="P:Com.PointD5D.UVXY">
            <summary>
            获取或设置此 PointD5D 结构在 UVXY 空间的分量。
            </summary>
        </member>
        <member name="P:Com.PointD5D.VXYZ">
            <summary>
            获取或设置此 PointD5D 结构在 VXYZ 空间的分量。
            </summary>
        </member>
        <member name="P:Com.PointD5D.AngleFromX">
            <summary>
            获取此 PointD5D 结构与 X 轴之间的夹角（弧度）。
            </summary>
        </member>
        <member name="P:Com.PointD5D.AngleFromY">
            <summary>
            获取此 PointD5D 结构与 Y 轴之间的夹角（弧度）。
            </summary>
        </member>
        <member name="P:Com.PointD5D.AngleFromZ">
            <summary>
            获取此 PointD5D 结构与 Z 轴之间的夹角（弧度）。
            </summary>
        </member>
        <member name="P:Com.PointD5D.AngleFromU">
            <summary>
            获取此 PointD5D 结构与 U 轴之间的夹角（弧度）。
            </summary>
        </member>
        <member name="P:Com.PointD5D.AngleFromV">
            <summary>
            获取此 PointD5D 结构与 V 轴之间的夹角（弧度）。
            </summary>
        </member>
        <member name="P:Com.PointD5D.AngleFromXYZU">
            <summary>
            获取此 PointD5D 结构与 XYZU 空间之间的夹角（弧度）。
            </summary>
        </member>
        <member name="P:Com.PointD5D.AngleFromYZUV">
            <summary>
            获取此 PointD5D 结构与 YZUV 空间之间的夹角（弧度）。
            </summary>
        </member>
        <member name="P:Com.PointD5D.AngleFromZUVX">
            <summary>
            获取此 PointD5D 结构与 ZUVX 空间之间的夹角（弧度）。
            </summary>
        </member>
        <member name="P:Com.PointD5D.AngleFromUVXY">
            <summary>
            获取此 PointD5D 结构与 UVXY 空间之间的夹角（弧度）。
            </summary>
        </member>
        <member name="P:Com.PointD5D.AngleFromVXYZ">
            <summary>
            获取此 PointD5D 结构与 VXYZ 空间之间的夹角（弧度）。
            </summary>
        </member>
        <member name="M:Com.PointD5D.Equals(System.Object)">
            <summary>
            判断此 PointD5D 结构是否与指定的对象相等。
            </summary>
            <param name="obj">用于比较的对象。</param>
            <returns>布尔值，表示此 PointD5D 结构是否与指定的对象相等。</returns>
        </member>
        <member name="M:Com.PointD5D.GetHashCode">
            <summary>
            返回此 PointD5D 结构的哈希代码。
            </summary>
            <returns>32 位整数，表示此 PointD5D 结构的哈希代码。</returns>
        </member>
        <member name="M:Com.PointD5D.ToString">
            <summary>
            将此 PointD5D 结构转换为字符串。
            </summary>
            <returns>字符串，表示此 PointD5D 结构的字符串形式。</returns>
        </member>
        <member name="M:Com.PointD5D.Equals(Com.PointD5D)">
            <summary>
            判断此 PointD5D 结构是否与指定的 PointD5D 结构相等。
            </summary>
            <param name="pt">用于比较的 PointD5D 结构。</param>
            <returns>布尔值，表示此 PointD5D 结构是否与指定的 PointD5D 结构相等。</returns>
        </member>
        <member name="M:Com.PointD5D.CompareTo(System.Object)">
            <summary>
            将此 PointD5D 结构与指定的对象进行次序比较。
            </summary>
            <param name="obj">用于比较的对象。</param>
            <returns>32 位整数，表示将此 PointD5D 结构与指定的对象进行次序比较得到的结果。</returns>
        </member>
        <member name="M:Com.PointD5D.CompareTo(Com.PointD5D)">
            <summary>
            将此 PointD5D 结构与指定的 PointD5D 结构进行次序比较。
            </summary>
            <param name="pt">用于比较的 PointD5D 结构。</param>
            <returns>32 位整数，表示将此 PointD5D 结构与指定的 PointD5D 结构进行次序比较得到的结果。</returns>
        </member>
        <member name="M:Com.PointD5D.IndexOf(System.Double)">
            <summary>
            遍历此 PointD5D 结构的所有分量并返回第一个与指定值相等的分量的索引。
            </summary>
            <param name="item">用于检索的值。</param>
            <returns>32 位整数，表示第一个与指定值相等的分量的索引。</returns>
        </member>
        <member name="M:Com.PointD5D.IndexOf(System.Double,System.Int32)">
            <summary>
            从指定的索引开始遍历此 PointD5D 结构的所有分量并返回第一个与指定值相等的分量的索引。
            </summary>
            <param name="item">用于检索的值。</param>
            <param name="startIndex">起始索引。</param>
            <returns>32 位整数，表示第一个与指定值相等的分量的索引。</returns>
        </member>
        <member name="M:Com.PointD5D.IndexOf(System.Double,System.Int32,System.Int32)">
            <summary>
            从指定的索引开始遍历此 PointD5D 结构指定数量的分量并返回第一个与指定值相等的分量的索引。
            </summary>
            <param name="item">用于检索的值。</param>
            <param name="startIndex">起始索引。</param>
            <param name="count">遍历的分量数量。</param>
            <returns>32 位整数，表示第一个与指定值相等的分量的索引。</returns>
        </member>
        <member name="M:Com.PointD5D.LastIndexOf(System.Double)">
            <summary>
            逆序遍历此 PointD5D 结构的所有分量并返回第一个与指定值相等的分量的索引。
            </summary>
            <param name="item">用于检索的值。</param>
            <returns>32 位整数，表示第一个与指定值相等的分量的索引。</returns>
        </member>
        <member name="M:Com.PointD5D.LastIndexOf(System.Double,System.Int32)">
            <summary>
            从指定的索引开始逆序遍历此 PointD5D 结构的所有分量并返回第一个与指定值相等的分量的索引。
            </summary>
            <param name="item">用于检索的值。</param>
            <param name="startIndex">起始索引。</param>
            <returns>32 位整数，表示第一个与指定值相等的分量的索引。</returns>
        </member>
        <member name="M:Com.PointD5D.LastIndexOf(System.Double,System.Int32,System.Int32)">
            <summary>
            从指定的索引开始逆序遍历此 PointD5D 结构指定数量的分量并返回第一个与指定值相等的分量的索引。
            </summary>
            <param name="item">用于检索的值。</param>
            <param name="startIndex">起始索引。</param>
            <param name="count">遍历的分量数量。</param>
            <returns>32 位整数，表示第一个与指定值相等的分量的索引。</returns>
        </member>
        <member name="M:Com.PointD5D.Contains(System.Double)">
            <summary>
            遍历此 PointD5D 结构的所有分量并返回表示是否存在与指定值相等的分量的布尔值。
            </summary>
            <param name="item">用于检索的值。</param>
            <returns>布尔值，表示是否存在与指定值相等的分量。</returns>
        </member>
        <member name="M:Com.PointD5D.ToArray">
            <summary>
            将此 PointD5D 结构转换为双精度浮点数数组。
            </summary>
            <returns>双精度浮点数数组，数组元素表示此 PointD5D 结构的分量。</returns>
        </member>
        <member name="M:Com.PointD5D.ToList">
            <summary>
            将此 PointD5D 结构转换为双精度浮点数列表。
            </summary>
            <returns>双精度浮点数列表，列表元素表示此 PointD5D 结构的分量。</returns>
        </member>
        <member name="M:Com.PointD5D.CopyTo(System.Double[],System.Int32)">
            <summary>
            将此 PointD5D 结构的所有分量复制到双精度浮点数数组中。
            </summary>
            <param name="array">双精度浮点数数组。</param>
            <param name="index">双精度浮点数数组的起始索引。</param>
        </member>
        <member name="M:Com.PointD5D.ToSpherical">
            <summary>
            返回将此 PointD5D 结构表示的直角坐标系坐标转换为超球坐标系坐标的 PointD5D 结构的新实例。
            </summary>
            <returns>PointD5D 结构，表示将此 PointD5D 结构表示的直角坐标系坐标转换为超球坐标系坐标得到的结果。</returns>
        </member>
        <member name="M:Com.PointD5D.ToCartesian">
            <summary>
            返回将此 PointD5D 结构表示的超球坐标系坐标转换为直角坐标系坐标的 PointD5D 结构的新实例。
            </summary>
            <returns>PointD5D 结构，表示将此 PointD5D 结构表示的超球坐标系坐标转换为直角坐标系坐标得到的结果。</returns>
        </member>
        <member name="M:Com.PointD5D.DistanceFrom(Com.PointD5D)">
            <summary>
            返回此 PointD5D 结构与指定的 PointD5D 结构之间的距离。
            </summary>
            <param name="pt">PointD5D 结构，表示另一个向量。</param>
            <returns>双精度浮点数，表示此 PointD5D 结构与指定的 PointD5D 结构之间的距离。</returns>
        </member>
        <member name="M:Com.PointD5D.AngleFrom(Com.PointD5D)">
            <summary>
            返回此 PointD5D 结构与指定的 PointD5D 结构之间的夹角（弧度）。
            </summary>
            <param name="pt">PointD5D 结构，表示另一个向量。</param>
            <returns>双精度浮点数，表示此 PointD5D 结构与指定的 PointD5D 结构之间的夹角（弧度）。</returns>
        </member>
        <member name="M:Com.PointD5D.Offset(System.Int32,System.Double)">
            <summary>
            按双精度浮点数表示的位移将此 PointD5D 结构在指定的基向量方向的分量平移指定的量。
            </summary>
            <param name="index">索引，用于指定平移的分量所在方向的基向量。</param>
            <param name="d">双精度浮点数表示的位移。</param>
        </member>
        <member name="M:Com.PointD5D.Offset(System.Double)">
            <summary>
            按双精度浮点数表示的位移将此 PointD5D 结构的所有分量平移指定的量。
            </summary>
            <param name="d">双精度浮点数表示的位移。</param>
        </member>
        <member name="M:Com.PointD5D.Offset(Com.PointD5D)">
            <summary>
            按 PointD5D 结构表示的位移将此 PointD5D 结构平移指定的量。
            </summary>
            <param name="pt">PointD5D 结构表示的位移。</param>
        </member>
        <member name="M:Com.PointD5D.Offset(System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            按双精度浮点数表示的 X 坐标位移、Y 坐标位移、Z 坐标位移、U 坐标位移与 V 坐标位移将此 PointD5D 结构平移指定的量。
            </summary>
            <param name="dx">双精度浮点数表示的 X 坐标位移。</param>
            <param name="dy">双精度浮点数表示的 Y 坐标位移。</param>
            <param name="dz">双精度浮点数表示的 Z 坐标位移。</param>
            <param name="du">双精度浮点数表示的 U 坐标位移。</param>
            <param name="dv">双精度浮点数表示的 V 坐标位移。</param>
        </member>
        <member name="M:Com.PointD5D.OffsetCopy(System.Int32,System.Double)">
            <summary>
            返回按双精度浮点数表示的位移将此 PointD5D 结构在指定的基向量方向的分量平移指定的量的 PointD5D 结构的新实例。
            </summary>
            <param name="index">索引，用于指定平移的分量所在方向的基向量。</param>
            <param name="d">双精度浮点数表示的位移。</param>
            <returns>PointD5D 结构，表示按双精度浮点数表示的位移将此 PointD5D 结构在指定的基向量方向的分量平移指定的量得到的结果。</returns>
        </member>
        <member name="M:Com.PointD5D.OffsetCopy(System.Double)">
            <summary>
            返回按双精度浮点数表示的位移将此 PointD5D 结构的所有分量平移指定的量的 PointD5D 结构的新实例。
            </summary>
            <param name="d">双精度浮点数表示的位移。</param>
            <returns>PointD5D 结构，表示按双精度浮点数表示的位移将此 PointD5D 结构的所有分量平移指定的量得到的结果。</returns>
        </member>
        <member name="M:Com.PointD5D.OffsetCopy(Com.PointD5D)">
            <summary>
            返回按 PointD5D 结构表示的位移将此 PointD5D 结构平移指定的量的 PointD5D 结构的新实例。
            </summary>
            <param name="pt">PointD5D 结构表示的位移。</param>
            <returns>PointD5D 结构，表示按 PointD5D 结构表示的位移将此 PointD5D 结构平移指定的量得到的结果。</returns>
        </member>
        <member name="M:Com.PointD5D.OffsetCopy(System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            返回按双精度浮点数表示的 X 坐标位移、Y 坐标位移、Z 坐标位移、U 坐标位移与 V 坐标位移将此 PointD5D 结构平移指定的量的 PointD5D 结构的新实例。
            </summary>
            <param name="dx">双精度浮点数表示的 X 坐标位移。</param>
            <param name="dy">双精度浮点数表示的 Y 坐标位移。</param>
            <param name="dz">双精度浮点数表示的 Z 坐标位移。</param>
            <param name="du">双精度浮点数表示的 U 坐标位移。</param>
            <param name="dv">双精度浮点数表示的 V 坐标位移。</param>
            <returns>PointD5D 结构，表示按双精度浮点数表示的 X 坐标位移、Y 坐标位移、Z 坐标位移、U 坐标位移与 V 坐标位移将此 PointD5D 结构平移指定的量得到的结果。</returns>
        </member>
        <member name="M:Com.PointD5D.Scale(System.Int32,System.Double)">
            <summary>
            按双精度浮点数表示的缩放因数将此 PointD5D 结构在指定的基向量方向的分量缩放指定的倍数。
            </summary>
            <param name="index">索引，用于指定缩放的分量所在方向的基向量。</param>
            <param name="s">双精度浮点数表示的缩放因数。</param>
        </member>
        <member name="M:Com.PointD5D.Scale(System.Double)">
            <summary>
            按双精度浮点数表示的缩放因数将此 PointD5D 结构的所有分量缩放指定的倍数。
            </summary>
            <param name="s">双精度浮点数表示的缩放因数。</param>
        </member>
        <member name="M:Com.PointD5D.Scale(Com.PointD5D)">
            <summary>
            按 PointD5D 结构表示的缩放因数将此 PointD5D 结构缩放指定的倍数。
            </summary>
            <param name="pt">PointD5D 结构表示的缩放因数。</param>
        </member>
        <member name="M:Com.PointD5D.Scale(System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            按双精度浮点数表示的 X 坐标缩放因数、Y 坐标缩放因数、Z 坐标缩放因数、U 坐标缩放因数与 V 坐标缩放因数将此 PointD5D 结构缩放指定的倍数。
            </summary>
            <param name="sx">双精度浮点数表示的 X 坐标缩放因数。</param>
            <param name="sy">双精度浮点数表示的 Y 坐标缩放因数。</param>
            <param name="sz">双精度浮点数表示的 Z 坐标缩放因数。</param>
            <param name="su">双精度浮点数表示的 U 坐标缩放因数。</param>
            <param name="sv">双精度浮点数表示的 V 坐标缩放因数。</param>
        </member>
        <member name="M:Com.PointD5D.ScaleCopy(System.Int32,System.Double)">
            <summary>
            返回按双精度浮点数表示的缩放因数将此 PointD5D 结构在指定的基向量方向的分量缩放指定的倍数的 PointD5D 结构的新实例。
            </summary>
            <param name="index">索引，用于指定缩放的分量所在方向的基向量。</param>
            <param name="s">双精度浮点数表示的缩放因数。</param>
            <returns>PointD5D 结构，表示按双精度浮点数表示的缩放因数将此 PointD5D 结构在指定的基向量方向的分量缩放指定的倍数得到的结果。</returns>
        </member>
        <member name="M:Com.PointD5D.ScaleCopy(System.Double)">
            <summary>
            返回按双精度浮点数表示的缩放因数将此 PointD5D 结构的所有分量缩放指定的倍数的 PointD5D 结构的新实例。
            </summary>
            <param name="s">双精度浮点数表示的缩放因数。</param>
            <returns>PointD5D 结构，表示按双精度浮点数表示的缩放因数将此 PointD5D 结构的所有分量缩放指定的倍数得到的结果。</returns>
        </member>
        <member name="M:Com.PointD5D.ScaleCopy(Com.PointD5D)">
            <summary>
            返回按 PointD5D 结构表示的缩放因数将此 PointD5D 结构缩放指定的倍数的 PointD5D 结构的新实例。
            </summary>
            <param name="pt">PointD5D 结构表示的缩放因数。</param>
            <returns>PointD5D 结构，表示按 PointD5D 结构表示的缩放因数将此 PointD5D 结构缩放指定的倍数得到的结果。</returns>
        </member>
        <member name="M:Com.PointD5D.ScaleCopy(System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            返回按双精度浮点数表示的 X 坐标缩放因数、Y 坐标缩放因数、Z 坐标缩放因数、U 坐标缩放因数与 V 坐标缩放因数将此 PointD5D 结构缩放指定的倍数的 PointD5D 结构的新实例。
            </summary>
            <param name="sx">双精度浮点数表示的 X 坐标缩放因数。</param>
            <param name="sy">双精度浮点数表示的 Y 坐标缩放因数。</param>
            <param name="sz">双精度浮点数表示的 Z 坐标缩放因数。</param>
            <param name="su">双精度浮点数表示的 U 坐标缩放因数。</param>
            <param name="sv">双精度浮点数表示的 V 坐标缩放因数。</param>
            <returns>PointD5D 结构，表示按双精度浮点数表示的 X 坐标缩放因数、Y 坐标缩放因数、Z 坐标缩放因数、U 坐标缩放因数与 V 坐标缩放因数将此 PointD5D 结构缩放指定的倍数得到的结果。</returns>
        </member>
        <member name="M:Com.PointD5D.Reflect(System.Int32)">
            <summary>
            将此 PointD5D 结构在指定的基向量方向的分量翻转。
            </summary>
            <param name="index">索引，用于指定翻转的分量所在方向的基向量。</param>
        </member>
        <member name="M:Com.PointD5D.ReflectCopy(System.Int32)">
            <summary>
            返回将此 PointD5D 结构在指定的基向量方向的分量翻转的 PointD5D 结构的新实例。
            </summary>
            <param name="index">索引，用于指定翻转的分量所在方向的基向量。</param>
            <returns>PointD5D 结构，表示将此 PointD5D 结构在指定的基向量方向的分量翻转得到的结果。</returns>
        </member>
        <member name="M:Com.PointD5D.Shear(System.Int32,System.Int32,System.Double)">
            <summary>
            按双精度浮点数表示的弧度将此 PointD5D 结构错切指定的角度。
            </summary>
            <param name="index1">索引，用于指定与错切方向同向的基向量。</param>
            <param name="index2">索引，用于指定与错切方向共面正交的基向量。</param>
            <param name="angle">双精度浮点数，表示此 PointD5D 结构沿索引 index1 指定的基向量方向且共面正交于 index2 指定的基向量方向错切的角度（弧度）。</param>
        </member>
        <member name="M:Com.PointD5D.ShearCopy(System.Int32,System.Int32,System.Double)">
            <summary>
            返回按双精度浮点数表示的弧度将此 PointD5D 结构错切指定的角度的 PointD5D 结构的新实例。
            </summary>
            <param name="index1">索引，用于指定与错切方向同向的基向量。</param>
            <param name="index2">索引，用于指定与错切方向共面正交的基向量。</param>
            <param name="angle">双精度浮点数，表示此 PointD5D 结构沿索引 index1 指定的基向量方向且共面正交于 index2 指定的基向量方向错切的角度（弧度）。</param>
            <returns>PointD5D 结构，表示按双精度浮点数表示的弧度将此 PointD5D 结构错切指定的角度得到的结果。</returns>
        </member>
        <member name="M:Com.PointD5D.Rotate(System.Int32,System.Int32,System.Double)">
            <summary>
            按双精度浮点数表示的弧度将此 PointD5D 结构旋转指定的角度。
            </summary>
            <param name="index1">索引，用于指定构成旋转轨迹所在平面的第一个基向量。</param>
            <param name="index2">索引，用于指定构成旋转轨迹所在平面的第二个基向量。</param>
            <param name="angle">双精度浮点数，表示此 PointD5D 结构绕索引 index1 与 index2 指定的基向量构成的平面的法向空间旋转的角度（弧度）（以索引 index1 指定的基向量为 0 弧度，从索引 index1 指定的基向量指向索引 index2 指定的基向量的方向为正方向）。</param>
        </member>
        <member name="M:Com.PointD5D.RotateCopy(System.Int32,System.Int32,System.Double)">
            <summary>
            返回按双精度浮点数表示的弧度将此 PointD5D 结构旋转指定的角度的 PointD5D 结构的新实例。
            </summary>
            <param name="index1">索引，用于指定构成旋转轨迹所在平面的第一个基向量。</param>
            <param name="index2">索引，用于指定构成旋转轨迹所在平面的第二个基向量。</param>
            <param name="angle">双精度浮点数，表示此 PointD5D 结构绕索引 index1 与 index2 指定的基向量构成的平面的法向空间旋转的角度（弧度）（以索引 index1 指定的基向量为 0 弧度，从索引 index1 指定的基向量指向索引 index2 指定的基向量的方向为正方向）。</param>
            <returns>PointD5D 结构，表示按双精度浮点数表示的弧度将此 PointD5D 结构旋转指定的角度得到的结果。</returns>
        </member>
        <member name="M:Com.PointD5D.MatrixTransform(Com.Matrix)">
            <summary>
            按 Matrix 对象表示的 6x6 仿射矩阵（左矩阵）将此 PointD5D 结构进行仿射变换。
            </summary>
            <param name="matrixLeft">Matrix 对象，表示 6x6 仿射矩阵（左矩阵）。</param>
        </member>
        <member name="M:Com.PointD5D.MatrixTransformCopy(Com.Matrix)">
            <summary>
            返回按 Matrix 对象表示的 6x6 仿射矩阵（左矩阵）将此 PointD5D 结构进行仿射变换的 PointD5D 结构的新实例。
            </summary>
            <param name="matrixLeft">Matrix 对象列表，表示 6x6 仿射矩阵（左矩阵）。</param>
            <returns>PointD5D 结构，表示按 Matrix 对象表示的 6x6 仿射矩阵（左矩阵）将此 PointD5D 结构进行仿射变换得到的结果。</returns>
        </member>
        <member name="M:Com.PointD5D.AffineTransform(Com.AffineTransformation)">
            <summary>
            按 AffineTransformation 对象将此 PointD5D 结构进行仿射变换。
            </summary>
            <param name="affineTransformation">AffineTransformation 对象。</param>
        </member>
        <member name="M:Com.PointD5D.AffineTransformCopy(Com.AffineTransformation)">
            <summary>
            返回按 AffineTransformation 对象将此 PointD5D 结构进行仿射变换得到的结果。
            </summary>
            <param name="affineTransformation">AffineTransformation 对象。</param>
            <returns>PointD5D 结构，表示按 AffineTransformation 对象将此 PointD5D 结构进行仿射变换得到的结果。</returns>
        </member>
        <member name="M:Com.PointD5D.AffineTransform(Com.PointD5D,Com.PointD5D,Com.PointD5D,Com.PointD5D,Com.PointD5D,Com.PointD5D)">
            <summary>
            按 PointD5D 结构表示的 X 基向量、Y 基向量、Z 基向量、U 基向量、V 基向量与偏移向量将此 PointD5D 结构进行仿射变换。
            </summary>
            <param name="ex">PointD5D 结构表示的 X 基向量。</param>
            <param name="ey">PointD5D 结构表示的 Y 基向量。</param>
            <param name="ez">PointD5D 结构表示的 Z 基向量。</param>
            <param name="eu">PointD5D 结构表示的 U 基向量。</param>
            <param name="ev">PointD5D 结构表示的 V 基向量。</param>
            <param name="offset">PointD5D 结构表示的偏移向量。</param>
        </member>
        <member name="M:Com.PointD5D.AffineTransform(Com.Matrix)">
            <summary>
            按 Matrix 对象表示的 6x6 仿射矩阵（左矩阵）将此 PointD5D 结构进行仿射变换。
            </summary>
            <param name="matrixLeft">Matrix 对象，表示 6x6 仿射矩阵（左矩阵）。</param>
        </member>
        <member name="M:Com.PointD5D.AffineTransform(Com.Matrix[])">
            <summary>
            按 Matrix 对象数组表示的 6x6 仿射矩阵（左矩阵）数组将此 PointD5D 结构进行仿射变换。
            </summary>
            <param name="matricesLeft">Matrix 对象数组，表示 6x6 仿射矩阵（左矩阵）数组。</param>
        </member>
        <member name="M:Com.PointD5D.AffineTransform(System.Collections.Generic.List{Com.Matrix})">
            <summary>
            按 Matrix 对象列表表示的 6x6 仿射矩阵（左矩阵）列表将此 PointD5D 结构进行仿射变换。
            </summary>
            <param name="matricesLeft">Matrix 对象列表，表示 6x6 仿射矩阵（左矩阵）列表。</param>
        </member>
        <member name="M:Com.PointD5D.AffineTransformCopy(Com.PointD5D,Com.PointD5D,Com.PointD5D,Com.PointD5D,Com.PointD5D,Com.PointD5D)">
            <summary>
            返回按 PointD5D 结构表示的 X 基向量、Y 基向量、Z 基向量、U 基向量、V 基向量与偏移向量将此 PointD5D 结构进行仿射变换的 PointD5D 结构的新实例。
            </summary>
            <param name="ex">PointD5D 结构表示的 X 基向量。</param>
            <param name="ey">PointD5D 结构表示的 Y 基向量。</param>
            <param name="ez">PointD5D 结构表示的 Z 基向量。</param>
            <param name="eu">PointD5D 结构表示的 U 基向量。</param>
            <param name="ev">PointD5D 结构表示的 V 基向量。</param>
            <param name="offset">PointD5D 结构表示的偏移向量。</param>
            <returns>PointD5D 结构，表示按 PointD5D 结构表示的 X 基向量、Y 基向量、Z 基向量、U 基向量、V 基向量与偏移向量将此 PointD5D 结构进行仿射变换得到的结果。</returns>
        </member>
        <member name="M:Com.PointD5D.AffineTransformCopy(Com.Matrix)">
            <summary>
            返回按 Matrix 对象表示的 6x6 仿射矩阵（左矩阵）将此 PointD5D 结构进行仿射变换的 PointD5D 结构的新实例。
            </summary>
            <param name="matrixLeft">Matrix 对象，表示 6x6 仿射矩阵（左矩阵）。</param>
            <returns>PointD5D 结构，表示按 Matrix 对象表示的 6x6 仿射矩阵（左矩阵）将此 PointD5D 结构进行仿射变换得到的结果。</returns>
        </member>
        <member name="M:Com.PointD5D.AffineTransformCopy(Com.Matrix[])">
            <summary>
            返回按 Matrix 对象数组表示的 6x6 仿射矩阵（左矩阵）数组将此 PointD5D 结构进行仿射变换的 PointD5D 结构的新实例。
            </summary>
            <param name="matricesLeft">Matrix 对象数组，表示 6x6 仿射矩阵（左矩阵）数组。</param>
            <returns>PointD5D 结构，表示按 Matrix 对象数组表示的 6x6 仿射矩阵（左矩阵）数组将此 PointD5D 结构进行仿射变换得到的结果。</returns>
        </member>
        <member name="M:Com.PointD5D.AffineTransformCopy(System.Collections.Generic.List{Com.Matrix})">
            <summary>
            返回按 Matrix 对象列表表示的 6x6 仿射矩阵（左矩阵）列表将此 PointD5D 结构进行仿射变换的 PointD5D 结构的新实例。
            </summary>
            <param name="matricesLeft">Matrix 对象列表，表示 6x6 仿射矩阵（左矩阵）列表。</param>
            <returns>PointD5D 结构，表示按 Matrix 对象列表表示的 6x6 仿射矩阵（左矩阵）列表将此 PointD5D 结构进行仿射变换得到的结果。</returns>
        </member>
        <member name="M:Com.PointD5D.InverseAffineTransform(Com.PointD5D,Com.PointD5D,Com.PointD5D,Com.PointD5D,Com.PointD5D,Com.PointD5D)">
            <summary>
            按 PointD5D 结构表示的 X 基向量、Y 基向量、Z 基向量、U 基向量、V 基向量与偏移向量将此 PointD5D 结构进行逆仿射变换。
            </summary>
            <param name="ex">PointD5D 结构表示的 X 基向量。</param>
            <param name="ey">PointD5D 结构表示的 Y 基向量。</param>
            <param name="ez">PointD5D 结构表示的 Z 基向量。</param>
            <param name="eu">PointD5D 结构表示的 U 基向量。</param>
            <param name="ev">PointD5D 结构表示的 V 基向量。</param>
            <param name="offset">PointD5D 结构表示的偏移向量。</param>
        </member>
        <member name="M:Com.PointD5D.InverseAffineTransform(Com.Matrix)">
            <summary>
            按 Matrix 对象表示的 6x6 仿射矩阵（左矩阵）将此 PointD5D 结构进行逆仿射变换。
            </summary>
            <param name="matrixLeft">Matrix 对象，表示 6x6 仿射矩阵（左矩阵）。</param>
        </member>
        <member name="M:Com.PointD5D.InverseAffineTransform(Com.Matrix[])">
            <summary>
            按 Matrix 对象数组表示的 6x6 仿射矩阵（左矩阵）数组将此 PointD5D 结构进行逆仿射变换。
            </summary>
            <param name="matricesLeft">Matrix 对象数组，表示 6x6 仿射矩阵（左矩阵）数组。</param>
        </member>
        <member name="M:Com.PointD5D.InverseAffineTransform(System.Collections.Generic.List{Com.Matrix})">
            <summary>
            按 Matrix 对象列表表示的 6x6 仿射矩阵（左矩阵）列表将此 PointD5D 结构进行逆仿射变换。
            </summary>
            <param name="matricesLeft">Matrix 对象列表，表示 6x6 仿射矩阵（左矩阵）列表。</param>
        </member>
        <member name="M:Com.PointD5D.InverseAffineTransformCopy(Com.PointD5D,Com.PointD5D,Com.PointD5D,Com.PointD5D,Com.PointD5D,Com.PointD5D)">
            <summary>
            返回按 PointD5D 结构表示的 X 基向量、Y 基向量、Z 基向量、U 基向量、V 基向量与偏移向量将此 PointD5D 结构进行逆仿射变换的 PointD5D 结构的新实例。
            </summary>
            <param name="ex">PointD5D 结构表示的 X 基向量。</param>
            <param name="ey">PointD5D 结构表示的 Y 基向量。</param>
            <param name="ez">PointD5D 结构表示的 Z 基向量。</param>
            <param name="eu">PointD5D 结构表示的 U 基向量。</param>
            <param name="ev">PointD5D 结构表示的 V 基向量。</param>
            <param name="offset">PointD5D 结构表示的偏移向量。</param>
            <returns>PointD5D 结构，表示按 PointD5D 结构表示的 X 基向量、Y 基向量、Z 基向量、U 基向量、V 基向量与偏移向量将此 PointD5D 结构进行逆仿射变换得到的结果。</returns>
        </member>
        <member name="M:Com.PointD5D.InverseAffineTransformCopy(Com.Matrix)">
            <summary>
            返回按 Matrix 对象表示的 6x6 仿射矩阵（左矩阵）将此 PointD5D 结构进行逆仿射变换的 PointD5D 结构的新实例。
            </summary>
            <param name="matrixLeft">Matrix 对象，表示 6x6 仿射矩阵（左矩阵）。</param>
            <returns>PointD5D 结构，表示按 Matrix 对象表示的 6x6 仿射矩阵（左矩阵）将此 PointD5D 结构进行逆仿射变换得到的结果。</returns>
        </member>
        <member name="M:Com.PointD5D.InverseAffineTransformCopy(Com.Matrix[])">
            <summary>
            返回按 Matrix 对象数组表示的 6x6 仿射矩阵（左矩阵）数组将此 PointD5D 结构进行逆仿射变换的 PointD5D 结构的新实例。
            </summary>
            <param name="matricesLeft">Matrix 对象数组，表示 6x6 仿射矩阵（左矩阵）数组。</param>
            <returns>PointD5D 结构，表示按 Matrix 对象数组表示的 6x6 仿射矩阵（左矩阵）数组将此 PointD5D 结构进行逆仿射变换得到的结果。</returns>
        </member>
        <member name="M:Com.PointD5D.InverseAffineTransformCopy(System.Collections.Generic.List{Com.Matrix})">
            <summary>
            返回按 Matrix 对象列表表示的 6x6 仿射矩阵（左矩阵）列表将此 PointD5D 结构进行逆仿射变换的 PointD5D 结构的新实例。
            </summary>
            <param name="matricesLeft">Matrix 对象列表，表示 6x6 仿射矩阵（左矩阵）列表。</param>
            <returns>PointD5D 结构，表示按 Matrix 对象列表表示的 6x6 仿射矩阵（左矩阵）列表将此 PointD5D 结构进行逆仿射变换得到的结果。</returns>
        </member>
        <member name="M:Com.PointD5D.ProjectToXYZU(Com.PointD5D,System.Double)">
            <summary>
            返回将此 PointD5D 结构投影至平行于 XYZU 空间的投影空间的 PointD4D 结构的新实例。
            </summary>
            <param name="prjCenter">PointD5D 结构，表示投影中心在投影空间的正投影在原坐标系的坐标。</param>
            <param name="focalLength">双精度浮点数表示的焦距，平行于投影空间的一维测度其真实大小与投影大小的比值等于其到投影空间的距离与焦距的比值。</param>
            <returns>PointD4D 结构，表示将此 PointD5D 结构投影至平行于 XYZU 空间的投影空间得到的结果。</returns>
        </member>
        <member name="M:Com.PointD5D.ProjectToYZUV(Com.PointD5D,System.Double)">
            <summary>
            返回将此 PointD5D 结构投影至平行于 YZUV 空间的投影空间的 PointD4D 结构的新实例。
            </summary>
            <param name="prjCenter">PointD5D 结构，表示投影中心在投影空间的正投影在原坐标系的坐标。</param>
            <param name="focalLength">双精度浮点数表示的焦距，平行于投影空间的一维测度其真实大小与投影大小的比值等于其到投影空间的距离与焦距的比值。</param>
            <returns>PointD4D 结构，表示将此 PointD5D 结构投影至平行于 YZUV 空间的投影空间得到的结果。</returns>
        </member>
        <member name="M:Com.PointD5D.ProjectToZUVX(Com.PointD5D,System.Double)">
            <summary>
            返回将此 PointD5D 结构投影至平行于 ZUVX 空间的投影空间的 PointD4D 结构的新实例。
            </summary>
            <param name="prjCenter">PointD5D 结构，表示投影中心在投影空间的正投影在原坐标系的坐标。</param>
            <param name="focalLength">双精度浮点数表示的焦距，平行于投影空间的一维测度其真实大小与投影大小的比值等于其到投影空间的距离与焦距的比值。</param>
            <returns>PointD4D 结构，表示将此 PointD5D 结构投影至平行于 ZUVX 空间的投影空间得到的结果。</returns>
        </member>
        <member name="M:Com.PointD5D.ProjectToUVXY(Com.PointD5D,System.Double)">
            <summary>
            返回将此 PointD5D 结构投影至平行于 UVXY 空间的投影空间的 PointD4D 结构的新实例。
            </summary>
            <param name="prjCenter">PointD5D 结构，表示投影中心在投影空间的正投影在原坐标系的坐标。</param>
            <param name="focalLength">双精度浮点数表示的焦距，平行于投影空间的一维测度其真实大小与投影大小的比值等于其到投影空间的距离与焦距的比值。</param>
            <returns>PointD4D 结构，表示将此 PointD5D 结构投影至平行于 UVXY 空间的投影空间得到的结果。</returns>
        </member>
        <member name="M:Com.PointD5D.ProjectToVXYZ(Com.PointD5D,System.Double)">
            <summary>
            返回将此 PointD5D 结构投影至平行于 VXYZ 空间的投影空间的 PointD4D 结构的新实例。
            </summary>
            <param name="prjCenter">PointD5D 结构，表示投影中心在投影空间的正投影在原坐标系的坐标。</param>
            <param name="focalLength">双精度浮点数表示的焦距，平行于投影空间的一维测度其真实大小与投影大小的比值等于其到投影空间的距离与焦距的比值。</param>
            <returns>PointD4D 结构，表示将此 PointD5D 结构投影至平行于 VXYZ 空间的投影空间得到的结果。</returns>
        </member>
        <member name="M:Com.PointD5D.ToColumnVector">
            <summary>
            返回将此 PointD5D 结构转换为列向量的 Vector 的新实例。
            </summary>
            <returns>Vector 对象，表示将此 PointD5D 结构转换为列向量得到的结果。</returns>
        </member>
        <member name="M:Com.PointD5D.ToRowVector">
            <summary>
            返回将此 PointD5D 结构转换为行向量的 Vector 的新实例。
            </summary>
            <returns>Vector 对象，表示将此 PointD5D 结构转换为行向量得到的结果。</returns>
        </member>
        <member name="M:Com.PointD5D.Equals(Com.PointD5D,Com.PointD5D)">
            <summary>
            判断两个 PointD5D 结构是否相等。
            </summary>
            <param name="left">用于比较的第一个 PointD5D 结构。</param>
            <param name="right">用于比较的第二个 PointD5D 结构。</param>
            <returns>布尔值，表示两个 PointD5D 结构是否相等。</returns>
        </member>
        <member name="M:Com.PointD5D.Compare(Com.PointD5D,Com.PointD5D)">
            <summary>
            比较两个 PointD5D 结构的次序。
            </summary>
            <param name="left">用于比较的第一个 PointD5D 结构。</param>
            <param name="right">用于比较的第二个 PointD5D 结构。</param>
            <returns>32 位整数，表示将两个 PointD5D 结构进行次序比较得到的结果。</returns>
        </member>
        <member name="M:Com.PointD5D.FromVector(Com.Vector)">
            <summary>
            返回将 Vector 对象转换为 PointD5D 结构的新实例。
            </summary>
            <param name="vector">Vector 对象。</param>
            <returns>PointD5D 结构，表示转换的结果。</returns>
        </member>
        <member name="M:Com.PointD5D.IdentityMatrix">
            <summary>
            返回单位矩阵，表示不对 PointD5D 结构进行仿射变换的 6x6 仿射矩阵（左矩阵）的 Matrix 的新实例。
            </summary>
            <returns>Matrix 对象，表示不对 PointD5D 结构进行仿射变换的 6x6 仿射矩阵（左矩阵）。</returns>
        </member>
        <member name="M:Com.PointD5D.OffsetMatrix(System.Int32,System.Double)">
            <summary>
            返回表示按双精度浮点数表示的位移将 PointD5D 结构在指定的基向量方向的分量平移指定的量的 6x6 仿射矩阵（左矩阵）的 Matrix 的新实例。
            </summary>
            <param name="index">索引，用于指定平移的分量所在方向的基向量。</param>
            <param name="d">双精度浮点数表示的位移。</param>
            <returns>Matrix 对象，表示按双精度浮点数表示的位移将 PointD5D 结构在指定的基向量方向的分量平移指定的量的 6x6 仿射矩阵（左矩阵）。</returns>
        </member>
        <member name="M:Com.PointD5D.OffsetMatrix(System.Double)">
            <summary>
            返回表示按双精度浮点数表示的位移将 PointD5D 结构的所有分量平移指定的量的 6x6 仿射矩阵（左矩阵）的 Matrix 的新实例。
            </summary>
            <param name="d">双精度浮点数表示的位移。</param>
            <returns>Matrix 对象，表示按双精度浮点数表示的位移将 PointD5D 结构的所有分量平移指定的量的 6x6 仿射矩阵（左矩阵）。</returns>
        </member>
        <member name="M:Com.PointD5D.OffsetMatrix(Com.PointD5D)">
            <summary>
            返回表示按 PointD5D 结构表示的位移将 PointD5D 结构平移指定的量的 6x6 仿射矩阵（左矩阵）的 Matrix 的新实例。
            </summary>
            <param name="pt">PointD5D 结构表示的位移。</param>
            <returns>Matrix 对象，表示按 PointD5D 结构表示的位移将 PointD5D 结构平移指定的量的 6x6 仿射矩阵（左矩阵）。</returns>
        </member>
        <member name="M:Com.PointD5D.OffsetMatrix(System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            返回表示按双精度浮点数表示的 X 坐标位移、Y 坐标位移、Z 坐标位移、U 坐标位移与 V 坐标位移将 PointD5D 结构平移指定的量的 6x6 仿射矩阵（左矩阵）的 Matrix 的新实例。
            </summary>
            <param name="dx">双精度浮点数表示的 X 坐标位移。</param>
            <param name="dy">双精度浮点数表示的 Y 坐标位移。</param>
            <param name="dz">双精度浮点数表示的 Z 坐标位移。</param>
            <param name="du">双精度浮点数表示的 U 坐标位移。</param>
            <param name="dv">双精度浮点数表示的 V 坐标位移。</param>
            <returns>Matrix 对象，表示按双精度浮点数表示的 X 坐标位移、Y 坐标位移、Z 坐标位移、U 坐标位移与 V 坐标位移将 PointD5D 结构平移指定的量的 6x6 仿射矩阵（左矩阵）。</returns>
        </member>
        <member name="M:Com.PointD5D.ScaleMatrix(System.Int32,System.Double)">
            <summary>
            返回表示按双精度浮点数表示的缩放因数将 PointD5D 结构在指定的基向量方向的分量缩放指定的倍数的 6x6 仿射矩阵（左矩阵）的 Matrix 的新实例。
            </summary>
            <param name="index">索引，用于指定平移的分量所在方向的基向量。</param>
            <param name="s">双精度浮点数表示的缩放因数。</param>
            <returns>Matrix 对象，表示按双精度浮点数表示的缩放因数将 PointD5D 结构在指定的基向量方向的分量缩放指定的倍数的 6x6 仿射矩阵（左矩阵）。</returns>
        </member>
        <member name="M:Com.PointD5D.ScaleMatrix(System.Double)">
            <summary>
            返回表示按双精度浮点数表示的缩放因数将 PointD5D 结构的所有分量缩放指定的倍数的 6x6 仿射矩阵（左矩阵）的 Matrix 的新实例。
            </summary>
            <param name="s">双精度浮点数表示的缩放因数。</param>
            <returns>Matrix 对象，表示按双精度浮点数表示的缩放因数将 PointD5D 结构的所有分量缩放指定的倍数的 6x6 仿射矩阵（左矩阵）。</returns>
        </member>
        <member name="M:Com.PointD5D.ScaleMatrix(Com.PointD5D)">
            <summary>
            返回表示按 PointD5D 结构表示的缩放因数将 PointD5D 结构缩放指定的倍数的 6x6 仿射矩阵（左矩阵）的 Matrix 的新实例。
            </summary>
            <param name="pt">PointD5D 结构表示的缩放因数。</param>
            <returns>Matrix 对象，表示按 PointD5D 结构表示的缩放因数将 PointD5D 结构缩放指定的倍数的 6x6 仿射矩阵（左矩阵）。</returns>
        </member>
        <member name="M:Com.PointD5D.ScaleMatrix(System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            返回表示按双精度浮点数表示的 X 坐标缩放因数、Y 坐标缩放因数、Z 坐标缩放因数、U 坐标缩放因数与 V 坐标缩放因数将此 PointD5D 结构缩放指定的倍数的 6x6 仿射矩阵（左矩阵）的 Matrix 的新实例。
            </summary>
            <param name="sx">双精度浮点数表示的 X 坐标缩放因数。</param>
            <param name="sy">双精度浮点数表示的 Y 坐标缩放因数。</param>
            <param name="sz">双精度浮点数表示的 Z 坐标缩放因数。</param>
            <param name="su">双精度浮点数表示的 U 坐标缩放因数。</param>
            <param name="sv">双精度浮点数表示的 V 坐标缩放因数。</param>
            <returns>Matrix 对象，表示按双精度浮点数表示的 X 坐标缩放因数、Y 坐标缩放因数、Z 坐标缩放因数、U 坐标缩放因数与 V 坐标缩放因数将此 PointD5D 结构缩放指定的倍数的 6x6 仿射矩阵（左矩阵）。</returns>
        </member>
        <member name="M:Com.PointD5D.ReflectMatrix(System.Int32)">
            <summary>
            返回表示将 PointD5D 结构在指定的基向量方向的分量翻转的 6x6 仿射矩阵（左矩阵）的 Matrix 的新实例。
            </summary>
            <param name="index">索引，用于指定翻转的分量所在方向的基向量。</param>
            <returns>Matrix 对象，表示将 PointD5D 结构在指定的基向量方向的分量翻转的 6x6 仿射矩阵（左矩阵）。</returns>
        </member>
        <member name="M:Com.PointD5D.ShearMatrix(System.Int32,System.Int32,System.Double)">
            <summary>
            返回表示用于错切 PointD5D 结构的 6x6 仿射矩阵（左矩阵）的 Matrix 的新实例。
            </summary>
            <param name="index1">索引，用于指定与错切方向同向的基向量。</param>
            <param name="index2">索引，用于指定与错切方向共面正交的基向量。</param>
            <param name="angle">双精度浮点数，表示此 PointD5D 结构沿索引 index1 指定的基向量方向且共面正交于 index2 指定的基向量方向错切的角度（弧度）。</param>
            <returns>Matrix 对象，表示用于错切 PointD5D 结构的 6x6 仿射矩阵（左矩阵）。</returns>
        </member>
        <member name="M:Com.PointD5D.RotateMatrix(System.Int32,System.Int32,System.Double)">
            <summary>
            返回表示用于旋转 PointD5D 结构的 6x6 仿射矩阵（左矩阵）的 Matrix 的新实例。
            </summary>
            <param name="index1">索引，用于指定构成旋转轨迹所在平面的第一个基向量。</param>
            <param name="index2">索引，用于指定构成旋转轨迹所在平面的第二个基向量。</param>
            <param name="angle">双精度浮点数，表示 PointD5D 结构绕索引 index1 与 index2 指定的基向量构成的平面的法向空间旋转的角度（弧度）（以索引 index1 指定的基向量为 0 弧度，从索引 index1 指定的基向量指向索引 index2 指定的基向量的方向为正方向）。</param>
            <returns>Matrix 对象，表示用于旋转 PointD5D 结构的 6x6 仿射矩阵（左矩阵）。</returns>
        </member>
        <member name="M:Com.PointD5D.DistanceBetween(Com.PointD5D,Com.PointD5D)">
            <summary>
            返回两个 PointD5D 结构之间的距离。
            </summary>
            <param name="left">第一个 PointD5D 结构。</param>
            <param name="right">第二个 PointD5D 结构。</param>
            <returns>双精度浮点数，表示两个 PointD5D 结构之间的距离。</returns>
        </member>
        <member name="M:Com.PointD5D.AngleBetween(Com.PointD5D,Com.PointD5D)">
            <summary>
            返回两个 PointD5D 结构之间的夹角（弧度）。
            </summary>
            <param name="left">第一个 PointD5D 结构。</param>
            <param name="right">第二个 PointD5D 结构。</param>
            <returns>双精度浮点数，表示两个 PointD5D 结构之间的夹角（弧度）。</returns>
        </member>
        <member name="M:Com.PointD5D.DotProduct(Com.PointD5D,Com.PointD5D)">
            <summary>
            返回两个 PointD5D 结构的内积。
            </summary>
            <param name="left">第一个 PointD5D 结构。</param>
            <param name="right">第二个 PointD5D 结构。</param>
            <returns>双精度浮点数，表示两个 PointD5D 结构的内积。</returns>
        </member>
        <member name="M:Com.PointD5D.CrossProduct(Com.PointD5D,Com.PointD5D)">
            <summary>
            返回两个 PointD5D 结构的外积。该外积为一个十维向量，其所有分量的数值依次为 X∧Y 基向量、X∧Z 基向量、X∧U 基向量、X∧V 基向量、Y∧Z 基向量、Y∧U 基向量、Y∧V 基向量、Z∧U 基向量、Z∧V 基向量与 U∧V 基向量的系数。
            </summary>
            <param name="left">第一个 PointD5D 结构。</param>
            <param name="right">第二个 PointD5D 结构。</param>
            <returns>Vector 对象，表示两个 PointD5D 结构的外积。</returns>
        </member>
        <member name="M:Com.PointD5D.Sign(Com.PointD5D)">
            <summary>
            返回将 PointD5D 结构的所有分量取符号数得到的 PointD5D 结构的新实例。
            </summary>
            <param name="pt">PointD5D 结构，用于转换的结构。</param>
            <returns>PointD5D 结构，表示将 PointD5D 结构的所有分量取符号数得到的结果</returns>
        </member>
        <member name="M:Com.PointD5D.Abs(Com.PointD5D)">
            <summary>
            返回将 PointD5D 结构的所有分量取绝对值得到的 PointD5D 结构的新实例。
            </summary>
            <param name="pt">PointD5D 结构，用于转换的结构。</param>
            <returns>PointD5D 结构，表示将 PointD5D 结构的所有分量取绝对值得到的结果</returns>
        </member>
        <member name="M:Com.PointD5D.Ceiling(Com.PointD5D)">
            <summary>
            返回将 PointD5D 结构的所有分量舍入到较大的整数值得到的 PointD5D 结构的新实例。
            </summary>
            <param name="pt">PointD5D 结构，用于转换的结构。</param>
            <returns>PointD5D 结构，表示将 PointD5D 结构的所有分量舍入到较大的整数值得到的结果</returns>
        </member>
        <member name="M:Com.PointD5D.Floor(Com.PointD5D)">
            <summary>
            返回将 PointD5D 结构的所有分量舍入到较小的整数值得到的 PointD5D 结构的新实例。
            </summary>
            <param name="pt">PointD5D 结构，用于转换的结构。</param>
            <returns>PointD5D 结构，表示将 PointD5D 结构的所有分量舍入到较小的整数值得到的结果</returns>
        </member>
        <member name="M:Com.PointD5D.Round(Com.PointD5D)">
            <summary>
            返回将 PointD5D 结构的所有分量舍入到最接近的整数值得到的 PointD5D 结构的新实例。
            </summary>
            <param name="pt">PointD5D 结构，用于转换的结构。</param>
            <returns>PointD5D 结构，表示将 PointD5D 结构的所有分量舍入到最接近的整数值得到的结果</returns>
        </member>
        <member name="M:Com.PointD5D.Truncate(Com.PointD5D)">
            <summary>
            返回将 PointD5D 结构的所有分量截断小数部分取整得到的 PointD5D 结构的新实例。
            </summary>
            <param name="pt">PointD5D 结构，用于转换的结构。</param>
            <returns>PointD5D 结构，表示将 PointD5D 结构的所有分量截断小数部分取整得到的结果</returns>
        </member>
        <member name="M:Com.PointD5D.Max(Com.PointD5D,Com.PointD5D)">
            <summary>
            返回将两个 PointD5D 结构的所有分量分别取最大值得到的 PointD5D 结构的新实例。
            </summary>
            <param name="left">PointD5D 结构，用于比较的第一个结构。</param>
            <param name="right">PointD5D 结构，用于比较的第二个结构。</param>
            <returns>PointD5D 结构，表示将两个 PointD5D 结构的所有分量分别取最大值得到的结果</returns>
        </member>
        <member name="M:Com.PointD5D.Min(Com.PointD5D,Com.PointD5D)">
            <summary>
            返回将两个 PointD5D 结构的所有分量分别取最小值得到的 PointD5D 结构的新实例。
            </summary>
            <param name="left">PointD5D 结构，用于比较的第一个结构。</param>
            <param name="right">PointD5D 结构，用于比较的第二个结构。</param>
            <returns>PointD5D 结构，表示将两个 PointD5D 结构的所有分量分别取最小值得到的结果</returns>
        </member>
        <member name="M:Com.PointD5D.op_Equality(Com.PointD5D,Com.PointD5D)">
            <summary>
            判断两个 PointD5D 结构是否相等。
            </summary>
            <param name="left">运算符左侧比较的 PointD5D 结构。</param>
            <param name="right">运算符右侧比较的 PointD5D 结构。</param>
            <returns>布尔值，表示两个 PointD5D 结构是否相等。</returns>
        </member>
        <member name="M:Com.PointD5D.op_Inequality(Com.PointD5D,Com.PointD5D)">
            <summary>
            判断两个 PointD5D 结构是否不相等。
            </summary>
            <param name="left">运算符左侧比较的 PointD5D 结构。</param>
            <param name="right">运算符右侧比较的 PointD5D 结构。</param>
            <returns>布尔值，表示两个 PointD5D 结构是否不相等。</returns>
        </member>
        <member name="M:Com.PointD5D.op_LessThan(Com.PointD5D,Com.PointD5D)">
            <summary>
            判断两个 PointD5D 结构的字典序是否前者小于后者。
            </summary>
            <param name="left">运算符左侧比较的 PointD5D 结构。</param>
            <param name="right">运算符右侧比较的 PointD5D 结构。</param>
            <returns>布尔值，表示两个 PointD5D 结构的字典序是否前者小于后者。</returns>
        </member>
        <member name="M:Com.PointD5D.op_GreaterThan(Com.PointD5D,Com.PointD5D)">
            <summary>
            判断两个 PointD5D 结构的字典序是否前者大于后者。
            </summary>
            <param name="left">运算符左侧比较的 PointD5D 结构。</param>
            <param name="right">运算符右侧比较的 PointD5D 结构。</param>
            <returns>布尔值，表示两个 PointD5D 结构的字典序是否前者大于后者。</returns>
        </member>
        <member name="M:Com.PointD5D.op_LessThanOrEqual(Com.PointD5D,Com.PointD5D)">
            <summary>
            判断两个 PointD5D 结构的字典序是否前者小于或等于后者。
            </summary>
            <param name="left">运算符左侧比较的 PointD5D 结构。</param>
            <param name="right">运算符右侧比较的 PointD5D 结构。</param>
            <returns>布尔值，表示两个 PointD5D 结构的字典序是否前者小于或等于后者。</returns>
        </member>
        <member name="M:Com.PointD5D.op_GreaterThanOrEqual(Com.PointD5D,Com.PointD5D)">
            <summary>
            判断两个 PointD5D 结构的字典序是否前者大于或等于后者。
            </summary>
            <param name="left">运算符左侧比较的 PointD5D 结构。</param>
            <param name="right">运算符右侧比较的 PointD5D 结构。</param>
            <returns>布尔值，表示两个 PointD5D 结构的字典序是否前者大于或等于后者。</returns>
        </member>
        <member name="M:Com.PointD5D.op_UnaryPlus(Com.PointD5D)">
            <summary>
            返回在 PointD5D 结构的所有分量前添加正号得到的 PointD5D 结构的新实例。
            </summary>
            <param name="pt">运算符右侧的 PointD5D 结构。</param>
            <returns>PointD5D 结构，表示在 PointD5D 结构的所有分量前添加正号得到的结果。</returns>
        </member>
        <member name="M:Com.PointD5D.op_UnaryNegation(Com.PointD5D)">
            <summary>
            返回在 PointD5D 结构的所有分量前添加负号得到的 PointD5D 结构的新实例。
            </summary>
            <param name="pt">运算符右侧的 PointD5D 结构。</param>
            <returns>PointD5D 结构，表示在 PointD5D 结构的所有分量前添加负号得到的结果。</returns>
        </member>
        <member name="M:Com.PointD5D.op_Addition(Com.PointD5D,System.Double)">
            <summary>
            返回将 PointD5D 结构的所有分量与双精度浮点数相加得到的 PointD5D 结构的新实例。
            </summary>
            <param name="pt">PointD5D 结构，表示被加数。</param>
            <param name="n">双精度浮点数，表示加数。</param>
            <returns>PointD5D 结构，表示将 PointD5D 结构的所有分量与双精度浮点数相加得到的结果。</returns>
        </member>
        <member name="M:Com.PointD5D.op_Addition(System.Double,Com.PointD5D)">
            <summary>
            返回将双精度浮点数与 PointD5D 结构的所有分量相加得到的 PointD5D 结构的新实例。
            </summary>
            <param name="n">双精度浮点数，表示被加数。</param>
            <param name="pt">PointD5D 结构，表示加数。</param>
            <returns>PointD5D 结构，表示将双精度浮点数与 PointD5D 结构的所有分量相加得到的结果。</returns>
        </member>
        <member name="M:Com.PointD5D.op_Addition(Com.PointD5D,Com.PointD5D)">
            <summary>
            返回将 PointD5D 结构与 PointD5D 结构的所有分量对应相加得到的 PointD5D 结构的新实例。
            </summary>
            <param name="left">PointD5D 结构，表示被加数。</param>
            <param name="right">PointD5D 结构，表示加数。</param>
            <returns>PointD5D 结构，表示将 PointD5D 结构与 PointD5D 结构的所有分量对应相加得到的结果。</returns>
        </member>
        <member name="M:Com.PointD5D.op_Subtraction(Com.PointD5D,System.Double)">
            <summary>
            返回将 PointD5D 结构的所有分量与双精度浮点数相减得到的 PointD5D 结构的新实例。
            </summary>
            <param name="pt">PointD5D 结构，表示被减数。</param>
            <param name="n">双精度浮点数，表示减数。</param>
            <returns>PointD5D 结构，表示将 PointD5D 结构的所有分量与双精度浮点数相减得到的结果。</returns>
        </member>
        <member name="M:Com.PointD5D.op_Subtraction(System.Double,Com.PointD5D)">
            <summary>
            返回将双精度浮点数与 PointD5D 结构的所有分量相减得到的 PointD5D 结构的新实例。
            </summary>
            <param name="n">双精度浮点数，表示被减数。</param>
            <param name="pt">PointD5D 结构，表示减数。</param>
            <returns>PointD5D 结构，表示将双精度浮点数与 PointD5D 结构的所有分量相减得到的结果。</returns>
        </member>
        <member name="M:Com.PointD5D.op_Subtraction(Com.PointD5D,Com.PointD5D)">
            <summary>
            返回将 PointD5D 结构与 PointD5D 结构的所有分量对应相减得到的 PointD5D 结构的新实例。
            </summary>
            <param name="left">PointD5D 结构，表示被减数。</param>
            <param name="right">PointD5D 结构，表示减数。</param>
            <returns>PointD5D 结构，表示将 PointD5D 结构与 PointD5D 结构的所有分量对应相减得到的结果。</returns>
        </member>
        <member name="M:Com.PointD5D.op_Multiply(Com.PointD5D,System.Double)">
            <summary>
            返回将 PointD5D 结构的所有分量与双精度浮点数相乘得到的 PointD5D 结构的新实例。
            </summary>
            <param name="pt">PointD5D 结构，表示被乘数。</param>
            <param name="n">双精度浮点数，表示乘数。</param>
            <returns>PointD5D 结构，表示将 PointD5D 结构的所有分量与双精度浮点数相乘得到的结果。</returns>
        </member>
        <member name="M:Com.PointD5D.op_Multiply(System.Double,Com.PointD5D)">
            <summary>
            返回将双精度浮点数与 PointD5D 结构的所有分量相乘得到的 PointD5D 结构的新实例。
            </summary>
            <param name="n">双精度浮点数，表示被乘数。</param>
            <param name="pt">PointD5D 结构，表示乘数。</param>
            <returns>PointD5D 结构，表示将双精度浮点数与 PointD5D 结构的所有分量相乘得到的结果。</returns>
        </member>
        <member name="M:Com.PointD5D.op_Multiply(Com.PointD5D,Com.PointD5D)">
            <summary>
            返回将 PointD5D 结构与 PointD5D 结构的所有分量对应相乘得到的 PointD5D 结构的新实例。
            </summary>
            <param name="left">PointD5D 结构，表示被乘数。</param>
            <param name="right">PointD5D 结构，表示乘数。</param>
            <returns>PointD5D 结构，表示将 PointD5D 结构与 PointD5D 结构的所有分量对应相乘得到的结果。</returns>
        </member>
        <member name="M:Com.PointD5D.op_Division(Com.PointD5D,System.Double)">
            <summary>
            返回将 PointD5D 结构的所有分量与双精度浮点数相除得到的 PointD5D 结构的新实例。
            </summary>
            <param name="pt">PointD5D 结构，表示被除数。</param>
            <param name="n">双精度浮点数，表示除数。</param>
            <returns>PointD5D 结构，表示将 PointD5D 结构的所有分量与双精度浮点数相除得到的结果。</returns>
        </member>
        <member name="M:Com.PointD5D.op_Division(System.Double,Com.PointD5D)">
            <summary>
            返回将双精度浮点数与 PointD5D 结构的所有分量相除得到的 PointD5D 结构的新实例。
            </summary>
            <param name="n">双精度浮点数，表示被除数。</param>
            <param name="pt">PointD5D 结构，表示除数。</param>
            <returns>PointD5D 结构，表示将双精度浮点数与 PointD5D 结构的所有分量相除得到的结果。</returns>
        </member>
        <member name="M:Com.PointD5D.op_Division(Com.PointD5D,Com.PointD5D)">
            <summary>
            返回将 PointD5D 结构与 PointD5D 结构的所有分量对应相除得到的 PointD5D 结构的新实例。
            </summary>
            <param name="left">PointD5D 结构，表示被除数。</param>
            <param name="right">PointD5D 结构，表示除数。</param>
            <returns>PointD5D 结构，表示将 PointD5D 结构与 PointD5D 结构的所有分量对应相除得到的结果。</returns>
        </member>
        <member name="M:Com.PointD5D.op_Implicit(System.ValueTuple{System.Double,System.Double,System.Double,System.Double,System.Double})~Com.PointD5D">
            <summary>
            将指定的值元组隐式转换为 PointD5D 结构。
            </summary>
            <param name="tuple">用于转换的值元组。</param>
            <returns>PointD5D 结构，表示隐式转换的结果。</returns>
        </member>
        <member name="M:Com.PointD5D.op_Implicit(Com.PointD5D)~System.ValueTuple{System.Double,System.Double,System.Double,System.Double,System.Double}">
            <summary>
            将指定的 PointD5D 结构隐式转换为值元组。
            </summary>
            <param name="pt">用于转换的 PointD5D 结构。</param>
            <returns>值元组，表示隐式转换的结果。</returns>
        </member>
        <member name="T:Com.PointD6D">
            <summary>
            以一组有序的双精度浮点数表示的六维直角坐标系坐标。
            </summary>
        </member>
        <member name="M:Com.PointD6D.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            使用双精度浮点数表示的 X 坐标、Y 坐标、Z 坐标、U 坐标、V 坐标与 W 坐标初始化 PointD6D 结构的新实例。
            </summary>
            <param name="x">双精度浮点数表示的 X 坐标。</param>
            <param name="y">双精度浮点数表示的 Y 坐标。</param>
            <param name="z">双精度浮点数表示的 Z 坐标。</param>
            <param name="u">双精度浮点数表示的 U 坐标。</param>
            <param name="v">双精度浮点数表示的 V 坐标。</param>
            <param name="w">双精度浮点数表示的 W 坐标。</param>
        </member>
        <member name="F:Com.PointD6D.Zero">
            <summary>
            表示零向量的 PointD6D 结构的实例。
            </summary>
        </member>
        <member name="F:Com.PointD6D.NaN">
            <summary>
            表示所有分量为非数字的 PointD6D 结构的实例。
            </summary>
        </member>
        <member name="F:Com.PointD6D.Ex">
            <summary>
            表示 X 基向量的 PointD6D 结构的实例。
            </summary>
        </member>
        <member name="F:Com.PointD6D.Ey">
            <summary>
            表示 Y 基向量的 PointD6D 结构的实例。
            </summary>
        </member>
        <member name="F:Com.PointD6D.Ez">
            <summary>
            表示 Z 基向量的 PointD6D 结构的实例。
            </summary>
        </member>
        <member name="F:Com.PointD6D.Eu">
            <summary>
            表示 U 基向量的 PointD6D 结构的实例。
            </summary>
        </member>
        <member name="F:Com.PointD6D.Ev">
            <summary>
            表示 V 基向量的 PointD6D 结构的实例。
            </summary>
        </member>
        <member name="F:Com.PointD6D.Ew">
            <summary>
            表示 W 基向量的 PointD6D 结构的实例。
            </summary>
        </member>
        <member name="P:Com.PointD6D.Item(System.Int32)">
            <summary>
            获取或设置此 PointD6D 结构在指定的基向量方向的分量。
            </summary>
            <param name="index">索引。</param>
        </member>
        <member name="P:Com.PointD6D.X">
            <summary>
            获取或设置此 PointD6D 结构在 X 轴的分量。
            </summary>
        </member>
        <member name="P:Com.PointD6D.Y">
            <summary>
            获取或设置此 PointD6D 结构在 Y 轴的分量。
            </summary>
        </member>
        <member name="P:Com.PointD6D.Z">
            <summary>
            获取或设置此 PointD6D 结构在 Z 轴的分量。
            </summary>
        </member>
        <member name="P:Com.PointD6D.U">
            <summary>
            获取或设置此 PointD6D 结构在 U 轴的分量。
            </summary>
        </member>
        <member name="P:Com.PointD6D.V">
            <summary>
            获取或设置此 PointD6D 结构在 V 轴的分量。
            </summary>
        </member>
        <member name="P:Com.PointD6D.W">
            <summary>
            获取或设置此 PointD6D 结构在 W 轴的分量。
            </summary>
        </member>
        <member name="P:Com.PointD6D.Dimension">
            <summary>
            获取此 PointD6D 结构的维度。
            </summary>
        </member>
        <member name="P:Com.PointD6D.IsEmpty">
            <summary>
            获取表示此 PointD6D 结构是否为空向量的布尔值。
            </summary>
        </member>
        <member name="P:Com.PointD6D.IsZero">
            <summary>
            获取表示此 PointD6D 结构是否为零向量的布尔值。
            </summary>
        </member>
        <member name="P:Com.PointD6D.IsReadOnly">
            <summary>
            获取表示此 PointD6D 结构是否只读的布尔值。
            </summary>
        </member>
        <member name="P:Com.PointD6D.IsFixedSize">
            <summary>
            获取表示此 PointD6D 结构是否具有固定的维度的布尔值。
            </summary>
        </member>
        <member name="P:Com.PointD6D.IsNaN">
            <summary>
            获取表示此 PointD6D 结构是否包含非数字分量的布尔值。
            </summary>
        </member>
        <member name="P:Com.PointD6D.IsInfinity">
            <summary>
            获取表示此 PointD6D 结构是否包含无穷大分量的布尔值。
            </summary>
        </member>
        <member name="P:Com.PointD6D.IsNaNOrInfinity">
            <summary>
            获取表示此 PointD6D 结构是否包含非数字或无穷大分量的布尔值。
            </summary>
        </member>
        <member name="P:Com.PointD6D.Module">
            <summary>
            获取此 PointD6D 结构的模。
            </summary>
        </member>
        <member name="P:Com.PointD6D.ModuleSquared">
            <summary>
            获取此 PointD6D 结构的模的平方。
            </summary>
        </member>
        <member name="P:Com.PointD6D.Opposite">
            <summary>
            获取此 PointD6D 结构的相反向量。
            </summary>
        </member>
        <member name="P:Com.PointD6D.Normalize">
            <summary>
            获取此 PointD6D 结构的规范化向量。
            </summary>
        </member>
        <member name="P:Com.PointD6D.XYZUV">
            <summary>
            获取或设置此 PointD6D 结构在 XYZUV 空间的分量。
            </summary>
        </member>
        <member name="P:Com.PointD6D.YZUVW">
            <summary>
            获取或设置此 PointD6D 结构在 YZUVW 空间的分量。
            </summary>
        </member>
        <member name="P:Com.PointD6D.ZUVWX">
            <summary>
            获取或设置此 PointD6D 结构在 ZUVWX 空间的分量。
            </summary>
        </member>
        <member name="P:Com.PointD6D.UVWXY">
            <summary>
            获取或设置此 PointD6D 结构在 UVWXY 空间的分量。
            </summary>
        </member>
        <member name="P:Com.PointD6D.VWXYZ">
            <summary>
            获取或设置此 PointD6D 结构在 VWXYZ 空间的分量。
            </summary>
        </member>
        <member name="P:Com.PointD6D.WXYZU">
            <summary>
            获取或设置此 PointD6D 结构在 WXYZU 空间的分量。
            </summary>
        </member>
        <member name="P:Com.PointD6D.AngleFromX">
            <summary>
            获取此 PointD6D 结构与 X 轴之间的夹角（弧度）。
            </summary>
        </member>
        <member name="P:Com.PointD6D.AngleFromY">
            <summary>
            获取此 PointD6D 结构与 Y 轴之间的夹角（弧度）。
            </summary>
        </member>
        <member name="P:Com.PointD6D.AngleFromZ">
            <summary>
            获取此 PointD6D 结构与 Z 轴之间的夹角（弧度）。
            </summary>
        </member>
        <member name="P:Com.PointD6D.AngleFromU">
            <summary>
            获取此 PointD6D 结构与 U 轴之间的夹角（弧度）。
            </summary>
        </member>
        <member name="P:Com.PointD6D.AngleFromV">
            <summary>
            获取此 PointD6D 结构与 V 轴之间的夹角（弧度）。
            </summary>
        </member>
        <member name="P:Com.PointD6D.AngleFromW">
            <summary>
            获取此 PointD6D 结构与 W 轴之间的夹角（弧度）。
            </summary>
        </member>
        <member name="P:Com.PointD6D.AngleFromXYZUV">
            <summary>
            获取此 PointD6D 结构与 XYZUV 空间之间的夹角（弧度）。
            </summary>
        </member>
        <member name="P:Com.PointD6D.AngleFromYZUVW">
            <summary>
            获取此 PointD6D 结构与 YZUVW 空间之间的夹角（弧度）。
            </summary>
        </member>
        <member name="P:Com.PointD6D.AngleFromZUVWX">
            <summary>
            获取此 PointD6D 结构与 ZUVWX 空间之间的夹角（弧度）。
            </summary>
        </member>
        <member name="P:Com.PointD6D.AngleFromUVWXY">
            <summary>
            获取此 PointD6D 结构与 UVWXY 空间之间的夹角（弧度）。
            </summary>
        </member>
        <member name="P:Com.PointD6D.AngleFromVWXYZ">
            <summary>
            获取此 PointD6D 结构与 VWXYZ 空间之间的夹角（弧度）。
            </summary>
        </member>
        <member name="P:Com.PointD6D.AngleFromWXYZU">
            <summary>
            获取此 PointD6D 结构与 WXYZU 空间之间的夹角（弧度）。
            </summary>
        </member>
        <member name="M:Com.PointD6D.Equals(System.Object)">
            <summary>
            判断此 PointD6D 结构是否与指定的对象相等。
            </summary>
            <param name="obj">用于比较的对象。</param>
            <returns>布尔值，表示此 PointD6D 结构是否与指定的对象相等。</returns>
        </member>
        <member name="M:Com.PointD6D.GetHashCode">
            <summary>
            返回此 PointD6D 结构的哈希代码。
            </summary>
            <returns>32 位整数，表示此 PointD6D 结构的哈希代码。</returns>
        </member>
        <member name="M:Com.PointD6D.ToString">
            <summary>
            将此 PointD6D 结构转换为字符串。
            </summary>
            <returns>字符串，表示此 PointD6D 结构的字符串形式。</returns>
        </member>
        <member name="M:Com.PointD6D.Equals(Com.PointD6D)">
            <summary>
            判断此 PointD6D 结构是否与指定的 PointD6D 结构相等。
            </summary>
            <param name="pt">用于比较的 PointD6D 结构。</param>
            <returns>布尔值，表示此 PointD6D 结构是否与指定的 PointD6D 结构相等。</returns>
        </member>
        <member name="M:Com.PointD6D.CompareTo(System.Object)">
            <summary>
            将此 PointD6D 结构与指定的对象进行次序比较。
            </summary>
            <param name="obj">用于比较的对象。</param>
            <returns>32 位整数，表示将此 PointD6D 结构与指定的对象进行次序比较得到的结果。</returns>
        </member>
        <member name="M:Com.PointD6D.CompareTo(Com.PointD6D)">
            <summary>
            将此 PointD6D 结构与指定的 PointD6D 结构进行次序比较。
            </summary>
            <param name="pt">用于比较的 PointD6D 结构。</param>
            <returns>32 位整数，表示将此 PointD6D 结构与指定的 PointD6D 结构进行次序比较得到的结果。</returns>
        </member>
        <member name="M:Com.PointD6D.IndexOf(System.Double)">
            <summary>
            遍历此 PointD6D 结构的所有分量并返回第一个与指定值相等的分量的索引。
            </summary>
            <param name="item">用于检索的值。</param>
            <returns>32 位整数，表示第一个与指定值相等的分量的索引。</returns>
        </member>
        <member name="M:Com.PointD6D.IndexOf(System.Double,System.Int32)">
            <summary>
            从指定的索引开始遍历此 PointD6D 结构的所有分量并返回第一个与指定值相等的分量的索引。
            </summary>
            <param name="item">用于检索的值。</param>
            <param name="startIndex">起始索引。</param>
            <returns>32 位整数，表示第一个与指定值相等的分量的索引。</returns>
        </member>
        <member name="M:Com.PointD6D.IndexOf(System.Double,System.Int32,System.Int32)">
            <summary>
            从指定的索引开始遍历此 PointD6D 结构指定数量的分量并返回第一个与指定值相等的分量的索引。
            </summary>
            <param name="item">用于检索的值。</param>
            <param name="startIndex">起始索引。</param>
            <param name="count">遍历的分量数量。</param>
            <returns>32 位整数，表示第一个与指定值相等的分量的索引。</returns>
        </member>
        <member name="M:Com.PointD6D.LastIndexOf(System.Double)">
            <summary>
            逆序遍历此 PointD6D 结构的所有分量并返回第一个与指定值相等的分量的索引。
            </summary>
            <param name="item">用于检索的值。</param>
            <returns>32 位整数，表示第一个与指定值相等的分量的索引。</returns>
        </member>
        <member name="M:Com.PointD6D.LastIndexOf(System.Double,System.Int32)">
            <summary>
            从指定的索引开始逆序遍历此 PointD6D 结构的所有分量并返回第一个与指定值相等的分量的索引。
            </summary>
            <param name="item">用于检索的值。</param>
            <param name="startIndex">起始索引。</param>
            <returns>32 位整数，表示第一个与指定值相等的分量的索引。</returns>
        </member>
        <member name="M:Com.PointD6D.LastIndexOf(System.Double,System.Int32,System.Int32)">
            <summary>
            从指定的索引开始逆序遍历此 PointD6D 结构指定数量的分量并返回第一个与指定值相等的分量的索引。
            </summary>
            <param name="item">用于检索的值。</param>
            <param name="startIndex">起始索引。</param>
            <param name="count">遍历的分量数量。</param>
            <returns>32 位整数，表示第一个与指定值相等的分量的索引。</returns>
        </member>
        <member name="M:Com.PointD6D.Contains(System.Double)">
            <summary>
            遍历此 PointD6D 结构的所有分量并返回表示是否存在与指定值相等的分量的布尔值。
            </summary>
            <param name="item">用于检索的值。</param>
            <returns>布尔值，表示是否存在与指定值相等的分量。</returns>
        </member>
        <member name="M:Com.PointD6D.ToArray">
            <summary>
            将此 PointD6D 结构转换为双精度浮点数数组。
            </summary>
            <returns>双精度浮点数数组，数组元素表示此 PointD6D 结构的分量。</returns>
        </member>
        <member name="M:Com.PointD6D.ToList">
            <summary>
            将此 PointD6D 结构转换为双精度浮点数列表。
            </summary>
            <returns>双精度浮点数列表，列表元素表示此 PointD6D 结构的分量。</returns>
        </member>
        <member name="M:Com.PointD6D.CopyTo(System.Double[],System.Int32)">
            <summary>
            将此 PointD6D 结构的所有分量复制到双精度浮点数数组中。
            </summary>
            <param name="array">双精度浮点数数组。</param>
            <param name="index">双精度浮点数数组的起始索引。</param>
        </member>
        <member name="M:Com.PointD6D.ToSpherical">
            <summary>
            返回将此 PointD6D 结构表示的直角坐标系坐标转换为超球坐标系坐标的 PointD6D 结构的新实例。
            </summary>
            <returns>PointD6D 结构，表示将此 PointD6D 结构表示的直角坐标系坐标转换为超球坐标系坐标得到的结果。</returns>
        </member>
        <member name="M:Com.PointD6D.ToCartesian">
            <summary>
            返回将此 PointD6D 结构表示的超球坐标系坐标转换为直角坐标系坐标的 PointD6D 结构的新实例。
            </summary>
            <returns>PointD6D 结构，表示将此 PointD6D 结构表示的超球坐标系坐标转换为直角坐标系坐标得到的结果。</returns>
        </member>
        <member name="M:Com.PointD6D.DistanceFrom(Com.PointD6D)">
            <summary>
            返回此 PointD6D 结构与指定的 PointD6D 结构之间的距离。
            </summary>
            <param name="pt">PointD6D 结构，表示另一个向量。</param>
            <returns>双精度浮点数，表示此 PointD6D 结构与指定的 PointD6D 结构之间的距离。</returns>
        </member>
        <member name="M:Com.PointD6D.AngleFrom(Com.PointD6D)">
            <summary>
            返回此 PointD6D 结构与指定的 PointD6D 结构之间的夹角（弧度）。
            </summary>
            <param name="pt">PointD6D 结构，表示另一个向量。</param>
            <returns>双精度浮点数，表示此 PointD6D 结构与指定的 PointD6D 结构之间的夹角（弧度）。</returns>
        </member>
        <member name="M:Com.PointD6D.Offset(System.Int32,System.Double)">
            <summary>
            按双精度浮点数表示的位移将此 PointD6D 结构在指定的基向量方向的分量平移指定的量。
            </summary>
            <param name="index">索引，用于指定平移的分量所在方向的基向量。</param>
            <param name="d">双精度浮点数表示的位移。</param>
        </member>
        <member name="M:Com.PointD6D.Offset(System.Double)">
            <summary>
            按双精度浮点数表示的位移将此 PointD6D 结构的所有分量平移指定的量。
            </summary>
            <param name="d">双精度浮点数表示的位移。</param>
        </member>
        <member name="M:Com.PointD6D.Offset(Com.PointD6D)">
            <summary>
            按 PointD6D 结构表示的位移将此 PointD6D 结构平移指定的量。
            </summary>
            <param name="pt">PointD6D 结构表示的位移。</param>
        </member>
        <member name="M:Com.PointD6D.Offset(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            按双精度浮点数表示的 X 坐标位移、Y 坐标位移、Z 坐标位移、U 坐标位移、V 坐标位移与 W 坐标位移将此 PointD6D 结构平移指定的量。
            </summary>
            <param name="dx">双精度浮点数表示的 X 坐标位移。</param>
            <param name="dy">双精度浮点数表示的 Y 坐标位移。</param>
            <param name="dz">双精度浮点数表示的 Z 坐标位移。</param>
            <param name="du">双精度浮点数表示的 U 坐标位移。</param>
            <param name="dv">双精度浮点数表示的 V 坐标位移。</param>
            <param name="dw">双精度浮点数表示的 W 坐标位移。</param>
        </member>
        <member name="M:Com.PointD6D.OffsetCopy(System.Int32,System.Double)">
            <summary>
            返回按双精度浮点数表示的位移将此 PointD6D 结构在指定的基向量方向的分量平移指定的量的 PointD6D 结构的新实例。
            </summary>
            <param name="index">索引，用于指定平移的分量所在方向的基向量。</param>
            <param name="d">双精度浮点数表示的位移。</param>
            <returns>PointD6D 结构，表示按双精度浮点数表示的位移将此 PointD6D 结构在指定的基向量方向的分量平移指定的量得到的结果。</returns>
        </member>
        <member name="M:Com.PointD6D.OffsetCopy(System.Double)">
            <summary>
            返回按双精度浮点数表示的位移将此 PointD6D 结构的所有分量平移指定的量的 PointD6D 结构的新实例。
            </summary>
            <param name="d">双精度浮点数表示的位移。</param>
            <returns>PointD6D 结构，表示按双精度浮点数表示的位移将此 PointD6D 结构的所有分量平移指定的量得到的结果。</returns>
        </member>
        <member name="M:Com.PointD6D.OffsetCopy(Com.PointD6D)">
            <summary>
            返回按 PointD6D 结构表示的位移将此 PointD6D 结构平移指定的量的 PointD6D 结构的新实例。
            </summary>
            <param name="pt">PointD6D 结构表示的位移。</param>
            <returns>PointD6D 结构，表示按 PointD6D 结构表示的位移将此 PointD6D 结构平移指定的量得到的结果。</returns>
        </member>
        <member name="M:Com.PointD6D.OffsetCopy(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            返回按双精度浮点数表示的 X 坐标位移、Y 坐标位移、Z 坐标位移、U 坐标位移、V 坐标位移与 W 坐标位移将此 PointD6D 结构平移指定的量的 PointD6D 结构的新实例。
            </summary>
            <param name="dx">双精度浮点数表示的 X 坐标位移。</param>
            <param name="dy">双精度浮点数表示的 Y 坐标位移。</param>
            <param name="dz">双精度浮点数表示的 Z 坐标位移。</param>
            <param name="du">双精度浮点数表示的 U 坐标位移。</param>
            <param name="dv">双精度浮点数表示的 V 坐标位移。</param>
            <param name="dw">双精度浮点数表示的 W 坐标位移。</param>
            <returns>PointD6D 结构，表示按双精度浮点数表示的 X 坐标位移、Y 坐标位移、Z 坐标位移、U 坐标位移、V 坐标位移与 W 坐标位移将此 PointD6D 结构平移指定的量得到的结果。</returns>
        </member>
        <member name="M:Com.PointD6D.Scale(System.Int32,System.Double)">
            <summary>
            按双精度浮点数表示的缩放因数将此 PointD6D 结构在指定的基向量方向的分量缩放指定的倍数。
            </summary>
            <param name="index">索引，用于指定缩放的分量所在方向的基向量。</param>
            <param name="s">双精度浮点数表示的缩放因数。</param>
        </member>
        <member name="M:Com.PointD6D.Scale(System.Double)">
            <summary>
            按双精度浮点数表示的缩放因数将此 PointD6D 结构的所有分量缩放指定的倍数。
            </summary>
            <param name="s">双精度浮点数表示的缩放因数。</param>
        </member>
        <member name="M:Com.PointD6D.Scale(Com.PointD6D)">
            <summary>
            按 PointD6D 结构表示的缩放因数将此 PointD6D 结构缩放指定的倍数。
            </summary>
            <param name="pt">PointD6D 结构表示的缩放因数。</param>
        </member>
        <member name="M:Com.PointD6D.Scale(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            按双精度浮点数表示的 X 坐标缩放因数、Y 坐标缩放因数、Z 坐标缩放因数、U 坐标缩放因数、V 坐标缩放因数与 W 坐标缩放因数将此 PointD6D 结构缩放指定的倍数。
            </summary>
            <param name="sx">双精度浮点数表示的 X 坐标缩放因数。</param>
            <param name="sy">双精度浮点数表示的 Y 坐标缩放因数。</param>
            <param name="sz">双精度浮点数表示的 Z 坐标缩放因数。</param>
            <param name="su">双精度浮点数表示的 U 坐标缩放因数。</param>
            <param name="sv">双精度浮点数表示的 V 坐标缩放因数。</param>
            <param name="sw">双精度浮点数表示的 W 坐标缩放因数。</param>
        </member>
        <member name="M:Com.PointD6D.ScaleCopy(System.Int32,System.Double)">
            <summary>
            返回按双精度浮点数表示的缩放因数将此 PointD6D 结构在指定的基向量方向的分量缩放指定的倍数的 PointD6D 结构的新实例。
            </summary>
            <param name="index">索引，用于指定缩放的分量所在方向的基向量。</param>
            <param name="s">双精度浮点数表示的缩放因数。</param>
            <returns>PointD6D 结构，表示按双精度浮点数表示的缩放因数将此 PointD6D 结构在指定的基向量方向的分量缩放指定的倍数得到的结果。</returns>
        </member>
        <member name="M:Com.PointD6D.ScaleCopy(System.Double)">
            <summary>
            返回按双精度浮点数表示的缩放因数将此 PointD6D 结构的所有分量缩放指定的倍数的 PointD6D 结构的新实例。
            </summary>
            <param name="s">双精度浮点数表示的缩放因数。</param>
            <returns>PointD6D 结构，表示按双精度浮点数表示的缩放因数将此 PointD6D 结构的所有分量缩放指定的倍数得到的结果。</returns>
        </member>
        <member name="M:Com.PointD6D.ScaleCopy(Com.PointD6D)">
            <summary>
            返回按 PointD6D 结构表示的缩放因数将此 PointD6D 结构缩放指定的倍数的 PointD6D 结构的新实例。
            </summary>
            <param name="pt">PointD6D 结构表示的缩放因数。</param>
            <returns>PointD6D 结构，表示按 PointD6D 结构表示的缩放因数将此 PointD6D 结构缩放指定的倍数得到的结果。</returns>
        </member>
        <member name="M:Com.PointD6D.ScaleCopy(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            返回按双精度浮点数表示的 X 坐标缩放因数、Y 坐标缩放因数、Z 坐标缩放因数、U 坐标缩放因数、V 坐标缩放因数与 W 坐标缩放因数将此 PointD6D 结构缩放指定的倍数的 PointD6D 结构的新实例。
            </summary>
            <param name="sx">双精度浮点数表示的 X 坐标缩放因数。</param>
            <param name="sy">双精度浮点数表示的 Y 坐标缩放因数。</param>
            <param name="sz">双精度浮点数表示的 Z 坐标缩放因数。</param>
            <param name="su">双精度浮点数表示的 U 坐标缩放因数。</param>
            <param name="sv">双精度浮点数表示的 V 坐标缩放因数。</param>
            <param name="sw">双精度浮点数表示的 W 坐标缩放因数。</param>
            <returns>PointD6D 结构，表示按双精度浮点数表示的 X 坐标缩放因数、Y 坐标缩放因数、Z 坐标缩放因数、U 坐标缩放因数、V 坐标缩放因数与 W 坐标缩放因数将此 PointD6D 结构缩放指定的倍数得到的结果。</returns>
        </member>
        <member name="M:Com.PointD6D.Reflect(System.Int32)">
            <summary>
            将此 PointD6D 结构在指定的基向量方向的分量翻转。
            </summary>
            <param name="index">索引，用于指定翻转的分量所在方向的基向量。</param>
        </member>
        <member name="M:Com.PointD6D.ReflectCopy(System.Int32)">
            <summary>
            返回将此 PointD6D 结构在指定的基向量方向的分量翻转的 PointD6D 结构的新实例。
            </summary>
            <param name="index">索引，用于指定翻转的分量所在方向的基向量。</param>
            <returns>PointD6D 结构，表示将此 PointD6D 结构在指定的基向量方向的分量翻转得到的结果。</returns>
        </member>
        <member name="M:Com.PointD6D.Shear(System.Int32,System.Int32,System.Double)">
            <summary>
            按双精度浮点数表示的弧度将此 PointD6D 结构错切指定的角度。
            </summary>
            <param name="index1">索引，用于指定与错切方向同向的基向量。</param>
            <param name="index2">索引，用于指定与错切方向共面正交的基向量。</param>
            <param name="angle">双精度浮点数，表示此 PointD6D 结构沿索引 index1 指定的基向量方向且共面正交于 index2 指定的基向量方向错切的角度（弧度）。</param>
        </member>
        <member name="M:Com.PointD6D.ShearCopy(System.Int32,System.Int32,System.Double)">
            <summary>
            返回按双精度浮点数表示的弧度将此 PointD6D 结构错切指定的角度的 PointD6D 结构的新实例。
            </summary>
            <param name="index1">索引，用于指定与错切方向同向的基向量。</param>
            <param name="index2">索引，用于指定与错切方向共面正交的基向量。</param>
            <param name="angle">双精度浮点数，表示此 PointD6D 结构沿索引 index1 指定的基向量方向且共面正交于 index2 指定的基向量方向错切的角度（弧度）。</param>
            <returns>PointD6D 结构，表示按双精度浮点数表示的弧度将此 PointD6D 结构错切指定的角度得到的结果。</returns>
        </member>
        <member name="M:Com.PointD6D.Rotate(System.Int32,System.Int32,System.Double)">
            <summary>
            按双精度浮点数表示的弧度将此 PointD6D 结构旋转指定的角度。
            </summary>
            <param name="index1">索引，用于指定构成旋转轨迹所在平面的第一个基向量。</param>
            <param name="index2">索引，用于指定构成旋转轨迹所在平面的第二个基向量。</param>
            <param name="angle">双精度浮点数，表示此 PointD6D 结构绕索引 index1 与 index2 指定的基向量构成的平面的法向空间旋转的角度（弧度）（以索引 index1 指定的基向量为 0 弧度，从索引 index1 指定的基向量指向索引 index2 指定的基向量的方向为正方向）。</param>
        </member>
        <member name="M:Com.PointD6D.RotateCopy(System.Int32,System.Int32,System.Double)">
            <summary>
            返回按双精度浮点数表示的弧度将此 PointD6D 结构旋转指定的角度的 PointD6D 结构的新实例。
            </summary>
            <param name="index1">索引，用于指定构成旋转轨迹所在平面的第一个基向量。</param>
            <param name="index2">索引，用于指定构成旋转轨迹所在平面的第二个基向量。</param>
            <param name="angle">双精度浮点数，表示此 PointD6D 结构绕索引 index1 与 index2 指定的基向量构成的平面的法向空间旋转的角度（弧度）（以索引 index1 指定的基向量为 0 弧度，从索引 index1 指定的基向量指向索引 index2 指定的基向量的方向为正方向）。</param>
            <returns>PointD6D 结构，表示按双精度浮点数表示的弧度将此 PointD6D 结构旋转指定的角度得到的结果。</returns>
        </member>
        <member name="M:Com.PointD6D.MatrixTransform(Com.Matrix)">
            <summary>
            按 Matrix 对象表示的 7x7 仿射矩阵（左矩阵）将此 PointD6D 结构进行仿射变换。
            </summary>
            <param name="matrixLeft">Matrix 对象，表示 7x7 仿射矩阵（左矩阵）。</param>
        </member>
        <member name="M:Com.PointD6D.MatrixTransformCopy(Com.Matrix)">
            <summary>
            返回按 Matrix 对象表示的 7x7 仿射矩阵（左矩阵）将此 PointD6D 结构进行仿射变换的 PointD6D 结构的新实例。
            </summary>
            <param name="matrixLeft">Matrix 对象列表，表示 7x7 仿射矩阵（左矩阵）。</param>
            <returns>PointD6D 结构，表示按 Matrix 对象表示的 7x7 仿射矩阵（左矩阵）将此 PointD6D 结构进行仿射变换得到的结果。</returns>
        </member>
        <member name="M:Com.PointD6D.AffineTransform(Com.AffineTransformation)">
            <summary>
            按 AffineTransformation 对象将此 PointD6D 结构进行仿射变换。
            </summary>
            <param name="affineTransformation">AffineTransformation 对象。</param>
        </member>
        <member name="M:Com.PointD6D.AffineTransformCopy(Com.AffineTransformation)">
            <summary>
            返回按 AffineTransformation 对象将此 PointD6D 结构进行仿射变换得到的结果。
            </summary>
            <param name="affineTransformation">AffineTransformation 对象。</param>
            <returns>PointD6D 结构，表示按 AffineTransformation 对象将此 PointD6D 结构进行仿射变换得到的结果。</returns>
        </member>
        <member name="M:Com.PointD6D.AffineTransform(Com.PointD6D,Com.PointD6D,Com.PointD6D,Com.PointD6D,Com.PointD6D,Com.PointD6D,Com.PointD6D)">
            <summary>
            按 PointD6D 结构表示的 X 基向量、Y 基向量、Z 基向量、U 基向量、V 基向量、W 基向量与偏移向量将此 PointD6D 结构进行仿射变换。
            </summary>
            <param name="ex">PointD6D 结构表示的 X 基向量。</param>
            <param name="ey">PointD6D 结构表示的 Y 基向量。</param>
            <param name="ez">PointD6D 结构表示的 Z 基向量。</param>
            <param name="eu">PointD6D 结构表示的 U 基向量。</param>
            <param name="ev">PointD6D 结构表示的 V 基向量。</param>
            <param name="ew">PointD6D 结构表示的 W 基向量。</param>
            <param name="offset">PointD6D 结构表示的偏移向量。</param>
        </member>
        <member name="M:Com.PointD6D.AffineTransform(Com.Matrix)">
            <summary>
            按 Matrix 对象表示的 7x7 仿射矩阵（左矩阵）将此 PointD6D 结构进行仿射变换。
            </summary>
            <param name="matrixLeft">Matrix 对象，表示 7x7 仿射矩阵（左矩阵）。</param>
        </member>
        <member name="M:Com.PointD6D.AffineTransform(Com.Matrix[])">
            <summary>
            按 Matrix 对象数组表示的 7x7 仿射矩阵（左矩阵）数组将此 PointD6D 结构进行仿射变换。
            </summary>
            <param name="matricesLeft">Matrix 对象数组，表示 7x7 仿射矩阵（左矩阵）数组。</param>
        </member>
        <member name="M:Com.PointD6D.AffineTransform(System.Collections.Generic.List{Com.Matrix})">
            <summary>
            按 Matrix 对象列表表示的 7x7 仿射矩阵（左矩阵）列表将此 PointD6D 结构进行仿射变换。
            </summary>
            <param name="matricesLeft">Matrix 对象列表，表示 7x7 仿射矩阵（左矩阵）列表。</param>
        </member>
        <member name="M:Com.PointD6D.AffineTransformCopy(Com.PointD6D,Com.PointD6D,Com.PointD6D,Com.PointD6D,Com.PointD6D,Com.PointD6D,Com.PointD6D)">
            <summary>
            返回按 PointD6D 结构表示的 X 基向量、Y 基向量、Z 基向量、U 基向量、V 基向量、W 基向量与偏移向量将此 PointD6D 结构进行仿射变换的 PointD6D 结构的新实例。
            </summary>
            <param name="ex">PointD6D 结构表示的 X 基向量。</param>
            <param name="ey">PointD6D 结构表示的 Y 基向量。</param>
            <param name="ez">PointD6D 结构表示的 Z 基向量。</param>
            <param name="eu">PointD6D 结构表示的 U 基向量。</param>
            <param name="ev">PointD6D 结构表示的 V 基向量。</param>
            <param name="ew">PointD6D 结构表示的 W 基向量。</param>
            <param name="offset">PointD6D 结构表示的偏移向量。</param>
            <returns>PointD6D 结构，表示按 PointD6D 结构表示的 X 基向量、Y 基向量、Z 基向量、U 基向量、V 基向量、W 基向量与偏移向量将此 PointD6D 结构进行仿射变换得到的结果。</returns>
        </member>
        <member name="M:Com.PointD6D.AffineTransformCopy(Com.Matrix)">
            <summary>
            返回按 Matrix 对象表示的 7x7 仿射矩阵（左矩阵）将此 PointD6D 结构进行仿射变换的 PointD6D 结构的新实例。
            </summary>
            <param name="matrixLeft">Matrix 对象，表示 7x7 仿射矩阵（左矩阵）。</param>
            <returns>PointD6D 结构，表示按 Matrix 对象表示的 7x7 仿射矩阵（左矩阵）将此 PointD6D 结构进行仿射变换得到的结果。</returns>
        </member>
        <member name="M:Com.PointD6D.AffineTransformCopy(Com.Matrix[])">
            <summary>
            返回按 Matrix 对象数组表示的 7x7 仿射矩阵（左矩阵）数组将此 PointD6D 结构进行仿射变换的 PointD6D 结构的新实例。
            </summary>
            <param name="matricesLeft">Matrix 对象数组，表示 7x7 仿射矩阵（左矩阵）数组。</param>
            <returns>PointD6D 结构，表示按 Matrix 对象数组表示的 7x7 仿射矩阵（左矩阵）数组将此 PointD6D 结构进行仿射变换得到的结果。</returns>
        </member>
        <member name="M:Com.PointD6D.AffineTransformCopy(System.Collections.Generic.List{Com.Matrix})">
            <summary>
            返回按 Matrix 对象列表表示的 7x7 仿射矩阵（左矩阵）列表将此 PointD6D 结构进行仿射变换的 PointD6D 结构的新实例。
            </summary>
            <param name="matricesLeft">Matrix 对象列表，表示 7x7 仿射矩阵（左矩阵）列表。</param>
            <returns>PointD6D 结构，表示按 Matrix 对象列表表示的 7x7 仿射矩阵（左矩阵）列表将此 PointD6D 结构进行仿射变换得到的结果。</returns>
        </member>
        <member name="M:Com.PointD6D.InverseAffineTransform(Com.PointD6D,Com.PointD6D,Com.PointD6D,Com.PointD6D,Com.PointD6D,Com.PointD6D,Com.PointD6D)">
            <summary>
            按 PointD6D 结构表示的 X 基向量、Y 基向量、Z 基向量、U 基向量、V 基向量、W 基向量与偏移向量将此 PointD6D 结构进行逆仿射变换。
            </summary>
            <param name="ex">PointD6D 结构表示的 X 基向量。</param>
            <param name="ey">PointD6D 结构表示的 Y 基向量。</param>
            <param name="ez">PointD6D 结构表示的 Z 基向量。</param>
            <param name="eu">PointD6D 结构表示的 U 基向量。</param>
            <param name="ev">PointD6D 结构表示的 V 基向量。</param>
            <param name="ew">PointD6D 结构表示的 W 基向量。</param>
            <param name="offset">PointD6D 结构表示的偏移向量。</param>
        </member>
        <member name="M:Com.PointD6D.InverseAffineTransform(Com.Matrix)">
            <summary>
            按 Matrix 对象表示的 7x7 仿射矩阵（左矩阵）将此 PointD6D 结构进行逆仿射变换。
            </summary>
            <param name="matrixLeft">Matrix 对象，表示 7x7 仿射矩阵（左矩阵）。</param>
        </member>
        <member name="M:Com.PointD6D.InverseAffineTransform(Com.Matrix[])">
            <summary>
            按 Matrix 对象数组表示的 7x7 仿射矩阵（左矩阵）数组将此 PointD6D 结构进行逆仿射变换。
            </summary>
            <param name="matricesLeft">Matrix 对象数组，表示 7x7 仿射矩阵（左矩阵）数组。</param>
        </member>
        <member name="M:Com.PointD6D.InverseAffineTransform(System.Collections.Generic.List{Com.Matrix})">
            <summary>
            按 Matrix 对象列表表示的 7x7 仿射矩阵（左矩阵）列表将此 PointD6D 结构进行逆仿射变换。
            </summary>
            <param name="matricesLeft">Matrix 对象列表，表示 7x7 仿射矩阵（左矩阵）列表。</param>
        </member>
        <member name="M:Com.PointD6D.InverseAffineTransformCopy(Com.PointD6D,Com.PointD6D,Com.PointD6D,Com.PointD6D,Com.PointD6D,Com.PointD6D,Com.PointD6D)">
            <summary>
            返回按 PointD6D 结构表示的 X 基向量、Y 基向量、Z 基向量、U 基向量、V 基向量、W 基向量与偏移向量将此 PointD6D 结构进行逆仿射变换的 PointD6D 结构的新实例。
            </summary>
            <param name="ex">PointD6D 结构表示的 X 基向量。</param>
            <param name="ey">PointD6D 结构表示的 Y 基向量。</param>
            <param name="ez">PointD6D 结构表示的 Z 基向量。</param>
            <param name="eu">PointD6D 结构表示的 U 基向量。</param>
            <param name="ev">PointD6D 结构表示的 V 基向量。</param>
            <param name="ew">PointD6D 结构表示的 W 基向量。</param>
            <param name="offset">PointD6D 结构表示的偏移向量。</param>
            <returns>PointD6D 结构，表示按 PointD6D 结构表示的 X 基向量、Y 基向量、Z 基向量、U 基向量、V 基向量、W 基向量与偏移向量将此 PointD6D 结构进行逆仿射变换得到的结果。</returns>
        </member>
        <member name="M:Com.PointD6D.InverseAffineTransformCopy(Com.Matrix)">
            <summary>
            返回按 Matrix 对象表示的 7x7 仿射矩阵（左矩阵）将此 PointD6D 结构进行逆仿射变换的 PointD6D 结构的新实例。
            </summary>
            <param name="matrixLeft">Matrix 对象，表示 7x7 仿射矩阵（左矩阵）。</param>
            <returns>PointD6D 结构，表示按 Matrix 对象表示的 7x7 仿射矩阵（左矩阵）将此 PointD6D 结构进行逆仿射变换得到的结果。</returns>
        </member>
        <member name="M:Com.PointD6D.InverseAffineTransformCopy(Com.Matrix[])">
            <summary>
            返回按 Matrix 对象数组表示的 7x7 仿射矩阵（左矩阵）数组将此 PointD6D 结构进行逆仿射变换的 PointD6D 结构的新实例。
            </summary>
            <param name="matricesLeft">Matrix 对象数组，表示 7x7 仿射矩阵（左矩阵）数组。</param>
            <returns>PointD6D 结构，表示按 Matrix 对象数组表示的 7x7 仿射矩阵（左矩阵）数组将此 PointD6D 结构进行逆仿射变换得到的结果。</returns>
        </member>
        <member name="M:Com.PointD6D.InverseAffineTransformCopy(System.Collections.Generic.List{Com.Matrix})">
            <summary>
            返回按 Matrix 对象列表表示的 7x7 仿射矩阵（左矩阵）列表将此 PointD6D 结构进行逆仿射变换的 PointD6D 结构的新实例。
            </summary>
            <param name="matricesLeft">Matrix 对象列表，表示 7x7 仿射矩阵（左矩阵）列表。</param>
            <returns>PointD6D 结构，表示按 Matrix 对象列表表示的 7x7 仿射矩阵（左矩阵）列表将此 PointD6D 结构进行逆仿射变换得到的结果。</returns>
        </member>
        <member name="M:Com.PointD6D.ProjectToXYZUV(Com.PointD6D,System.Double)">
            <summary>
            返回将此 PointD6D 结构投影至平行于 XYZUV 空间的投影空间的 PointD5D 结构的新实例。
            </summary>
            <param name="prjCenter">PointD6D 结构，表示投影中心在投影空间的正投影在原坐标系的坐标。</param>
            <param name="focalLength">双精度浮点数表示的焦距，平行于投影空间的一维测度其真实大小与投影大小的比值等于其到投影空间的距离与焦距的比值。</param>
            <returns>PointD5D 结构，表示将此 PointD6D 结构投影至平行于 XYZUV 空间的投影空间得到的结果。</returns>
        </member>
        <member name="M:Com.PointD6D.ProjectToYZUVW(Com.PointD6D,System.Double)">
            <summary>
            返回将此 PointD6D 结构投影至平行于 YZUVW 空间的投影空间的 PointD5D 结构的新实例。
            </summary>
            <param name="prjCenter">PointD6D 结构，表示投影中心在投影空间的正投影在原坐标系的坐标。</param>
            <param name="focalLength">双精度浮点数表示的焦距，平行于投影空间的一维测度其真实大小与投影大小的比值等于其到投影空间的距离与焦距的比值。</param>
            <returns>PointD5D 结构，表示将此 PointD6D 结构投影至平行于 YZUVW 空间的投影空间得到的结果。</returns>
        </member>
        <member name="M:Com.PointD6D.ProjectToZUVWX(Com.PointD6D,System.Double)">
            <summary>
            返回将此 PointD6D 结构投影至平行于 ZUVWX 空间的投影空间的 PointD5D 结构的新实例。
            </summary>
            <param name="prjCenter">PointD6D 结构，表示投影中心在投影空间的正投影在原坐标系的坐标。</param>
            <param name="focalLength">双精度浮点数表示的焦距，平行于投影空间的一维测度其真实大小与投影大小的比值等于其到投影空间的距离与焦距的比值。</param>
            <returns>PointD5D 结构，表示将此 PointD6D 结构投影至平行于 ZUVWX 空间的投影空间得到的结果。</returns>
        </member>
        <member name="M:Com.PointD6D.ProjectToUVWXY(Com.PointD6D,System.Double)">
            <summary>
            返回将此 PointD6D 结构投影至平行于 UVWXY 空间的投影空间的 PointD5D 结构的新实例。
            </summary>
            <param name="prjCenter">PointD6D 结构，表示投影中心在投影空间的正投影在原坐标系的坐标。</param>
            <param name="focalLength">双精度浮点数表示的焦距，平行于投影空间的一维测度其真实大小与投影大小的比值等于其到投影空间的距离与焦距的比值。</param>
            <returns>PointD5D 结构，表示将此 PointD6D 结构投影至平行于 UVWXY 空间的投影空间得到的结果。</returns>
        </member>
        <member name="M:Com.PointD6D.ProjectToVWXYZ(Com.PointD6D,System.Double)">
            <summary>
            返回将此 PointD6D 结构投影至平行于 VWXYZ 空间的投影空间的 PointD5D 结构的新实例。
            </summary>
            <param name="prjCenter">PointD6D 结构，表示投影中心在投影空间的正投影在原坐标系的坐标。</param>
            <param name="focalLength">双精度浮点数表示的焦距，平行于投影空间的一维测度其真实大小与投影大小的比值等于其到投影空间的距离与焦距的比值。</param>
            <returns>PointD5D 结构，表示将此 PointD6D 结构投影至平行于 VWXYZ 空间的投影空间得到的结果。</returns>
        </member>
        <member name="M:Com.PointD6D.ProjectToWXYZU(Com.PointD6D,System.Double)">
            <summary>
            返回将此 PointD6D 结构投影至平行于 WXYZU 空间的投影空间的 PointD5D 结构的新实例。
            </summary>
            <param name="prjCenter">PointD6D 结构，表示投影中心在投影空间的正投影在原坐标系的坐标。</param>
            <param name="focalLength">双精度浮点数表示的焦距，平行于投影空间的一维测度其真实大小与投影大小的比值等于其到投影空间的距离与焦距的比值。</param>
            <returns>PointD5D 结构，表示将此 PointD6D 结构投影至平行于 WXYZU 空间的投影空间得到的结果。</returns>
        </member>
        <member name="M:Com.PointD6D.ToColumnVector">
            <summary>
            返回将此 PointD6D 结构转换为列向量的 Vector 的新实例。
            </summary>
            <returns>Vector 对象，表示将此 PointD6D 结构转换为列向量得到的结果。</returns>
        </member>
        <member name="M:Com.PointD6D.ToRowVector">
            <summary>
            返回将此 PointD6D 结构转换为行向量的 Vector 的新实例。
            </summary>
            <returns>Vector 对象，表示将此 PointD6D 结构转换为行向量得到的结果。</returns>
        </member>
        <member name="M:Com.PointD6D.Equals(Com.PointD6D,Com.PointD6D)">
            <summary>
            判断两个 PointD6D 结构是否相等。
            </summary>
            <param name="left">用于比较的第一个 PointD6D 结构。</param>
            <param name="right">用于比较的第二个 PointD6D 结构。</param>
            <returns>布尔值，表示两个 PointD6D 结构是否相等。</returns>
        </member>
        <member name="M:Com.PointD6D.Compare(Com.PointD6D,Com.PointD6D)">
            <summary>
            比较两个 PointD6D 结构的次序。
            </summary>
            <param name="left">用于比较的第一个 PointD6D 结构。</param>
            <param name="right">用于比较的第二个 PointD6D 结构。</param>
            <returns>32 位整数，表示将两个 PointD6D 结构进行次序比较得到的结果。</returns>
        </member>
        <member name="M:Com.PointD6D.FromVector(Com.Vector)">
            <summary>
            返回将 Vector 对象转换为 PointD6D 结构的新实例。
            </summary>
            <param name="vector">Vector 对象。</param>
            <returns>PointD6D 结构，表示转换的结果。</returns>
        </member>
        <member name="M:Com.PointD6D.IdentityMatrix">
            <summary>
            返回单位矩阵，表示不对 PointD6D 结构进行仿射变换的 7x7 仿射矩阵（左矩阵）的 Matrix 的新实例。
            </summary>
            <returns>Matrix 对象，表示不对 PointD6D 结构进行仿射变换的 7x7 仿射矩阵（左矩阵）。</returns>
        </member>
        <member name="M:Com.PointD6D.OffsetMatrix(System.Int32,System.Double)">
            <summary>
            返回表示按双精度浮点数表示的位移将 PointD6D 结构在指定的基向量方向的分量平移指定的量的 7x7 仿射矩阵（左矩阵）的 Matrix 的新实例。
            </summary>
            <param name="index">索引，用于指定平移的分量所在方向的基向量。</param>
            <param name="d">双精度浮点数表示的位移。</param>
            <returns>Matrix 对象，表示按双精度浮点数表示的位移将 PointD6D 结构在指定的基向量方向的分量平移指定的量的 7x7 仿射矩阵（左矩阵）。</returns>
        </member>
        <member name="M:Com.PointD6D.OffsetMatrix(System.Double)">
            <summary>
            返回表示按双精度浮点数表示的位移将 PointD6D 结构的所有分量平移指定的量的 7x7 仿射矩阵（左矩阵）的 Matrix 的新实例。
            </summary>
            <param name="d">双精度浮点数表示的位移。</param>
            <returns>Matrix 对象，表示按双精度浮点数表示的位移将 PointD6D 结构的所有分量平移指定的量的 7x7 仿射矩阵（左矩阵）。</returns>
        </member>
        <member name="M:Com.PointD6D.OffsetMatrix(Com.PointD6D)">
            <summary>
            返回表示按 PointD6D 结构表示的位移将 PointD6D 结构平移指定的量的 7x7 仿射矩阵（左矩阵）的 Matrix 的新实例。
            </summary>
            <param name="pt">PointD6D 结构表示的位移。</param>
            <returns>Matrix 对象，表示按 PointD6D 结构表示的位移将 PointD6D 结构平移指定的量的 7x7 仿射矩阵（左矩阵）。</returns>
        </member>
        <member name="M:Com.PointD6D.OffsetMatrix(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            返回表示按双精度浮点数表示的 X 坐标位移、Y 坐标位移、Z 坐标位移、U 坐标位移、V 坐标位移与 W 坐标位移将 PointD6D 结构平移指定的量的 7x7 仿射矩阵（左矩阵）的 Matrix 的新实例。
            </summary>
            <param name="dx">双精度浮点数表示的 X 坐标位移。</param>
            <param name="dy">双精度浮点数表示的 Y 坐标位移。</param>
            <param name="dz">双精度浮点数表示的 Z 坐标位移。</param>
            <param name="du">双精度浮点数表示的 U 坐标位移。</param>
            <param name="dv">双精度浮点数表示的 V 坐标位移。</param>
            <param name="dw">双精度浮点数表示的 W 坐标位移。</param>
            <returns>Matrix 对象，表示按双精度浮点数表示的 X 坐标位移、Y 坐标位移、Z 坐标位移、U 坐标位移、V 坐标位移与 W 坐标位移将 PointD6D 结构平移指定的量的 7x7 仿射矩阵（左矩阵）。</returns>
        </member>
        <member name="M:Com.PointD6D.ScaleMatrix(System.Int32,System.Double)">
            <summary>
            返回表示按双精度浮点数表示的缩放因数将 PointD6D 结构在指定的基向量方向的分量缩放指定的倍数的 7x7 仿射矩阵（左矩阵）的 Matrix 的新实例。
            </summary>
            <param name="index">索引，用于指定平移的分量所在方向的基向量。</param>
            <param name="s">双精度浮点数表示的缩放因数。</param>
            <returns>Matrix 对象，表示按双精度浮点数表示的缩放因数将 PointD6D 结构在指定的基向量方向的分量缩放指定的倍数的 7x7 仿射矩阵（左矩阵）。</returns>
        </member>
        <member name="M:Com.PointD6D.ScaleMatrix(System.Double)">
            <summary>
            返回表示按双精度浮点数表示的缩放因数将 PointD6D 结构的所有分量缩放指定的倍数的 7x7 仿射矩阵（左矩阵）的 Matrix 的新实例。
            </summary>
            <param name="s">双精度浮点数表示的缩放因数。</param>
            <returns>Matrix 对象，表示按双精度浮点数表示的缩放因数将 PointD6D 结构的所有分量缩放指定的倍数的 7x7 仿射矩阵（左矩阵）。</returns>
        </member>
        <member name="M:Com.PointD6D.ScaleMatrix(Com.PointD6D)">
            <summary>
            返回表示按 PointD6D 结构表示的缩放因数将 PointD6D 结构缩放指定的倍数的 7x7 仿射矩阵（左矩阵）的 Matrix 的新实例。
            </summary>
            <param name="pt">PointD6D 结构表示的缩放因数。</param>
            <returns>Matrix 对象，表示按 PointD6D 结构表示的缩放因数将 PointD6D 结构缩放指定的倍数的 7x7 仿射矩阵（左矩阵）。</returns>
        </member>
        <member name="M:Com.PointD6D.ScaleMatrix(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            返回表示按双精度浮点数表示的 X 坐标缩放因数、Y 坐标缩放因数、Z 坐标缩放因数、U 坐标缩放因数、V 坐标缩放因数与 W 坐标缩放因数将 PointD6D 结构缩放指定的倍数的 7x7 仿射矩阵（左矩阵）的 Matrix 的新实例。
            </summary>
            <param name="sx">双精度浮点数表示的 X 坐标缩放因数。</param>
            <param name="sy">双精度浮点数表示的 Y 坐标缩放因数。</param>
            <param name="sz">双精度浮点数表示的 Z 坐标缩放因数。</param>
            <param name="su">双精度浮点数表示的 U 坐标缩放因数。</param>
            <param name="sv">双精度浮点数表示的 V 坐标缩放因数。</param>
            <param name="sw">双精度浮点数表示的 W 坐标缩放因数。</param>
            <returns>Matrix 对象，表示按双精度浮点数表示的 X 坐标缩放因数、Y 坐标缩放因数、Z 坐标缩放因数、U 坐标缩放因数、V 坐标缩放因数与 W 坐标缩放因数将 PointD6D 结构缩放指定的倍数的 7x7 仿射矩阵（左矩阵）。</returns>
        </member>
        <member name="M:Com.PointD6D.ReflectMatrix(System.Int32)">
            <summary>
            返回表示将 PointD6D 结构在指定的基向量方向的分量翻转的 7x7 仿射矩阵（左矩阵）的 Matrix 的新实例。
            </summary>
            <param name="index">索引，用于指定翻转的分量所在方向的基向量。</param>
            <returns>Matrix 对象，表示将 PointD6D 结构在指定的基向量方向的分量翻转的 7x7 仿射矩阵（左矩阵）。</returns>
        </member>
        <member name="M:Com.PointD6D.ShearMatrix(System.Int32,System.Int32,System.Double)">
            <summary>
            返回表示用于错切 PointD6D 结构的 7x7 仿射矩阵（左矩阵）的 Matrix 的新实例。
            </summary>
            <param name="index1">索引，用于指定与错切方向同向的基向量。</param>
            <param name="index2">索引，用于指定与错切方向共面正交的基向量。</param>
            <param name="angle">双精度浮点数，表示此 PointD6D 结构沿索引 index1 指定的基向量方向且共面正交于 index2 指定的基向量方向错切的角度（弧度）。</param>
            <returns>Matrix 对象，表示用于错切 PointD6D 结构的 7x7 仿射矩阵（左矩阵）。</returns>
        </member>
        <member name="M:Com.PointD6D.RotateMatrix(System.Int32,System.Int32,System.Double)">
            <summary>
            返回表示用于旋转 PointD6D 结构的 7x7 仿射矩阵（左矩阵）的 Matrix 的新实例。
            </summary>
            <param name="index1">索引，用于指定构成旋转轨迹所在平面的第一个基向量。</param>
            <param name="index2">索引，用于指定构成旋转轨迹所在平面的第二个基向量。</param>
            <param name="angle">双精度浮点数，表示 PointD6D 结构绕索引 index1 与 index2 指定的基向量构成的平面的法向空间旋转的角度（弧度）（以索引 index1 指定的基向量为 0 弧度，从索引 index1 指定的基向量指向索引 index2 指定的基向量的方向为正方向）。</param>
            <returns>Matrix 对象，表示用于旋转 PointD6D 结构的 7x7 仿射矩阵（左矩阵）。</returns>
        </member>
        <member name="M:Com.PointD6D.DistanceBetween(Com.PointD6D,Com.PointD6D)">
            <summary>
            返回两个 PointD6D 结构之间的距离。
            </summary>
            <param name="left">第一个 PointD6D 结构。</param>
            <param name="right">第二个 PointD6D 结构。</param>
            <returns>双精度浮点数，表示两个 PointD6D 结构之间的距离。</returns>
        </member>
        <member name="M:Com.PointD6D.AngleBetween(Com.PointD6D,Com.PointD6D)">
            <summary>
            返回两个 PointD6D 结构之间的夹角（弧度）。
            </summary>
            <param name="left">第一个 PointD6D 结构。</param>
            <param name="right">第二个 PointD6D 结构。</param>
            <returns>双精度浮点数，表示两个 PointD6D 结构之间的夹角（弧度）。</returns>
        </member>
        <member name="M:Com.PointD6D.DotProduct(Com.PointD6D,Com.PointD6D)">
            <summary>
            返回两个 PointD6D 结构的内积。
            </summary>
            <param name="left">第一个 PointD6D 结构。</param>
            <param name="right">第二个 PointD6D 结构。</param>
            <returns>双精度浮点数，表示两个 PointD6D 结构的内积。</returns>
        </member>
        <member name="M:Com.PointD6D.CrossProduct(Com.PointD6D,Com.PointD6D)">
            <summary>
            返回两个 PointD6D 结构的外积。该外积为一个十五维向量，其所有分量的数值依次为 X∧Y 基向量、X∧Z 基向量、X∧U 基向量、X∧V 基向量、X∧W 基向量、Y∧Z 基向量、Y∧U 基向量、Y∧V 基向量、Y∧W 基向量、Z∧U 基向量、Z∧V 基向量、Z∧W 基向量、U∧V 基向量、U∧W 基向量与 V∧W 基向量的系数。
            </summary>
            <param name="left">第一个 PointD6D 结构。</param>
            <param name="right">第二个 PointD6D 结构。</param>
            <returns>Vector 对象，表示两个 PointD6D 结构的外积。</returns>
        </member>
        <member name="M:Com.PointD6D.Sign(Com.PointD6D)">
            <summary>
            返回将 PointD6D 结构的所有分量取符号数得到的 PointD6D 结构的新实例。
            </summary>
            <param name="pt">PointD6D 结构，用于转换的结构。</param>
            <returns>PointD6D 结构，表示将 PointD6D 结构的所有分量取符号数得到的结果</returns>
        </member>
        <member name="M:Com.PointD6D.Abs(Com.PointD6D)">
            <summary>
            返回将 PointD6D 结构的所有分量取绝对值得到的 PointD6D 结构的新实例。
            </summary>
            <param name="pt">PointD6D 结构，用于转换的结构。</param>
            <returns>PointD6D 结构，表示将 PointD6D 结构的所有分量取绝对值得到的结果</returns>
        </member>
        <member name="M:Com.PointD6D.Ceiling(Com.PointD6D)">
            <summary>
            返回将 PointD6D 结构的所有分量舍入到较大的整数值得到的 PointD6D 结构的新实例。
            </summary>
            <param name="pt">PointD6D 结构，用于转换的结构。</param>
            <returns>PointD6D 结构，表示将 PointD6D 结构的所有分量舍入到较大的整数值得到的结果</returns>
        </member>
        <member name="M:Com.PointD6D.Floor(Com.PointD6D)">
            <summary>
            返回将 PointD6D 结构的所有分量舍入到较小的整数值得到的 PointD6D 结构的新实例。
            </summary>
            <param name="pt">PointD6D 结构，用于转换的结构。</param>
            <returns>PointD6D 结构，表示将 PointD6D 结构的所有分量舍入到较小的整数值得到的结果</returns>
        </member>
        <member name="M:Com.PointD6D.Round(Com.PointD6D)">
            <summary>
            返回将 PointD6D 结构的所有分量舍入到最接近的整数值得到的 PointD6D 结构的新实例。
            </summary>
            <param name="pt">PointD6D 结构，用于转换的结构。</param>
            <returns>PointD6D 结构，表示将 PointD6D 结构的所有分量舍入到最接近的整数值得到的结果</returns>
        </member>
        <member name="M:Com.PointD6D.Truncate(Com.PointD6D)">
            <summary>
            返回将 PointD6D 结构的所有分量截断小数部分取整得到的 PointD6D 结构的新实例。
            </summary>
            <param name="pt">PointD6D 结构，用于转换的结构。</param>
            <returns>PointD6D 结构，表示将 PointD6D 结构的所有分量截断小数部分取整得到的结果</returns>
        </member>
        <member name="M:Com.PointD6D.Max(Com.PointD6D,Com.PointD6D)">
            <summary>
            返回将两个 PointD6D 结构的所有分量分别取最大值得到的 PointD6D 结构的新实例。
            </summary>
            <param name="left">PointD6D 结构，用于比较的第一个结构。</param>
            <param name="right">PointD6D 结构，用于比较的第二个结构。</param>
            <returns>PointD6D 结构，表示将两个 PointD6D 结构的所有分量分别取最大值得到的结果</returns>
        </member>
        <member name="M:Com.PointD6D.Min(Com.PointD6D,Com.PointD6D)">
            <summary>
            返回将两个 PointD6D 结构的所有分量分别取最小值得到的 PointD6D 结构的新实例。
            </summary>
            <param name="left">PointD6D 结构，用于比较的第一个结构。</param>
            <param name="right">PointD6D 结构，用于比较的第二个结构。</param>
            <returns>PointD6D 结构，表示将两个 PointD6D 结构的所有分量分别取最小值得到的结果</returns>
        </member>
        <member name="M:Com.PointD6D.op_Equality(Com.PointD6D,Com.PointD6D)">
            <summary>
            判断两个 PointD6D 结构是否相等。
            </summary>
            <param name="left">运算符左侧比较的 PointD6D 结构。</param>
            <param name="right">运算符右侧比较的 PointD6D 结构。</param>
            <returns>布尔值，表示两个 PointD6D 结构是否相等。</returns>
        </member>
        <member name="M:Com.PointD6D.op_Inequality(Com.PointD6D,Com.PointD6D)">
            <summary>
            判断两个 PointD6D 结构是否不相等。
            </summary>
            <param name="left">运算符左侧比较的 PointD6D 结构。</param>
            <param name="right">运算符右侧比较的 PointD6D 结构。</param>
            <returns>布尔值，表示两个 PointD6D 结构是否不相等。</returns>
        </member>
        <member name="M:Com.PointD6D.op_LessThan(Com.PointD6D,Com.PointD6D)">
            <summary>
            判断两个 PointD6D 结构的字典序是否前者小于后者。
            </summary>
            <param name="left">运算符左侧比较的 PointD6D 结构。</param>
            <param name="right">运算符右侧比较的 PointD6D 结构。</param>
            <returns>布尔值，表示两个 PointD6D 结构的字典序是否前者小于后者。</returns>
        </member>
        <member name="M:Com.PointD6D.op_GreaterThan(Com.PointD6D,Com.PointD6D)">
            <summary>
            判断两个 PointD6D 结构的字典序是否前者大于后者。
            </summary>
            <param name="left">运算符左侧比较的 PointD6D 结构。</param>
            <param name="right">运算符右侧比较的 PointD6D 结构。</param>
            <returns>布尔值，表示两个 PointD6D 结构的字典序是否前者大于后者。</returns>
        </member>
        <member name="M:Com.PointD6D.op_LessThanOrEqual(Com.PointD6D,Com.PointD6D)">
            <summary>
            判断两个 PointD6D 结构的字典序是否前者小于或等于后者。
            </summary>
            <param name="left">运算符左侧比较的 PointD6D 结构。</param>
            <param name="right">运算符右侧比较的 PointD6D 结构。</param>
            <returns>布尔值，表示两个 PointD6D 结构的字典序是否前者小于或等于后者。</returns>
        </member>
        <member name="M:Com.PointD6D.op_GreaterThanOrEqual(Com.PointD6D,Com.PointD6D)">
            <summary>
            判断两个 PointD6D 结构的字典序是否前者大于或等于后者。
            </summary>
            <param name="left">运算符左侧比较的 PointD6D 结构。</param>
            <param name="right">运算符右侧比较的 PointD6D 结构。</param>
            <returns>布尔值，表示两个 PointD6D 结构的字典序是否前者大于或等于后者。</returns>
        </member>
        <member name="M:Com.PointD6D.op_UnaryPlus(Com.PointD6D)">
            <summary>
            返回在 PointD6D 结构的所有分量前添加正号得到的 PointD6D 结构的新实例。
            </summary>
            <param name="pt">运算符右侧的 PointD6D 结构。</param>
            <returns>PointD6D 结构，表示在 PointD6D 结构的所有分量前添加正号得到的结果。</returns>
        </member>
        <member name="M:Com.PointD6D.op_UnaryNegation(Com.PointD6D)">
            <summary>
            返回在 PointD6D 结构的所有分量前添加负号得到的 PointD6D 结构的新实例。
            </summary>
            <param name="pt">运算符右侧的 PointD6D 结构。</param>
            <returns>PointD6D 结构，表示在 PointD6D 结构的所有分量前添加负号得到的结果。</returns>
        </member>
        <member name="M:Com.PointD6D.op_Addition(Com.PointD6D,System.Double)">
            <summary>
            返回将 PointD6D 结构的所有分量与双精度浮点数相加得到的 PointD6D 结构的新实例。
            </summary>
            <param name="pt">PointD6D 结构，表示被加数。</param>
            <param name="n">双精度浮点数，表示加数。</param>
            <returns>PointD6D 结构，表示将 PointD6D 结构的所有分量与双精度浮点数相加得到的结果。</returns>
        </member>
        <member name="M:Com.PointD6D.op_Addition(System.Double,Com.PointD6D)">
            <summary>
            返回将双精度浮点数与 PointD6D 结构的所有分量相加得到的 PointD6D 结构的新实例。
            </summary>
            <param name="n">双精度浮点数，表示被加数。</param>
            <param name="pt">PointD6D 结构，表示加数。</param>
            <returns>PointD6D 结构，表示将双精度浮点数与 PointD6D 结构的所有分量相加得到的结果。</returns>
        </member>
        <member name="M:Com.PointD6D.op_Addition(Com.PointD6D,Com.PointD6D)">
            <summary>
            返回将 PointD6D 结构与 PointD6D 结构的所有分量对应相加得到的 PointD6D 结构的新实例。
            </summary>
            <param name="left">PointD6D 结构，表示被加数。</param>
            <param name="right">PointD6D 结构，表示加数。</param>
            <returns>PointD6D 结构，表示将 PointD6D 结构与 PointD6D 结构的所有分量对应相加得到的结果。</returns>
        </member>
        <member name="M:Com.PointD6D.op_Subtraction(Com.PointD6D,System.Double)">
            <summary>
            返回将 PointD6D 结构的所有分量与双精度浮点数相减得到的 PointD6D 结构的新实例。
            </summary>
            <param name="pt">PointD6D 结构，表示被减数。</param>
            <param name="n">双精度浮点数，表示减数。</param>
            <returns>PointD6D 结构，表示将 PointD6D 结构的所有分量与双精度浮点数相减得到的结果。</returns>
        </member>
        <member name="M:Com.PointD6D.op_Subtraction(System.Double,Com.PointD6D)">
            <summary>
            返回将双精度浮点数与 PointD6D 结构的所有分量相减得到的 PointD6D 结构的新实例。
            </summary>
            <param name="n">双精度浮点数，表示被减数。</param>
            <param name="pt">PointD6D 结构，表示减数。</param>
            <returns>PointD6D 结构，表示将双精度浮点数与 PointD6D 结构的所有分量相减得到的结果。</returns>
        </member>
        <member name="M:Com.PointD6D.op_Subtraction(Com.PointD6D,Com.PointD6D)">
            <summary>
            返回将 PointD6D 结构与 PointD6D 结构的所有分量对应相减得到的 PointD6D 结构的新实例。
            </summary>
            <param name="left">PointD6D 结构，表示被减数。</param>
            <param name="right">PointD6D 结构，表示减数。</param>
            <returns>PointD6D 结构，表示将 PointD6D 结构与 PointD6D 结构的所有分量对应相减得到的结果。</returns>
        </member>
        <member name="M:Com.PointD6D.op_Multiply(Com.PointD6D,System.Double)">
            <summary>
            返回将 PointD6D 结构的所有分量与双精度浮点数相乘得到的 PointD6D 结构的新实例。
            </summary>
            <param name="pt">PointD6D 结构，表示被乘数。</param>
            <param name="n">双精度浮点数，表示乘数。</param>
            <returns>PointD6D 结构，表示将 PointD6D 结构的所有分量与双精度浮点数相乘得到的结果。</returns>
        </member>
        <member name="M:Com.PointD6D.op_Multiply(System.Double,Com.PointD6D)">
            <summary>
            返回将双精度浮点数与 PointD6D 结构的所有分量相乘得到的 PointD6D 结构的新实例。
            </summary>
            <param name="n">双精度浮点数，表示被乘数。</param>
            <param name="pt">PointD6D 结构，表示乘数。</param>
            <returns>PointD6D 结构，表示将双精度浮点数与 PointD6D 结构的所有分量相乘得到的结果。</returns>
        </member>
        <member name="M:Com.PointD6D.op_Multiply(Com.PointD6D,Com.PointD6D)">
            <summary>
            返回将 PointD6D 结构与 PointD6D 结构的所有分量对应相乘得到的 PointD6D 结构的新实例。
            </summary>
            <param name="left">PointD6D 结构，表示被乘数。</param>
            <param name="right">PointD6D 结构，表示乘数。</param>
            <returns>PointD6D 结构，表示将 PointD6D 结构与 PointD6D 结构的所有分量对应相乘得到的结果。</returns>
        </member>
        <member name="M:Com.PointD6D.op_Division(Com.PointD6D,System.Double)">
            <summary>
            返回将 PointD6D 结构的所有分量与双精度浮点数相除得到的 PointD6D 结构的新实例。
            </summary>
            <param name="pt">PointD6D 结构，表示被除数。</param>
            <param name="n">双精度浮点数，表示除数。</param>
            <returns>PointD6D 结构，表示将 PointD6D 结构的所有分量与双精度浮点数相除得到的结果。</returns>
        </member>
        <member name="M:Com.PointD6D.op_Division(System.Double,Com.PointD6D)">
            <summary>
            返回将双精度浮点数与 PointD6D 结构的所有分量相除得到的 PointD6D 结构的新实例。
            </summary>
            <param name="n">双精度浮点数，表示被除数。</param>
            <param name="pt">PointD6D 结构，表示除数。</param>
            <returns>PointD6D 结构，表示将双精度浮点数与 PointD6D 结构的所有分量相除得到的结果。</returns>
        </member>
        <member name="M:Com.PointD6D.op_Division(Com.PointD6D,Com.PointD6D)">
            <summary>
            返回将 PointD6D 结构与 PointD6D 结构的所有分量对应相除得到的 PointD6D 结构的新实例。
            </summary>
            <param name="left">PointD6D 结构，表示被除数。</param>
            <param name="right">PointD6D 结构，表示除数。</param>
            <returns>PointD6D 结构，表示将 PointD6D 结构与 PointD6D 结构的所有分量对应相除得到的结果。</returns>
        </member>
        <member name="M:Com.PointD6D.op_Implicit(System.ValueTuple{System.Double,System.Double,System.Double,System.Double,System.Double,System.Double})~Com.PointD6D">
            <summary>
            将指定的值元组隐式转换为 PointD6D 结构。
            </summary>
            <param name="tuple">用于转换的值元组。</param>
            <returns>PointD6D 结构，表示隐式转换的结果。</returns>
        </member>
        <member name="M:Com.PointD6D.op_Implicit(Com.PointD6D)~System.ValueTuple{System.Double,System.Double,System.Double,System.Double,System.Double,System.Double}">
            <summary>
            将指定的 PointD6D 结构隐式转换为值元组。
            </summary>
            <param name="pt">用于转换的 PointD6D 结构。</param>
            <returns>值元组，表示隐式转换的结果。</returns>
        </member>
        <member name="T:Com.Real">
            <summary>
            表示实数。
            </summary>
        </member>
        <member name="M:Com.Real.#ctor(System.Double,System.Int64)">
            <summary>
            使用双精度浮点数表示的值与 64 位整数表示的数量级初始化 Real 结构的新实例。
            </summary>
            <param name="value">双精度浮点数表示的值。</param>
            <param name="magnitude">64 位整数表示的数量级。</param>
        </member>
        <member name="M:Com.Real.#ctor(System.Double)">
            <summary>
            使用双精度浮点数表示的值初始化 Real 结构的新实例。
            </summary>
            <param name="value">双精度浮点数表示的值。</param>
        </member>
        <member name="M:Com.Real.#ctor(System.Single)">
            <summary>
            使用单精度浮点数表示的值初始化 Real 结构的新实例。
            </summary>
            <param name="value">单精度浮点数表示的值。</param>
        </member>
        <member name="M:Com.Real.#ctor(System.Decimal)">
            <summary>
            使用十进制浮点数表示的值初始化 Real 结构的新实例。
            </summary>
            <param name="value">十进制浮点数表示的值。</param>
        </member>
        <member name="M:Com.Real.#ctor(System.UInt64)">
            <summary>
            使用 64 位无符号整数表示的值初始化 Real 结构的新实例。
            </summary>
            <param name="value">64 位无符号整数表示的值。</param>
        </member>
        <member name="M:Com.Real.#ctor(System.Int64)">
            <summary>
            使用 64 位整数表示的值初始化 Real 结构的新实例。
            </summary>
            <param name="value">64 位整数表示的值。</param>
        </member>
        <member name="M:Com.Real.#ctor(System.UInt32)">
            <summary>
            使用 32 位无符号整数表示的值初始化 Real 结构的新实例。
            </summary>
            <param name="value">32 位无符号整数表示的值。</param>
        </member>
        <member name="M:Com.Real.#ctor(System.Int32)">
            <summary>
            使用 32 位整数表示的值初始化 Real 结构的新实例。
            </summary>
            <param name="value">32 位整数表示的值。</param>
        </member>
        <member name="M:Com.Real.#ctor(System.UInt16)">
            <summary>
            使用 16 位无符号整数表示的值初始化 Real 结构的新实例。
            </summary>
            <param name="value">16 位无符号整数表示的值。</param>
        </member>
        <member name="M:Com.Real.#ctor(System.Int16)">
            <summary>
            使用 16 位整数表示的值初始化 Real 结构的新实例。
            </summary>
            <param name="value">16 位整数表示的值。</param>
        </member>
        <member name="M:Com.Real.#ctor(System.Byte)">
            <summary>
            使用 8 位无符号整数表示的值初始化 Real 结构的新实例。
            </summary>
            <param name="value">8 位无符号整数表示的值。</param>
        </member>
        <member name="M:Com.Real.#ctor(System.SByte)">
            <summary>
            使用 8 位整数表示的值初始化 Real 结构的新实例。
            </summary>
            <param name="value">8 位整数表示的值。</param>
        </member>
        <member name="F:Com.Real.Zero">
            <summary>
            表示数字 0 的 Real 结构的实例。
            </summary>
        </member>
        <member name="F:Com.Real.One">
            <summary>
            表示数字 1 的 Real 结构的实例。
            </summary>
        </member>
        <member name="F:Com.Real.MinusOne">
            <summary>
            表示数字 -1 的 Real 结构的实例。
            </summary>
        </member>
        <member name="F:Com.Real.MinValue">
            <summary>
            表示 Real 结构的最小可能值。
            </summary>
        </member>
        <member name="F:Com.Real.MaxValue">
            <summary>
            表示 Real 结构的最大可能值。
            </summary>
        </member>
        <member name="F:Com.Real.Epsilon">
            <summary>
            表示 Real 结构的大于零的最小可能值。
            </summary>
        </member>
        <member name="F:Com.Real.PositiveInfinity">
            <summary>
            表示正无穷大的 Real 结构的实例。
            </summary>
        </member>
        <member name="F:Com.Real.NegativeInfinity">
            <summary>
            表示负无穷大的 Real 结构的实例。
            </summary>
        </member>
        <member name="F:Com.Real.NaN">
            <summary>
            表示非数字的 Real 结构的实例。
            </summary>
        </member>
        <member name="P:Com.Real.IsNaN">
            <summary>
            获取表示此 Real 结构是否为非数字的布尔值。
            </summary>
        </member>
        <member name="P:Com.Real.IsPositiveInfinity">
            <summary>
            获取表示此 Real 结构是否为正无穷大的布尔值。
            </summary>
        </member>
        <member name="P:Com.Real.IsNegativeInfinity">
            <summary>
            获取表示此 Real 结构是否为负无穷大的布尔值。
            </summary>
        </member>
        <member name="P:Com.Real.IsInfinity">
            <summary>
            获取表示此 Real 结构是否为无穷大的布尔值。
            </summary>
        </member>
        <member name="P:Com.Real.IsNaNOrInfinity">
            <summary>
            获取表示此 Real 结构是否为非数字或无穷大的布尔值。
            </summary>
        </member>
        <member name="P:Com.Real.IsZero">
            <summary>
            获取表示此 Real 结构是否为 0 的布尔值。
            </summary>
        </member>
        <member name="P:Com.Real.IsOne">
            <summary>
            获取表示此 Real 结构是否为 1 的布尔值。
            </summary>
        </member>
        <member name="P:Com.Real.IsMinusOne">
            <summary>
            获取表示此 Real 结构是否为 -1 的布尔值。
            </summary>
        </member>
        <member name="P:Com.Real.IsPositive">
            <summary>
            获取表示此 Real 结构是否为正数的布尔值。
            </summary>
        </member>
        <member name="P:Com.Real.IsNegative">
            <summary>
            获取表示此 Real 结构是否为负数的布尔值。
            </summary>
        </member>
        <member name="P:Com.Real.IsInteger">
            <summary>
            获取表示此 Real 结构是否为整数的布尔值。
            </summary>
        </member>
        <member name="P:Com.Real.IsDecimal">
            <summary>
            获取表示此 Real 结构是否为小数的布尔值。
            </summary>
        </member>
        <member name="P:Com.Real.IsEven">
            <summary>
            获取表示此 Real 结构是否为偶数的布尔值。
            </summary>
        </member>
        <member name="P:Com.Real.IsOdd">
            <summary>
            获取表示此 Real 结构是否为奇数的布尔值。
            </summary>
        </member>
        <member name="P:Com.Real.Value">
            <summary>
            获取或设置此 Real 结构的值。
            </summary>
        </member>
        <member name="P:Com.Real.Magnitude">
            <summary>
            获取或设置此 Real 结构的数量级。
            </summary>
        </member>
        <member name="P:Com.Real.Opposite">
            <summary>
            获取此 Real 结构的相反数。
            </summary>
        </member>
        <member name="P:Com.Real.Reciprocal">
            <summary>
            获取此 Real 结构的倒数。
            </summary>
        </member>
        <member name="M:Com.Real.Equals(System.Object)">
            <summary>
            判断此 Real 结构是否与指定的对象相等。
            </summary>
            <param name="obj">用于比较的对象。</param>
            <returns>布尔值，表示此 Real 结构是否与指定的对象相等。</returns>
        </member>
        <member name="M:Com.Real.GetHashCode">
            <summary>
            返回此 Real 结构的哈希代码。
            </summary>
            <returns>32 位整数，表示此 Real 结构的哈希代码。</returns>
        </member>
        <member name="M:Com.Real.ToString">
            <summary>
            将此 Real 结构转换为字符串。
            </summary>
            <returns>字符串，表示此 Real 结构的字符串形式。</returns>
        </member>
        <member name="M:Com.Real.Equals(Com.Real)">
            <summary>
            判断此 Real 结构是否与指定的 Real 结构相等。
            </summary>
            <param name="real">用于比较的 Real 结构。</param>
            <returns>布尔值，表示此 Real 结构是否与指定的 Real 结构相等。</returns>
        </member>
        <member name="M:Com.Real.CompareTo(System.Object)">
            <summary>
            将此 Real 结构与指定的对象进行次序比较。
            </summary>
            <param name="obj">用于比较的对象。</param>
            <returns>32 位整数，表示此 Real 与指定的对象进行次序比较的结果。</returns>
        </member>
        <member name="M:Com.Real.CompareTo(Com.Real)">
            <summary>
            将此 Real 结构与指定的 Real 结构进行次序比较。
            </summary>
            <param name="real">用于比较的 Real 结构。</param>
            <returns>32 位整数，表示此 Real 与指定的 Real 对象进行次序比较的结果。</returns>
        </member>
        <member name="M:Com.Real.Equals(Com.Real,Com.Real)">
            <summary>
            判断两个 Real 结构是否相等。
            </summary>
            <param name="left">用于比较的第一个 Real 结构。</param>
            <param name="right">用于比较的第二个 Real 结构。</param>
            <returns>布尔值，表示两个 Real 结构是否相等。</returns>
        </member>
        <member name="M:Com.Real.Compare(Com.Real,Com.Real)">
            <summary>
            比较两个 Real 结构的次序。
            </summary>
            <param name="left">用于比较的第一个 Real 结构。</param>
            <param name="right">用于比较的第二个 Real 结构。</param>
            <returns>32 位整数，表示对两个 Real 对象进行次序比较的结果。</returns>
        </member>
        <member name="M:Com.Real.Sqr(Com.Real)">
            <summary>
            返回对 Real 结构计算平方得到的 Real 结构的新实例。
            </summary>
            <param name="real">Real 结构，表示底数。</param>
            <returns>Real 结构，表示对 Real 结构计算平方得到的结果。</returns>
        </member>
        <member name="M:Com.Real.Sqrt(Com.Real)">
            <summary>
            返回对 Real 结构计算平方根得到的 Real 结构的新实例。
            </summary>
            <param name="real">Real 结构，表示被开方数。</param>
            <returns>Real 结构，表示对 Real 结构计算平方根得到的结果。</returns>
        </member>
        <member name="M:Com.Real.Exp10(Com.Real)">
            <summary>
            返回对 Real 结构计算以 10 为底的幂得到的 Real 结构的新实例。
            </summary>
            <param name="real">Real 结构，表示指数。</param>
            <returns>Real 结构，表示对 Real 结构计算以 10 为底的幂得到的结果。</returns>
        </member>
        <member name="M:Com.Real.Exp(Com.Real)">
            <summary>
            返回对 Real 结构计算自然幂得到的 Real 结构的新实例。
            </summary>
            <param name="real">Real 结构，表示指数。</param>
            <returns>Real 结构，表示对 Real 结构计算自然幂得到的结果。</returns>
        </member>
        <member name="M:Com.Real.Pow(Com.Real,Com.Real)">
            <summary>
            返回对 Real 结构计算幂得到的 Real 结构的新实例。
            </summary>
            <param name="left">Real 结构，表示底数。</param>
            <param name="right">Real 结构，表示指数。</param>
            <returns>Real 结构，表示对 Real 结构计算幂得到的结果。</returns>
        </member>
        <member name="M:Com.Real.Log10(Com.Real)">
            <summary>
            返回对 Real 结构计算常用对数得到的 Real 结构的新实例。
            </summary>
            <param name="real">Real 结构，表示幂。</param>
            <returns>Real 结构，表示对 Real 结构计算常用对数得到的结果。</returns>
        </member>
        <member name="M:Com.Real.Log(Com.Real)">
            <summary>
            返回对 Real 结构计算自然对数得到的 Real 结构的新实例。
            </summary>
            <param name="real">Real 结构，表示幂。</param>
            <returns>Real 结构，表示对 Real 结构计算自然对数得到的结果。</returns>
        </member>
        <member name="M:Com.Real.Log(Com.Real,Com.Real)">
            <summary>
            返回对 Real 结构计算对数得到的 Real 结构的新实例。
            </summary>
            <param name="left">Real 结构，表示幂。</param>
            <param name="right">Real 结构，表示底数。</param>
            <returns>Real 结构，表示对 Real 结构计算对数得到的结果。</returns>
        </member>
        <member name="M:Com.Real.Sin(Com.Real)">
            <summary>
            返回对 Real 结构计算正弦得到的 Real 结构的新实例。
            </summary>
            <param name="real">Real 结构，表示以弧度计量的角度。</param>
            <returns>Real 结构，表示对 Real 结构计算正弦得到的结果。</returns>
        </member>
        <member name="M:Com.Real.Cos(Com.Real)">
            <summary>
            返回对 Real 结构计算余弦得到的 Real 结构的新实例。
            </summary>
            <param name="real">Real 结构，表示以弧度计量的角度。</param>
            <returns>Real 结构，表示对 Real 结构计算余弦得到的结果。</returns>
        </member>
        <member name="M:Com.Real.Tan(Com.Real)">
            <summary>
            返回对 Real 结构计算正切得到的 Real 结构的新实例。
            </summary>
            <param name="real">Real 结构，表示以弧度计量的角度。</param>
            <returns>Real 结构，表示对 Real 结构计算正切得到的结果。</returns>
        </member>
        <member name="M:Com.Real.Asin(Com.Real)">
            <summary>
            返回对 Real 结构计算反正弦得到的 Real 结构的新实例。
            </summary>
            <param name="real">Real 结构，表示正弦值。</param>
            <returns>Real 结构，表示对 Real 结构计算反正弦得到的结果。</returns>
        </member>
        <member name="M:Com.Real.Acos(Com.Real)">
            <summary>
            返回对 Real 结构计算反余弦得到的 Real 结构的新实例。
            </summary>
            <param name="real">Real 结构，表示余弦值。</param>
            <returns>Real 结构，表示对 Real 结构计算反余弦得到的结果。</returns>
        </member>
        <member name="M:Com.Real.Atan(Com.Real)">
            <summary>
            返回对 Real 结构计算反正切得到的 Real 结构的新实例。
            </summary>
            <param name="real">Real 结构，表示正切值。</param>
            <returns>Real 结构，表示对 Real 结构计算反正切得到的结果。</returns>
        </member>
        <member name="M:Com.Real.Sinh(Com.Real)">
            <summary>
            返回对 Real 结构计算双曲正弦得到的 Real 结构的新实例。
            </summary>
            <param name="real">Real 结构，表示以弧度计量的角度。</param>
            <returns>Real 结构，表示对 Real 结构计算双曲正弦得到的结果。</returns>
        </member>
        <member name="M:Com.Real.Cosh(Com.Real)">
            <summary>
            返回对 Real 结构计算双曲余弦得到的 Real 结构的新实例。
            </summary>
            <param name="real">Real 结构，表示以弧度计量的角度。</param>
            <returns>Real 结构，表示对 Real 结构计算双曲余弦得到的结果。</returns>
        </member>
        <member name="M:Com.Real.Tanh(Com.Real)">
            <summary>
            返回对 Real 结构计算双曲正切得到的 Real 结构的新实例。
            </summary>
            <param name="real">Real 结构，表示以弧度计量的角度。</param>
            <returns>Real 结构，表示对 Real 结构计算双曲正切得到的结果。</returns>
        </member>
        <member name="M:Com.Real.Asinh(Com.Real)">
            <summary>
            返回对 Real 结构计算反双曲正弦得到的 Real 结构的新实例。
            </summary>
            <param name="real">Real 结构，表示双曲正弦值。</param>
            <returns>Real 结构，表示对 Real 结构计算反双曲正弦得到的结果。</returns>
        </member>
        <member name="M:Com.Real.Acosh(Com.Real)">
            <summary>
            返回对 Real 结构计算反双曲余弦得到的 Real 结构的新实例。
            </summary>
            <param name="real">Real 结构，表示双曲余弦值。</param>
            <returns>Real 结构，表示对 Real 结构计算反双曲余弦得到的结果。</returns>
        </member>
        <member name="M:Com.Real.Atanh(Com.Real)">
            <summary>
            返回对 Real 结构计算反双曲正切得到的 Real 结构的新实例。
            </summary>
            <param name="real">Real 结构，表示双曲正切值。</param>
            <returns>Real 结构，表示对 Real 结构计算反双曲正切得到的结果。</returns>
        </member>
        <member name="M:Com.Real.Sign(Com.Real)">
            <summary>
            返回 Real 结构的符号数。
            </summary>
            <param name="real">Real 结构，用于转换的结构。</param>
            <returns>32 位整数，表示 Real 结构的符号数。</returns>
        </member>
        <member name="M:Com.Real.Abs(Com.Real)">
            <summary>
            返回将 Real 结构取绝对值得到的 Real 结构的新实例。
            </summary>
            <param name="real">Real 结构，用于转换的结构。</param>
            <returns>Real 结构，表示将 Real 结构取绝对值得到的结果。</returns>
        </member>
        <member name="M:Com.Real.Ceiling(Com.Real)">
            <summary>
            返回将 Real 结构舍入到较大的整数值得到的 Real 结构的新实例。
            </summary>
            <param name="real">Real 结构，用于转换的结构。</param>
            <returns>Real 结构，表示将 Real 结构舍入到较大的整数值得到的结果。</returns>
        </member>
        <member name="M:Com.Real.Floor(Com.Real)">
            <summary>
            返回将 Real 结构舍入到较小的整数值得到的 Real 结构的新实例。
            </summary>
            <param name="real">Real 结构，用于转换的结构。</param>
            <returns>Real 结构，表示将 Real 结构舍入到较小的整数值得到的结果。</returns>
        </member>
        <member name="M:Com.Real.Round(Com.Real)">
            <summary>
            返回将 Real 结构舍入到最接近的整数值得到的 Real 结构的新实例。
            </summary>
            <param name="real">Real 结构，用于转换的结构。</param>
            <returns>Real 结构，表示将 Real 结构舍入到最接近的整数值得到的结果。</returns>
        </member>
        <member name="M:Com.Real.Truncate(Com.Real)">
            <summary>
            返回将 Real 结构截断小数部分取整得到的 Real 结构的新实例。
            </summary>
            <param name="real">Real 结构，用于转换的结构。</param>
            <returns>Real 结构，表示将 Real 结构截断小数部分取整得到的结果。</returns>
        </member>
        <member name="M:Com.Real.Max(Com.Real,Com.Real)">
            <summary>
            返回将两个 Real 结构取最大值得到的 Real 结构的新实例。
            </summary>
            <param name="left">Real 结构，用于比较的第一个结构。</param>
            <param name="right">Real 结构，用于比较的第二个结构。</param>
            <returns>Real 结构，表示将两个 Real 结构取最大值得到的结果。</returns>
        </member>
        <member name="M:Com.Real.Min(Com.Real,Com.Real)">
            <summary>
            返回将两个 Real 结构取最小值得到的 Real 结构的新实例。
            </summary>
            <param name="left">Real 结构，用于比较的第一个结构。</param>
            <param name="right">Real 结构，用于比较的第二个结构。</param>
            <returns>Real 结构，表示将两个 Real 结构取最小值得到的结果。</returns>
        </member>
        <member name="M:Com.Real.op_Equality(Com.Real,Com.Real)">
            <summary>
            判断两个 Real 结构是否相等。
            </summary>
            <param name="left">运算符左侧比较的 Real 结构。</param>
            <param name="right">运算符右侧比较的 Real 结构。</param>
            <returns>布尔值，表示两个 Real 结构是否相等。</returns>
        </member>
        <member name="M:Com.Real.op_Inequality(Com.Real,Com.Real)">
            <summary>
            判断两个 Real 结构是否不相等。
            </summary>
            <param name="left">运算符左侧比较的 Real 结构。</param>
            <param name="right">运算符右侧比较的 Real 结构。</param>
            <returns>布尔值，表示两个 Real 结构是否不相等。</returns>
        </member>
        <member name="M:Com.Real.op_LessThan(Com.Real,Com.Real)">
            <summary>
            判断两个 Real 结构是否前者小于后者。
            </summary>
            <param name="left">运算符左侧比较的 Real 结构。</param>
            <param name="right">运算符右侧比较的 Real 结构。</param>
            <returns>布尔值，表示两个 Real 结构是否前者小于后者。</returns>
        </member>
        <member name="M:Com.Real.op_GreaterThan(Com.Real,Com.Real)">
            <summary>
            判断两个 Real 结构是否前者大于后者。
            </summary>
            <param name="left">运算符左侧比较的 Real 结构。</param>
            <param name="right">运算符右侧比较的 Real 结构。</param>
            <returns>布尔值，表示两个 Real 结构是否前者大于后者。</returns>
        </member>
        <member name="M:Com.Real.op_LessThanOrEqual(Com.Real,Com.Real)">
            <summary>
            判断两个 Real 结构是否前者小于或等于后者。
            </summary>
            <param name="left">运算符左侧比较的 Real 结构。</param>
            <param name="right">运算符右侧比较的 Real 结构。</param>
            <returns>布尔值，表示两个 Real 结构是否前者小于或等于后者。</returns>
        </member>
        <member name="M:Com.Real.op_GreaterThanOrEqual(Com.Real,Com.Real)">
            <summary>
            判断两个 Real 结构是否前者大于或等于后者。
            </summary>
            <param name="left">运算符左侧比较的 Real 结构。</param>
            <param name="right">运算符右侧比较的 Real 结构。</param>
            <returns>布尔值，表示两个 Real 结构是否前者大于或等于后者。</returns>
        </member>
        <member name="M:Com.Real.op_UnaryPlus(Com.Real)">
            <summary>
            返回在 Real 结构前添加正号得到的 Real 结构的新实例。
            </summary>
            <param name="real">Real 结构，用于转换的结构。</param>
            <returns>Real 结构，表示在 Real 结构前添加正号得到的结果。</returns>
        </member>
        <member name="M:Com.Real.op_UnaryNegation(Com.Real)">
            <summary>
            返回在 Real 结构前添加负号得到的 Real 结构的新实例。
            </summary>
            <param name="real">Real 结构，用于转换的结构。</param>
            <returns>Real 结构，表示在 Real 结构前添加负号得到的结果。</returns>
        </member>
        <member name="M:Com.Real.op_Increment(Com.Real)">
            <summary>
            返回将 Real 结构加 1 得到的 Real 结构的新实例。
            </summary>
            <param name="real">Real 结构，用于转换的结构。</param>
            <returns>Real 结构，表示将 Real 结构加 1 得到的结果。</returns>
        </member>
        <member name="M:Com.Real.op_Decrement(Com.Real)">
            <summary>
            返回将 Real 结构减 1 得到的 Real 结构的新实例。
            </summary>
            <param name="real">Real 结构，用于转换的结构。</param>
            <returns>Real 结构，表示将 Real 结构减 1 得到的结果。</returns>
        </member>
        <member name="M:Com.Real.op_Addition(Com.Real,Com.Real)">
            <summary>
            返回将 Real 结构与 Real 结构的相加得到的 Real 结构的新实例。
            </summary>
            <param name="left">Real 结构，表示被加数。</param>
            <param name="right">Real 结构，表示加数。</param>
            <returns>Real 结构，表示将 Real 结构与 Real 结构的相加得到的结果。</returns>
        </member>
        <member name="M:Com.Real.op_Subtraction(Com.Real,Com.Real)">
            <summary>
            返回将 Real 结构与 Real 结构的相减得到的 Real 结构的新实例。
            </summary>
            <param name="left">Real 结构，表示被减数。</param>
            <param name="right">Real 结构，表示减数。</param>
            <returns>Real 结构，表示将 Real 结构与 Real 结构的相减得到的结果。</returns>
        </member>
        <member name="M:Com.Real.op_Multiply(Com.Real,Com.Real)">
            <summary>
            返回将 Real 结构与 Real 结构的相乘得到的 Real 结构的新实例。
            </summary>
            <param name="left">Real 结构，表示被乘数。</param>
            <param name="right">Real 结构，表示乘数。</param>
            <returns>Real 结构，表示将 Real 结构与 Real 结构的相乘得到的结果。</returns>
        </member>
        <member name="M:Com.Real.op_Division(Com.Real,Com.Real)">
            <summary>
            返回将 Real 结构与 Real 结构的相除得到的 Real 结构的新实例。
            </summary>
            <param name="left">Real 结构，表示被除数。</param>
            <param name="right">Real 结构，表示除数。</param>
            <returns>Real 结构，表示将 Real 结构与 Real 结构的相除得到的结果。</returns>
        </member>
        <member name="M:Com.Real.op_Modulus(Com.Real,Com.Real)">
            <summary>
            返回表示将 Real 结构与 Real 结构的相除得到的余数的 Real 结构的新实例。
            </summary>
            <param name="left">Real 结构，表示被除数。</param>
            <param name="right">Real 结构，表示除数。</param>
            <returns>Real 结构，表示将 Real 结构与 Real 结构的相除得到的余数。</returns>
        </member>
        <member name="M:Com.Real.op_ExclusiveOr(Com.Real,Com.Real)">
            <summary>
            返回对 Real 结构计算幂得到的 Real 结构的新实例。
            </summary>
            <param name="left">Real 结构，表示底数。</param>
            <param name="right">Real 结构，表示指数。</param>
            <returns>Real 结构，表示对 Real 结构计算幂得到的结果。</returns>
        </member>
        <member name="M:Com.Real.op_Explicit(Com.Real)~System.Double">
            <summary>
            将指定的 Real 结构显式转换为双精度浮点数。
            </summary>
            <param name="real">用于转换的 Real 结构。</param>
            <returns>双精度浮点数，表示显式转换的结果。</returns>
        </member>
        <member name="M:Com.Real.op_Explicit(Com.Real)~System.Single">
            <summary>
            将指定的 Real 结构显式转换为单精度浮点数。
            </summary>
            <param name="real">用于转换的 Real 结构。</param>
            <returns>单精度浮点数，表示显式转换的结果。</returns>
        </member>
        <member name="M:Com.Real.op_Explicit(Com.Real)~System.Decimal">
            <summary>
            将指定的 Real 结构显式转换为十进制浮点数。
            </summary>
            <param name="real">用于转换的 Real 结构。</param>
            <returns>十进制浮点数，表示显式转换的结果。</returns>
        </member>
        <member name="M:Com.Real.op_Explicit(Com.Real)~System.UInt64">
            <summary>
            将指定的 Real 结构显式转换为 64 位无符号整数。
            </summary>
            <param name="real">用于转换的 Real 结构。</param>
            <returns>64 位无符号整数，表示显式转换的结果。</returns>
        </member>
        <member name="M:Com.Real.op_Explicit(Com.Real)~System.Int64">
            <summary>
            将指定的 Real 结构显式转换为 64 位整数。
            </summary>
            <param name="real">用于转换的 Real 结构。</param>
            <returns>64 位整数，表示显式转换的结果。</returns>
        </member>
        <member name="M:Com.Real.op_Explicit(Com.Real)~System.UInt32">
            <summary>
            将指定的 Real 结构显式转换为 32 位无符号整数。
            </summary>
            <param name="real">用于转换的 Real 结构。</param>
            <returns>32 位无符号整数，表示显式转换的结果。</returns>
        </member>
        <member name="M:Com.Real.op_Explicit(Com.Real)~System.Int32">
            <summary>
            将指定的 Real 结构显式转换为 32 位整数。
            </summary>
            <param name="real">用于转换的 Real 结构。</param>
            <returns>32 位整数，表示显式转换的结果。</returns>
        </member>
        <member name="M:Com.Real.op_Explicit(Com.Real)~System.UInt16">
            <summary>
            将指定的 Real 结构显式转换为 16 位无符号整数。
            </summary>
            <param name="real">用于转换的 Real 结构。</param>
            <returns>16 位无符号整数，表示显式转换的结果。</returns>
        </member>
        <member name="M:Com.Real.op_Explicit(Com.Real)~System.Int16">
            <summary>
            将指定的 Real 结构显式转换为 16 位整数。
            </summary>
            <param name="real">用于转换的 Real 结构。</param>
            <returns>16 位整数，表示显式转换的结果。</returns>
        </member>
        <member name="M:Com.Real.op_Explicit(Com.Real)~System.Byte">
            <summary>
            将指定的 Real 结构显式转换为 8 位无符号整数。
            </summary>
            <param name="real">用于转换的 Real 结构。</param>
            <returns>8 位无符号整数，表示显式转换的结果。</returns>
        </member>
        <member name="M:Com.Real.op_Explicit(Com.Real)~System.SByte">
            <summary>
            将指定的 Real 结构显式转换为 8 位整数。
            </summary>
            <param name="real">用于转换的 Real 结构。</param>
            <returns>8 位整数，表示显式转换的结果。</returns>
        </member>
        <member name="M:Com.Real.op_Implicit(System.Double)~Com.Real">
            <summary>
            将指定的双精度浮点数隐式转换为 Real 结构。
            </summary>
            <param name="value">用于转换的双精度浮点数。</param>
            <returns>Real 结构，表示隐式转换的结果。</returns>
        </member>
        <member name="M:Com.Real.op_Implicit(System.Single)~Com.Real">
            <summary>
            将指定的单精度浮点数隐式转换为 Real 结构。
            </summary>
            <param name="value">用于转换的单精度浮点数。</param>
            <returns>Real 结构，表示隐式转换的结果。</returns>
        </member>
        <member name="M:Com.Real.op_Explicit(System.Decimal)~Com.Real">
            <summary>
            将指定的十进制浮点数显式转换为 Real 结构。
            </summary>
            <param name="value">用于转换的十进制浮点数。</param>
            <returns>Real 结构，表示显式转换的结果。</returns>
        </member>
        <member name="M:Com.Real.op_Implicit(System.UInt64)~Com.Real">
            <summary>
            将指定的 64 位无符号整数隐式转换为 Real 结构。
            </summary>
            <param name="value">用于转换的 64 位无符号整数。</param>
            <returns>Real 结构，表示隐式转换的结果。</returns>
        </member>
        <member name="M:Com.Real.op_Implicit(System.Int64)~Com.Real">
            <summary>
            将指定的 64 位整数隐式转换为 Real 结构。
            </summary>
            <param name="value">用于转换的 64 位整数。</param>
            <returns>Real 结构，表示隐式转换的结果。</returns>
        </member>
        <member name="M:Com.Real.op_Implicit(System.UInt32)~Com.Real">
            <summary>
            将指定的 32 位无符号整数隐式转换为 Real 结构。
            </summary>
            <param name="value">用于转换的 32 位无符号整数。</param>
            <returns>Real 结构，表示隐式转换的结果。</returns>
        </member>
        <member name="M:Com.Real.op_Implicit(System.Int32)~Com.Real">
            <summary>
            将指定的 32 位整数隐式转换为 Real 结构。
            </summary>
            <param name="value">用于转换的 32 位整数。</param>
            <returns>Real 结构，表示隐式转换的结果。</returns>
        </member>
        <member name="M:Com.Real.op_Implicit(System.UInt16)~Com.Real">
            <summary>
            将指定的 16 位无符号整数隐式转换为 Real 结构。
            </summary>
            <param name="value">用于转换的 16 位无符号整数。</param>
            <returns>Real 结构，表示隐式转换的结果。</returns>
        </member>
        <member name="M:Com.Real.op_Implicit(System.Int16)~Com.Real">
            <summary>
            将指定的 16 位整数隐式转换为 Real 结构。
            </summary>
            <param name="value">用于转换的 16 位整数。</param>
            <returns>Real 结构，表示隐式转换的结果。</returns>
        </member>
        <member name="M:Com.Real.op_Implicit(System.Byte)~Com.Real">
            <summary>
            将指定的 8 位无符号整数隐式转换为 Real 结构。
            </summary>
            <param name="value">用于转换的 8 位无符号整数。</param>
            <returns>Real 结构，表示隐式转换的结果。</returns>
        </member>
        <member name="M:Com.Real.op_Implicit(System.SByte)~Com.Real">
            <summary>
            将指定的 8 位整数隐式转换为 Real 结构。
            </summary>
            <param name="value">用于转换的 8 位整数。</param>
            <returns>Real 结构，表示隐式转换的结果。</returns>
        </member>
        <member name="T:Com.Statistics">
            <summary>
            为统计学的基本计算供静态方法。
            </summary>
            <summary>
            为统计学的基本计算供静态方法。
            </summary>
            <summary>
            为统计学的基本计算供静态方法。
            </summary>
            <summary>
            为统计学的基本计算供静态方法。
            </summary>
        </member>
        <member name="M:Com.Statistics.GeometricDistributionProbability(System.Int32,System.Double)">
            <summary>
            计算服从几何分布的随机变量在指定分布参数的概率。
            </summary>
            <param name="value">测试的样本数量。</param>
            <param name="p">单个样本满足某个条件的概率，等于数学期望的倒数。</param>
            <returns>双精度浮点数，表示服从几何分布的随机变量在指定分布参数的概率。</returns>
        </member>
        <member name="M:Com.Statistics.HypergeometricDistributionProbability(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            计算服从超几何分布的随机变量在指定分布参数的概率。
            </summary>
            <param name="value">测试的样本中满足某个条件的样本数量。</param>
            <param name="N">样本总量。</param>
            <param name="M">满足某个条件的样本数量。</param>
            <param name="n">测试的样本数量。</param>
            <returns>双精度浮点数，表示服从超几何分布的随机变量在指定分布参数的概率。</returns>
        </member>
        <member name="M:Com.Statistics.BinomialDistributionProbability(System.Int32,System.Int32,System.Double)">
            <summary>
            计算服从二项分布的随机变量在指定分布参数的概率。
            </summary>
            <param name="value">测试的样本数量。</param>
            <param name="n">样本总量。</param>
            <param name="p">单个样本满足某个条件的概率，等于样本总量为 1 时的数学期望。</param>
            <returns>双精度浮点数，表示服从二项分布的随机变量在指定分布参数的概率。</returns>
        </member>
        <member name="M:Com.Statistics.PoissonDistributionProbability(System.Int32,System.Double)">
            <summary>
            计算服从泊松分布的随机变量在指定分布参数的概率。
            </summary>
            <param name="value">单位测度内测试的样本数量。</param>
            <param name="lambda">单位测度内满足某个条件的平均样本数量，等于数学期望或方差。</param>
            <returns>双精度浮点数，表示服从泊松分布的随机变量在指定分布参数的概率。</returns>
        </member>
        <member name="M:Com.Statistics.ExponentialDistributionProbabilityDensity(System.Double,System.Double)">
            <summary>
            计算服从指数分布的随机变量在指定分布参数的概率密度。
            </summary>
            <param name="value">样本值。</param>
            <param name="lambda">率参数，等于数学期望的倒数或标准差的倒数。</param>
            <returns>双精度浮点数，表示服从指数分布的随机变量在指定分布参数的概率密度。</returns>
        </member>
        <member name="M:Com.Statistics.ExponentialDistributionProbability(System.Double,System.Double,System.Double)">
            <summary>
            计算服从指数分布的随机变量在指定分布参数的在指定区间的概率。
            </summary>
            <param name="lambda">率参数，等于数学期望的倒数或标准差的倒数。</param>
            <param name="left">区间左端点。</param>
            <param name="right">区间右端点。</param>
            <returns>双精度浮点数，表示服从指数分布的随机变量在指定分布参数的在指定区间的概率。</returns>
        </member>
        <member name="M:Com.Statistics.NormalDistributionProbabilityDensity(System.Double)">
            <summary>
            计算服从标准正态分布的随机变量在指定分布参数的概率密度。
            </summary>
            <param name="value">样本值。</param>
            <returns>双精度浮点数，表示服从标准正态分布的随机变量在指定分布参数的概率密度。</returns>
        </member>
        <member name="M:Com.Statistics.NormalDistributionProbabilityDensity(System.Double,System.Double,System.Double)">
            <summary>
            计算服从正态分布的随机变量在指定分布参数的概率密度。
            </summary>
            <param name="value">样本值。</param>
            <param name="ev">数学期望。</param>
            <param name="sd">标准差。</param>
            <returns>双精度浮点数，表示服从正态分布的随机变量在指定分布参数的概率密度。</returns>
        </member>
        <member name="M:Com.Statistics.ChiSquaredDistributionProbabilityDensity(System.Double,System.Int32)">
            <summary>
            计算服从卡方分布的随机变量在指定分布参数的概率密度。
            </summary>
            <param name="value">样本值。</param>
            <param name="k">自由度。</param>
            <returns>双精度浮点数，表示服从卡方分布的随机变量在指定分布参数的概率密度。</returns>
        </member>
        <member name="M:Com.Statistics.RandomInteger">
            <summary>
            返回一个概率密度平均分布的非负随机 32 位整数。
            </summary>
            <returns>32 位整数，表示概率密度平均分布的非负随机数。</returns>
        </member>
        <member name="M:Com.Statistics.RandomInteger(System.Int32)">
            <summary>
            返回一个在 0 与右端点指定的区间内概率密度平均分布的非负随机 32 位整数。
            </summary>
            <param name="maxValue">最大值（不含）。</param>
            <returns>32 位整数，表示概率密度平均分布的非负随机数。</returns>
        </member>
        <member name="M:Com.Statistics.RandomInteger(System.Int32,System.Int32)">
            <summary>
            返回一个在指定区间内概率密度平均分布的随机 32 位整数。
            </summary>
            <param name="minValue">最小值（含）。</param>
            <param name="maxValue">最大值（不含）。</param>
            <returns>32 位整数，表示概率密度平均分布的随机数。</returns>
        </member>
        <member name="M:Com.Statistics.RandomDouble">
            <summary>
            返回一个小于 1 的概率密度平均分布的非负随机双精度浮点数。
            </summary>
            <returns>双精度浮点数，表示概率密度平均分布的非负随机数。</returns>
        </member>
        <member name="M:Com.Statistics.RandomDouble(System.Double)">
            <summary>
            返回一个在 0 与右端点指定的区间内概率密度平均分布的非负随机双精度浮点数。
            </summary>
            <param name="maxValue">最大值（不含）。</param>
            <returns>双精度浮点数，表示概率密度平均分布的非负随机数。</returns>
        </member>
        <member name="M:Com.Statistics.RandomDouble(System.Double,System.Double)">
            <summary>
            返回一个在指定区间内概率密度平均分布的随机双精度浮点数。
            </summary>
            <param name="minValue">最小值（含）。</param>
            <param name="maxValue">最大值（不含）。</param>
            <returns>双精度浮点数，表示概率密度平均分布的随机数。</returns>
        </member>
        <member name="M:Com.Statistics.NormalDistributionRandomInteger">
            <summary>
            返回一个概率密度服从标准正态分布的随机 32 位整数。
            </summary>
            <returns>32 位整数，表示概率密度服从标准正态分布的随机数。</returns>
        </member>
        <member name="M:Com.Statistics.NormalDistributionRandomInteger(System.Double,System.Double)">
            <summary>
            返回一个概率密度服从正态分布的随机 32 位整数。
            </summary>
            <param name="ev">数学期望。</param>
            <param name="sd">标准差。</param>
            <returns>32 位整数，表示概率密度服从正态分布的随机数。</returns>
        </member>
        <member name="M:Com.Statistics.NormalDistributionRandomDouble">
            <summary>
            返回一个概率密度服从标准正态分布的随机双精度浮点数。
            </summary>
            <returns>双精度浮点数，表示概率密度服从标准正态分布的随机数。</returns>
        </member>
        <member name="M:Com.Statistics.NormalDistributionRandomDouble(System.Double,System.Double)">
            <summary>
            返回一个概率密度服从正态分布的随机双精度浮点数。
            </summary>
            <param name="ev">数学期望。</param>
            <param name="sd">标准差。</param>
            <returns>双精度浮点数，表示概率密度服从正态分布的随机数。</returns>
        </member>
        <member name="M:Com.Statistics.Arrangement(System.Double,System.Double)">
            <summary>
            计算从有限个元素中任取若干个元素的排列数。
            </summary>
            <param name="total">元素总数。</param>
            <param name="selection">抽取的元素数量。</param>
            <returns>双精度浮点数，表示从有限个元素中任取若干个元素的排列数。</returns>
        </member>
        <member name="M:Com.Statistics.Combination(System.Double,System.Double)">
            <summary>
            计算从有限个元素中任取若干个元素的组合数。
            </summary>
            <param name="total">元素总数。</param>
            <param name="selection">抽取的元素数量。</param>
            <returns>双精度浮点数，表示从有限个元素中任取若干个元素的组合数。</returns>
        </member>
        <member name="M:Com.Statistics.Min(System.SByte[])">
            <summary>
            计算一组 8 位整数的最小值。
            </summary>
            <param name="values">用于计算的值。</param>
            <returns>8 位整数，表示一组 8 位整数的最小值。</returns>
        </member>
        <member name="M:Com.Statistics.Min(System.Byte[])">
            <summary>
            计算一组 8 位无符号整数的最小值。
            </summary>
            <param name="values">用于计算的值。</param>
            <returns>8 位无符号整数，表示一组 8 位无符号整数的最小值。</returns>
        </member>
        <member name="M:Com.Statistics.Min(System.Int16[])">
            <summary>
            计算一组 16 位整数的最小值。
            </summary>
            <param name="values">用于计算的值。</param>
            <returns>16 位整数，表示一组 16 位整数的最小值。</returns>
        </member>
        <member name="M:Com.Statistics.Min(System.UInt16[])">
            <summary>
            计算一组 16 位无符号整数的最小值。
            </summary>
            <param name="values">用于计算的值。</param>
            <returns>16 位无符号整数，表示一组 16 位无符号整数的最小值。</returns>
        </member>
        <member name="M:Com.Statistics.Min(System.Int32[])">
            <summary>
            计算一组 32 位整数的最小值。
            </summary>
            <param name="values">用于计算的值。</param>
            <returns>32 位整数，表示一组 32 位整数的最小值。</returns>
        </member>
        <member name="M:Com.Statistics.Min(System.UInt32[])">
            <summary>
            计算一组 32 位无符号整数的最小值。
            </summary>
            <param name="values">用于计算的值。</param>
            <returns>32 位无符号整数，表示一组 32 位无符号整数的最小值。</returns>
        </member>
        <member name="M:Com.Statistics.Min(System.Int64[])">
            <summary>
            计算一组 64 位整数的最小值。
            </summary>
            <param name="values">用于计算的值。</param>
            <returns>64 位整数，表示一组 64 位整数的最小值。</returns>
        </member>
        <member name="M:Com.Statistics.Min(System.UInt64[])">
            <summary>
            计算一组 64 位无符号整数的最小值。
            </summary>
            <param name="values">用于计算的值。</param>
            <returns>64 位无符号整数，表示一组 64 位无符号整数的最小值。</returns>
        </member>
        <member name="M:Com.Statistics.Min(System.Decimal[])">
            <summary>
            计算一组十进制浮点数的最小值。
            </summary>
            <param name="values">用于计算的值。</param>
            <returns>十进制浮点数，表示一组十进制浮点数的最小值。</returns>
        </member>
        <member name="M:Com.Statistics.Min(System.Single[])">
            <summary>
            计算一组单精度浮点数的最小值。
            </summary>
            <param name="values">用于计算的值。</param>
            <returns>单精度浮点数，表示一组单精度浮点数的最小值。</returns>
        </member>
        <member name="M:Com.Statistics.Min(System.Double[])">
            <summary>
            计算一组双精度浮点数的最小值。
            </summary>
            <param name="values">用于计算的值。</param>
            <returns>双精度浮点数，表示一组双精度浮点数的最小值。</returns>
        </member>
        <member name="M:Com.Statistics.Min``1(``0[])">
            <summary>
            计算一组可排序对象的最小值。
            </summary>
            <param name="values">用于计算的值。</param>
            <returns>IComparable 对象，表示一组可排序对象的最小值。</returns>
        </member>
        <member name="M:Com.Statistics.Min(System.IComparable[])">
            <summary>
            计算一组可排序对象的最小值。
            </summary>
            <param name="values">用于计算的值。</param>
            <returns>IComparable 对象，表示一组可排序对象的最小值。</returns>
        </member>
        <member name="M:Com.Statistics.Max(System.SByte[])">
            <summary>
            计算一组 8 位整数的最大值。
            </summary>
            <param name="values">用于计算的值。</param>
            <returns>8 位整数，表示一组 8 位整数的最大值。</returns>
        </member>
        <member name="M:Com.Statistics.Max(System.Byte[])">
            <summary>
            计算一组 8 位无符号整数的最大值。
            </summary>
            <param name="values">用于计算的值。</param>
            <returns>8 位无符号整数，表示一组 8 位无符号整数的最大值。</returns>
        </member>
        <member name="M:Com.Statistics.Max(System.Int16[])">
            <summary>
            计算一组 16 位整数的最大值。
            </summary>
            <param name="values">用于计算的值。</param>
            <returns>16 位整数，表示一组 16 位整数的最大值。</returns>
        </member>
        <member name="M:Com.Statistics.Max(System.UInt16[])">
            <summary>
            计算一组 16 位无符号整数的最大值。
            </summary>
            <param name="values">用于计算的值。</param>
            <returns>16 位无符号整数，表示一组 16 位无符号整数的最大值。</returns>
        </member>
        <member name="M:Com.Statistics.Max(System.Int32[])">
            <summary>
            计算一组 32 位整数的最大值。
            </summary>
            <param name="values">用于计算的值。</param>
            <returns>32 位整数，表示一组 32 位整数的最大值。</returns>
        </member>
        <member name="M:Com.Statistics.Max(System.UInt32[])">
            <summary>
            计算一组 32 位无符号整数的最大值。
            </summary>
            <param name="values">用于计算的值。</param>
            <returns>32 位无符号整数，表示一组 32 位无符号整数的最大值。</returns>
        </member>
        <member name="M:Com.Statistics.Max(System.Int64[])">
            <summary>
            计算一组 64 位整数的最大值。
            </summary>
            <param name="values">用于计算的值。</param>
            <returns>64 位整数，表示一组 64 位整数的最大值。</returns>
        </member>
        <member name="M:Com.Statistics.Max(System.UInt64[])">
            <summary>
            计算一组 64 位无符号整数的最大值。
            </summary>
            <param name="values">用于计算的值。</param>
            <returns>64 位无符号整数，表示一组 64 位无符号整数的最大值。</returns>
        </member>
        <member name="M:Com.Statistics.Max(System.Decimal[])">
            <summary>
            计算一组十进制浮点数的最大值。
            </summary>
            <param name="values">用于计算的值。</param>
            <returns>十进制浮点数，表示一组十进制浮点数的最大值。</returns>
        </member>
        <member name="M:Com.Statistics.Max(System.Single[])">
            <summary>
            计算一组单精度浮点数的最大值。
            </summary>
            <param name="values">用于计算的值。</param>
            <returns>单精度浮点数，表示一组单精度浮点数的最大值。</returns>
        </member>
        <member name="M:Com.Statistics.Max(System.Double[])">
            <summary>
            计算一组双精度浮点数的最大值。
            </summary>
            <param name="values">用于计算的值。</param>
            <returns>双精度浮点数，表示一组双精度浮点数的最大值。</returns>
        </member>
        <member name="M:Com.Statistics.Max``1(``0[])">
            <summary>
            计算一组可排序对象的最大值。
            </summary>
            <param name="values">用于计算的值。</param>
            <returns>IComparable 对象，表示一组可排序对象的最大值。</returns>
        </member>
        <member name="M:Com.Statistics.Max(System.IComparable[])">
            <summary>
            计算一组可排序对象的最大值。
            </summary>
            <param name="values">用于计算的值。</param>
            <returns>IComparable 对象，表示一组可排序对象的最大值。</returns>
        </member>
        <member name="M:Com.Statistics.MinMax(System.SByte[])">
            <summary>
            计算一组 8 位整数的最小值与最大值。
            </summary>
            <param name="values">用于计算的值。</param>
            <returns>(sbyte, sbyte) 元组，表示一组 8 位整数的最小值与最大值。</returns>
        </member>
        <member name="M:Com.Statistics.MinMax(System.Byte[])">
            <summary>
            计算一组 8 位无符号整数的最小值与最大值。
            </summary>
            <param name="values">用于计算的值。</param>
            <returns>(byte, byte) 元组，表示一组 8 位无符号整数的最小值与最大值。</returns>
        </member>
        <member name="M:Com.Statistics.MinMax(System.Int16[])">
            <summary>
            计算一组 16 位整数的最小值与最大值。
            </summary>
            <param name="values">用于计算的值。</param>
            <returns>(short, short) 元组，表示一组 16 位整数的最小值与最大值。</returns>
        </member>
        <member name="M:Com.Statistics.MinMax(System.UInt16[])">
            <summary>
            计算一组 16 位无符号整数的最小值与最大值。
            </summary>
            <param name="values">用于计算的值。</param>
            <returns>(ushort, ushort) 元组，表示一组 16 位无符号整数的最小值与最大值。</returns>
        </member>
        <member name="M:Com.Statistics.MinMax(System.Int32[])">
            <summary>
            计算一组 32 位整数的最小值与最大值。
            </summary>
            <param name="values">用于计算的值。</param>
            <returns>(int, int) 元组，表示一组 32 位整数的最小值与最大值。</returns>
        </member>
        <member name="M:Com.Statistics.MinMax(System.UInt32[])">
            <summary>
            计算一组 32 位无符号整数的最小值与最大值。
            </summary>
            <param name="values">用于计算的值。</param>
            <returns>(uint, uint) 元组，表示一组 32 位无符号整数的最小值与最大值。</returns>
        </member>
        <member name="M:Com.Statistics.MinMax(System.Int64[])">
            <summary>
            计算一组 64 位整数的最小值与最大值。
            </summary>
            <param name="values">用于计算的值。</param>
            <returns>(long, long) 元组，表示一组 64 位整数的最小值与最大值。</returns>
        </member>
        <member name="M:Com.Statistics.MinMax(System.UInt64[])">
            <summary>
            计算一组 64 位无符号整数的最小值与最大值。
            </summary>
            <param name="values">用于计算的值。</param>
            <returns>(ulong, ulong) 元组，表示一组 64 位无符号整数的最小值与最大值。</returns>
        </member>
        <member name="M:Com.Statistics.MinMax(System.Decimal[])">
            <summary>
            计算一组十进制浮点数的最小值与最大值。
            </summary>
            <param name="values">用于计算的值。</param>
            <returns>(decimal, decimal) 元组，表示一组十进制浮点数的最小值与最大值。</returns>
        </member>
        <member name="M:Com.Statistics.MinMax(System.Single[])">
            <summary>
            计算一组单精度浮点数的最小值与最大值。
            </summary>
            <param name="values">用于计算的值。</param>
            <returns>(float, float) 元组，表示一组单精度浮点数的最小值与最大值。</returns>
        </member>
        <member name="M:Com.Statistics.MinMax(System.Double[])">
            <summary>
            计算一组双精度浮点数的最小值与最大值。
            </summary>
            <param name="values">用于计算的值。</param>
            <returns>(double, double) 元组，表示一组双精度浮点数的最小值与最大值。</returns>
        </member>
        <member name="M:Com.Statistics.MinMax``1(``0[])">
            <summary>
            计算一组可排序对象的最小值与最大值。
            </summary>
            <param name="values">用于计算的值。</param>
            <returns>(IComparable, IComparable) 元组，表示一组可排序对象的最小值与最大值。</returns>
        </member>
        <member name="M:Com.Statistics.MinMax(System.IComparable[])">
            <summary>
            计算一组可排序对象的最小值与最大值。
            </summary>
            <param name="values">用于计算的值。</param>
            <returns>(IComparable, IComparable) 元组，表示一组可排序对象的最小值与最大值。</returns>
        </member>
        <member name="M:Com.Statistics.Range(System.SByte[])">
            <summary>
            计算一组 8 位整数的极差。
            </summary>
            <param name="values">用于计算的值。</param>
            <returns>32 位整数，表示一组 8 位整数的极差。</returns>
        </member>
        <member name="M:Com.Statistics.Range(System.Byte[])">
            <summary>
            计算一组 8 位无符号整数的极差。
            </summary>
            <param name="values">用于计算的值。</param>
            <returns>32 位整数，表示一组 8 位无符号整数的极差。</returns>
        </member>
        <member name="M:Com.Statistics.Range(System.Int16[])">
            <summary>
            计算一组 16 位整数的极差。
            </summary>
            <param name="values">用于计算的值。</param>
            <returns>32 位整数，表示一组 16 位整数的极差。</returns>
        </member>
        <member name="M:Com.Statistics.Range(System.UInt16[])">
            <summary>
            计算一组 16 位无符号整数的极差。
            </summary>
            <param name="values">用于计算的值。</param>
            <returns>32 位整数，表示一组 16 位无符号整数的极差。</returns>
        </member>
        <member name="M:Com.Statistics.Range(System.Int32[])">
            <summary>
            计算一组 32 位整数的极差。
            </summary>
            <param name="values">用于计算的值。</param>
            <returns>32 位整数，表示一组 32 位整数的极差。</returns>
        </member>
        <member name="M:Com.Statistics.Range(System.UInt32[])">
            <summary>
            计算一组 32 位无符号整数的极差。
            </summary>
            <param name="values">用于计算的值。</param>
            <returns>64 位整数，表示一组 32 位无符号整数的极差。</returns>
        </member>
        <member name="M:Com.Statistics.Range(System.Int64[])">
            <summary>
            计算一组 64 位整数的极差。
            </summary>
            <param name="values">用于计算的值。</param>
            <returns>64 位整数，表示一组 64 位整数的极差。</returns>
        </member>
        <member name="M:Com.Statistics.Range(System.UInt64[])">
            <summary>
            计算一组 64 位无符号整数的极差。
            </summary>
            <param name="values">用于计算的值。</param>
            <returns>双精度浮点数，表示一组 64 位无符号整数的极差。</returns>
        </member>
        <member name="M:Com.Statistics.Range(System.Decimal[])">
            <summary>
            计算一组十进制浮点数的极差。
            </summary>
            <param name="values">用于计算的值。</param>
            <returns>十进制浮点数，表示一组十进制浮点数的极差。</returns>
        </member>
        <member name="M:Com.Statistics.Range(System.Single[])">
            <summary>
            计算一组单精度浮点数的极差。
            </summary>
            <param name="values">用于计算的值。</param>
            <returns>单精度浮点数，表示一组单精度浮点数的极差。</returns>
        </member>
        <member name="M:Com.Statistics.Range(System.Double[])">
            <summary>
            计算一组双精度浮点数的极差。
            </summary>
            <param name="values">用于计算的值。</param>
            <returns>双精度浮点数，表示一组双精度浮点数的极差。</returns>
        </member>
        <member name="M:Com.Statistics.Sum(System.SByte[])">
            <summary>
            计算一组 8 位整数的求和。
            </summary>
            <param name="values">用于计算的值。</param>
            <returns>32 位整数，表示一组 8 位整数的求和。</returns>
        </member>
        <member name="M:Com.Statistics.Sum(System.Byte[])">
            <summary>
            计算一组 8 位无符号整数的求和。
            </summary>
            <param name="values">用于计算的值。</param>
            <returns>32 位整数，表示一组 8 位无符号整数的求和。</returns>
        </member>
        <member name="M:Com.Statistics.Sum(System.Int16[])">
            <summary>
            计算一组 16 位整数的求和。
            </summary>
            <param name="values">用于计算的值。</param>
            <returns>32 位整数，表示一组 16 位整数的求和。</returns>
        </member>
        <member name="M:Com.Statistics.Sum(System.UInt16[])">
            <summary>
            计算一组 16 位无符号整数的求和。
            </summary>
            <param name="values">用于计算的值。</param>
            <returns>32 位整数，表示一组 16 位无符号整数的求和。</returns>
        </member>
        <member name="M:Com.Statistics.Sum(System.Int32[])">
            <summary>
            计算一组 32 位整数的求和。
            </summary>
            <param name="values">用于计算的值。</param>
            <returns>32 位整数，表示一组 32 位整数的求和。</returns>
        </member>
        <member name="M:Com.Statistics.Sum(System.UInt32[])">
            <summary>
            计算一组 32 位无符号整数的求和。
            </summary>
            <param name="values">用于计算的值。</param>
            <returns>64 位整数，表示一组 32 位无符号整数的求和。</returns>
        </member>
        <member name="M:Com.Statistics.Sum(System.Int64[])">
            <summary>
            计算一组 64 位整数的求和。
            </summary>
            <param name="values">用于计算的值。</param>
            <returns>64 位整数，表示一组 64 位整数的求和。</returns>
        </member>
        <member name="M:Com.Statistics.Sum(System.UInt64[])">
            <summary>
            计算一组 64 位无符号整数的求和。
            </summary>
            <param name="values">用于计算的值。</param>
            <returns>双精度浮点数，表示一组 64 位无符号整数的求和。</returns>
        </member>
        <member name="M:Com.Statistics.Sum(System.Decimal[])">
            <summary>
            计算一组十进制浮点数的求和。
            </summary>
            <param name="values">用于计算的值。</param>
            <returns>十进制浮点数，表示一组十进制浮点数的求和。</returns>
        </member>
        <member name="M:Com.Statistics.Sum(System.Single[])">
            <summary>
            计算一组单精度浮点数的求和。
            </summary>
            <param name="values">用于计算的值。</param>
            <returns>单精度浮点数，表示一组单精度浮点数的求和。</returns>
        </member>
        <member name="M:Com.Statistics.Sum(System.Double[])">
            <summary>
            计算一组双精度浮点数的求和。
            </summary>
            <param name="values">用于计算的值。</param>
            <returns>双精度浮点数，表示一组双精度浮点数的求和。</returns>
        </member>
        <member name="M:Com.Statistics.Average(System.SByte[])">
            <summary>
            计算一组 8 位整数的平均值。
            </summary>
            <param name="values">用于计算的值。</param>
            <returns>双精度浮点数，表示一组 8 位整数的平均值。</returns>
        </member>
        <member name="M:Com.Statistics.Average(System.Byte[])">
            <summary>
            计算一组 8 位无符号整数的平均值。
            </summary>
            <param name="values">用于计算的值。</param>
            <returns>双精度浮点数，表示一组 8 位无符号整数的平均值。</returns>
        </member>
        <member name="M:Com.Statistics.Average(System.Int16[])">
            <summary>
            计算一组 16 位整数的平均值。
            </summary>
            <param name="values">用于计算的值。</param>
            <returns>双精度浮点数，表示一组 16 位整数的平均值。</returns>
        </member>
        <member name="M:Com.Statistics.Average(System.UInt16[])">
            <summary>
            计算一组 16 位无符号整数的平均值。
            </summary>
            <param name="values">用于计算的值。</param>
            <returns>双精度浮点数，表示一组 16 位无符号整数的平均值。</returns>
        </member>
        <member name="M:Com.Statistics.Average(System.Int32[])">
            <summary>
            计算一组 32 位整数的平均值。
            </summary>
            <param name="values">用于计算的值。</param>
            <returns>双精度浮点数，表示一组 32 位整数的平均值。</returns>
        </member>
        <member name="M:Com.Statistics.Average(System.UInt32[])">
            <summary>
            计算一组 32 位无符号整数的平均值。
            </summary>
            <param name="values">用于计算的值。</param>
            <returns>双精度浮点数，表示一组 32 位无符号整数的平均值。</returns>
        </member>
        <member name="M:Com.Statistics.Average(System.Int64[])">
            <summary>
            计算一组 64 位整数的平均值。
            </summary>
            <param name="values">用于计算的值。</param>
            <returns>双精度浮点数，表示一组 64 位整数的平均值。</returns>
        </member>
        <member name="M:Com.Statistics.Average(System.UInt64[])">
            <summary>
            计算一组 64 位无符号整数的平均值。
            </summary>
            <param name="values">用于计算的值。</param>
            <returns>双精度浮点数，表示一组 64 位无符号整数的平均值。</returns>
        </member>
        <member name="M:Com.Statistics.Average(System.Decimal[])">
            <summary>
            计算一组十进制浮点数的平均值。
            </summary>
            <param name="values">用于计算的值。</param>
            <returns>十进制浮点数，表示一组十进制浮点数的平均值。</returns>
        </member>
        <member name="M:Com.Statistics.Average(System.Single[])">
            <summary>
            计算一组单精度浮点数的平均值。
            </summary>
            <param name="values">用于计算的值。</param>
            <returns>单精度浮点数，表示一组单精度浮点数的平均值。</returns>
        </member>
        <member name="M:Com.Statistics.Average(System.Double[])">
            <summary>
            计算一组双精度浮点数的平均值。
            </summary>
            <param name="values">用于计算的值。</param>
            <returns>双精度浮点数，表示一组双精度浮点数的平均值。</returns>
        </member>
        <member name="M:Com.Statistics.MinMaxAverage(System.SByte[])">
            <summary>
            计算一组 8 位整数的最小值、最大值与平均值。
            </summary>
            <param name="values">用于计算的值。</param>
            <returns>(sbyte, sbyte, double) 元组，表示一组 8 位整数的最小值、最大值与平均值。</returns>
        </member>
        <member name="M:Com.Statistics.MinMaxAverage(System.Byte[])">
            <summary>
            计算一组 8 位无符号整数的最小值、最大值与平均值。
            </summary>
            <param name="values">用于计算的值。</param>
            <returns>(byte, byte, double) 元组，表示一组 8 位无符号整数的最小值、最大值与平均值。</returns>
        </member>
        <member name="M:Com.Statistics.MinMaxAverage(System.Int16[])">
            <summary>
            计算一组 16 位整数的最小值、最大值与平均值。
            </summary>
            <param name="values">用于计算的值。</param>
            <returns>(short, short, double) 元组，表示一组 16 位整数的最小值、最大值与平均值。</returns>
        </member>
        <member name="M:Com.Statistics.MinMaxAverage(System.UInt16[])">
            <summary>
            计算一组 16 位无符号整数的最小值、最大值与平均值。
            </summary>
            <param name="values">用于计算的值。</param>
            <returns>(ushort, ushort, double) 元组，表示一组 16 位无符号整数的最小值、最大值与平均值。</returns>
        </member>
        <member name="M:Com.Statistics.MinMaxAverage(System.Int32[])">
            <summary>
            计算一组 32 位整数的最小值、最大值与平均值。
            </summary>
            <param name="values">用于计算的值。</param>
            <returns>(int, int, double) 元组，表示一组 32 位整数的最小值、最大值与平均值。</returns>
        </member>
        <member name="M:Com.Statistics.MinMaxAverage(System.UInt32[])">
            <summary>
            计算一组 32 位无符号整数的最小值、最大值与平均值。
            </summary>
            <param name="values">用于计算的值。</param>
            <returns>(uint, uint, double) 元组，表示一组 32 位无符号整数的最小值、最大值与平均值。</returns>
        </member>
        <member name="M:Com.Statistics.MinMaxAverage(System.Int64[])">
            <summary>
            计算一组 64 位整数的最小值、最大值与平均值。
            </summary>
            <param name="values">用于计算的值。</param>
            <returns>(long, long, double) 元组，表示一组 64 位整数的最小值、最大值与平均值。</returns>
        </member>
        <member name="M:Com.Statistics.MinMaxAverage(System.UInt64[])">
            <summary>
            计算一组 64 位无符号整数的最小值、最大值与平均值。
            </summary>
            <param name="values">用于计算的值。</param>
            <returns>(ulong, ulong, double) 元组，表示一组 64 位无符号整数的最小值、最大值与平均值。</returns>
        </member>
        <member name="M:Com.Statistics.MinMaxAverage(System.Decimal[])">
            <summary>
            计算一组十进制浮点数的最小值、最大值与平均值。
            </summary>
            <param name="values">用于计算的值。</param>
            <returns>(decimal, decimal, double) 元组，表示一组十进制浮点数的最小值、最大值与平均值。</returns>
        </member>
        <member name="M:Com.Statistics.MinMaxAverage(System.Single[])">
            <summary>
            计算一组单精度浮点数的最小值、最大值与平均值。
            </summary>
            <param name="values">用于计算的值。</param>
            <returns>(float, float, double) 元组，表示一组单精度浮点数的最小值、最大值与平均值。</returns>
        </member>
        <member name="M:Com.Statistics.MinMaxAverage(System.Double[])">
            <summary>
            计算一组双精度浮点数的最小值、最大值与平均值。
            </summary>
            <param name="values">用于计算的值。</param>
            <returns>(double, double, double) 元组，表示一组双精度浮点数的最小值、最大值与平均值。</returns>
        </member>
        <member name="M:Com.Statistics.Deviation(System.Double[])">
            <summary>
            计算一组双精度浮点数的方差。
            </summary>
            <param name="values">用于计算的值。</param>
            <returns>双精度浮点数，表示一组双精度浮点数的方差。</returns>
        </member>
        <member name="M:Com.Statistics.SampleDeviation(System.Double[])">
            <summary>
            计算一组双精度浮点数的样本方差。
            </summary>
            <param name="values">用于计算的值。</param>
            <returns>双精度浮点数，表示一组双精度浮点数的样本方差。</returns>
        </member>
        <member name="M:Com.Statistics.StandardDeviation(System.Double[])">
            <summary>
            计算一组双精度浮点数的标准差。
            </summary>
            <param name="values">用于计算的值。</param>
            <returns>双精度浮点数，表示一组双精度浮点数的标准差。</returns>
        </member>
        <member name="M:Com.Statistics.SampleStandardDeviation(System.Double[])">
            <summary>
            计算一组双精度浮点数的样本标准差。
            </summary>
            <param name="values">用于计算的值。</param>
            <returns>双精度浮点数，表示一组双精度浮点数的样本标准差。</returns>
        </member>
        <member name="T:Com.TimeSpanX">
            <summary>
            表示一个时间间隔。
            </summary>
        </member>
        <member name="M:Com.TimeSpanX.#ctor(System.Decimal)">
            <summary>
            使用十进制浮点数表示的时间间隔的总毫秒数初始化 TimespanX 结构的新实例。
            </summary>
            <param name="totalMilliseconds">十进制浮点数表示的时间间隔的总毫秒数。</param>
        </member>
        <member name="M:Com.TimeSpanX.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            使用指定的小时数、分钟数与秒数初始化 TimespanX 结构的新实例。
            </summary>
            <param name="hours">32 位整数表示的小时数。</param>
            <param name="minutes">32 位整数表示的分钟数。</param>
            <param name="seconds">32 位整数表示的秒数。</param>
        </member>
        <member name="M:Com.TimeSpanX.#ctor(System.Int64,System.Int32,System.Int32,System.Int32)">
            <summary>
            使用指定的天数、小时数、分钟数与秒数初始化 TimespanX 结构的新实例。
            </summary>
            <param name="days">32 位整数表示的天数。</param>
            <param name="hours">32 位整数表示的小时数。</param>
            <param name="minutes">32 位整数表示的分钟数。</param>
            <param name="seconds">32 位整数表示的秒数。</param>
        </member>
        <member name="M:Com.TimeSpanX.#ctor(System.Int64,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            使用指定的天数、小时数、分钟数、秒数与毫秒数初始化 TimespanX 结构的新实例。
            </summary>
            <param name="days">32 位整数表示的天数。</param>
            <param name="hours">32 位整数表示的小时数。</param>
            <param name="minutes">32 位整数表示的分钟数。</param>
            <param name="seconds">32 位整数表示的秒数。</param>
            <param name="milliseconds">32 位整数表示的毫秒数。</param>
        </member>
        <member name="M:Com.TimeSpanX.#ctor(System.TimeSpan)">
            <summary>
            使用 TimeSpan 结构初始化 TimeSpanX 结构的新实例。
            </summary>
            <param name="timeSpan">TimeSpan 结构。</param>
        </member>
        <member name="F:Com.TimeSpanX.Zero">
            <summary>
            表示零时间间隔的 TimespanX 结构的实例。
            </summary>
        </member>
        <member name="F:Com.TimeSpanX.MinValue">
            <summary>
            表示时间间隔的最小可能值的 TimespanX 结构的实例。
            </summary>
        </member>
        <member name="F:Com.TimeSpanX.MaxValue">
            <summary>
            表示时间间隔的最大可能值的 TimespanX 结构的实例。
            </summary>
        </member>
        <member name="P:Com.TimeSpanX.IsZero">
            <summary>
            获取表示此 TimespanX 结构是否为零时间间隔的布尔值。
            </summary>
        </member>
        <member name="P:Com.TimeSpanX.IsMinValue">
            <summary>
            获取表示此 TimespanX 结构是否为时间间隔的最小可能值的布尔值。
            </summary>
        </member>
        <member name="P:Com.TimeSpanX.IsMaxValue">
            <summary>
            获取表示此 TimespanX 结构是否为时间间隔的最大可能值的布尔值。
            </summary>
        </member>
        <member name="P:Com.TimeSpanX.Days">
            <summary>
            获取此 TimespanX 结构的天数。
            </summary>
        </member>
        <member name="P:Com.TimeSpanX.Hours">
            <summary>
            获取此 TimespanX 结构的小时数。
            </summary>
        </member>
        <member name="P:Com.TimeSpanX.Minutes">
            <summary>
            获取此 TimespanX 结构的分钟数。
            </summary>
        </member>
        <member name="P:Com.TimeSpanX.Seconds">
            <summary>
            获取此 TimespanX 结构的秒数。
            </summary>
        </member>
        <member name="P:Com.TimeSpanX.Milliseconds">
            <summary>
            获取此 TimespanX 结构的毫秒数。
            </summary>
        </member>
        <member name="P:Com.TimeSpanX.TotalDays">
            <summary>
            获取或设置此 TimespanX 结构的总天数。
            </summary>
        </member>
        <member name="P:Com.TimeSpanX.TotalHours">
            <summary>
            获取或设置此 TimespanX 结构的总小时数。
            </summary>
        </member>
        <member name="P:Com.TimeSpanX.TotalMinutes">
            <summary>
            获取或设置此 TimespanX 结构的总分钟数。
            </summary>
        </member>
        <member name="P:Com.TimeSpanX.TotalSeconds">
            <summary>
            获取或设置此 TimespanX 结构的总秒数。
            </summary>
        </member>
        <member name="P:Com.TimeSpanX.TotalMilliseconds">
            <summary>
            获取或设置此 TimespanX 结构的总毫秒数。
            </summary>
        </member>
        <member name="M:Com.TimeSpanX.Equals(System.Object)">
            <summary>
            判断此 TimeSpanX 结构是否与指定的对象相等。
            </summary>
            <param name="obj">用于比较的对象。</param>
            <returns>布尔值，表示此 TimeSpanX 结构是否与指定的对象相等。</returns>
        </member>
        <member name="M:Com.TimeSpanX.GetHashCode">
            <summary>
            返回此 TimeSpanX 结构的哈希代码。
            </summary>
            <returns>32 位整数，表示此 TimeSpanX 结构的哈希代码。</returns>
        </member>
        <member name="M:Com.TimeSpanX.ToString">
            <summary>
            将此 TimeSpanX 结构转换为字符串。
            </summary>
            <returns>字符串，表示此 TimeSpanX 结构的字符串形式。</returns>
        </member>
        <member name="M:Com.TimeSpanX.Equals(Com.TimeSpanX)">
            <summary>
            判断此 TimeSpanX 结构是否与指定的 TimeSpanX 结构相等。
            </summary>
            <param name="timeSpan">用于比较的 TimeSpanX 结构。</param>
            <returns>布尔值，表示此 TimeSpanX
            结构是否与指定的 TimeSpanX 结构相等。</returns>
        </member>
        <member name="M:Com.TimeSpanX.CompareTo(System.Object)">
            <summary>
            将此 TimeSpanX 结构与指定的对象进行次序比较。
            </summary>
            <param name="obj">用于比较的对象。</param>
            <returns>32 位整数，表示将此 TimeSpanX 结构与指定的对象进行次序比较得到的结果。</returns>
        </member>
        <member name="M:Com.TimeSpanX.CompareTo(Com.TimeSpanX)">
            <summary>
            将此 TimeSpanX 结构与指定的 TimeSpanX 结构进行次序比较。
            </summary>
            <param name="timeSpan">用于比较的 TimeSpanX 结构。</param>
            <returns>32 位整数，表示将此 TimeSpanX 结构与指定的 TimeSpanX 结构进行次序比较得到的结果。</returns>
        </member>
        <member name="M:Com.TimeSpanX.Add(Com.TimeSpanX)">
            <summary>
            返回将此 TimeSpanX 结构与 TimeSpanX 结构相加得到的 TimeSpanX 结构的新实例。
            </summary>
            <param name="timeSpan">TimeSpanX 结构，用于相加到此 TimeSpanX 结构。</param>
            <returns>TimeSpanX 结构，表示将此 TimeSpanX 结构与 TimeSpanX 结构相加得到的结果。</returns>
        </member>
        <member name="M:Com.TimeSpanX.Add(System.TimeSpan)">
            <summary>
            返回将此 TimeSpanX 结构与 TimeSpan 结构相加得到的 TimeSpanX 结构的新实例。
            </summary>
            <param name="timeSpan">TimeSpan 结构，用于相加到此 TimeSpanX 结构。</param>
            <returns>TimeSpanX 结构，表示将此 TimeSpanX 结构与 TimeSpan 结构相加得到的结果。</returns>
        </member>
        <member name="M:Com.TimeSpanX.AddDays(System.Decimal)">
            <summary>
            返回将此 TimeSpanX 结构加上若干天得到的 TimeSpanX 结构的新实例。
            </summary>
            <param name="days">十进制浮点数表示的天数，用于相加到此 TimeSpanX 结构。</param>
            <returns>TimeSpanX 结构，表示将此 TimeSpanX 结构加上若干天得到的结果。</returns>
        </member>
        <member name="M:Com.TimeSpanX.AddDays(System.Double)">
            <summary>
            返回将此 TimeSpanX 结构加上若干天得到的 TimeSpanX 结构的新实例。
            </summary>
            <param name="days">双精度浮点数表示的天数，用于相加到此 TimeSpanX 结构。</param>
            <returns>TimeSpanX 结构，表示将此 TimeSpanX 结构加上若干天得到的结果。</returns>
        </member>
        <member name="M:Com.TimeSpanX.AddHours(System.Decimal)">
            <summary>
            返回将此 TimeSpanX 结构加上若干小时得到的 TimeSpanX 结构的新实例。
            </summary>
            <param name="hours">十进制浮点数表示的小时数，用于相加到此 TimeSpanX 结构。</param>
            <returns>TimeSpanX 结构，表示将此 TimeSpanX 结构加上若干小时得到的结果。</returns>
        </member>
        <member name="M:Com.TimeSpanX.AddHours(System.Double)">
            <summary>
            返回将此 TimeSpanX 结构加上若干小时得到的 TimeSpanX 结构的新实例。
            </summary>
            <param name="hours">双精度浮点数表示的小时数，用于相加到此 TimeSpanX 结构。</param>
            <returns>TimeSpanX 结构，表示将此 TimeSpanX 结构加上若干小时得到的结果。</returns>
        </member>
        <member name="M:Com.TimeSpanX.AddMinutes(System.Decimal)">
            <summary>
            返回将此 TimeSpanX 结构加上若干分钟得到的 TimeSpanX 结构的新实例。
            </summary>
            <param name="minutes">十进制浮点数表示的分钟数，用于相加到此 TimeSpanX 结构。</param>
            <returns>TimeSpanX 结构，表示将此 TimeSpanX 结构加上若干分钟得到的结果。</returns>
        </member>
        <member name="M:Com.TimeSpanX.AddMinutes(System.Double)">
            <summary>
            返回将此 TimeSpanX 结构加上若干分钟得到的 TimeSpanX 结构的新实例。
            </summary>
            <param name="minutes">双精度浮点数表示的分钟数，用于相加到此 TimeSpanX 结构。</param>
            <returns>TimeSpanX 结构，表示将此 TimeSpanX 结构加上若干分钟得到的结果。</returns>
        </member>
        <member name="M:Com.TimeSpanX.AddSeconds(System.Decimal)">
            <summary>
            返回将此 TimeSpanX 结构加上若干秒得到的 TimeSpanX 结构的新实例。
            </summary>
            <param name="seconds">十进制浮点数表示的秒数，用于相加到此 TimeSpanX 结构。</param>
            <returns>TimeSpanX 结构，表示将此 TimeSpanX 结构加上若干秒得到的结果。</returns>
        </member>
        <member name="M:Com.TimeSpanX.AddSeconds(System.Double)">
            <summary>
            返回将此 TimeSpanX 结构加上若干秒得到的 TimeSpanX 结构的新实例。
            </summary>
            <param name="seconds">双精度浮点数表示的秒数，用于相加到此 TimeSpanX 结构。</param>
            <returns>TimeSpanX 结构，表示将此 TimeSpanX 结构加上若干秒得到的结果。</returns>
        </member>
        <member name="M:Com.TimeSpanX.AddMilliseconds(System.Decimal)">
            <summary>
            返回将此 TimeSpanX 结构加上若干毫秒得到的 TimeSpanX 结构的新实例。
            </summary>
            <param name="milliseconds">十进制浮点数表示的毫秒数，用于相加到此 TimeSpanX 结构。</param>
            <returns>TimeSpanX 结构，表示将此 TimeSpanX 结构加上若干毫秒得到的结果。</returns>
        </member>
        <member name="M:Com.TimeSpanX.AddMilliseconds(System.Double)">
            <summary>
            返回将此 TimeSpanX 结构加上若干毫秒得到的 TimeSpanX 结构的新实例。
            </summary>
            <param name="milliseconds">双精度浮点数表示的毫秒数，用于相加到此 TimeSpanX 结构。</param>
            <returns>TimeSpanX 结构，表示将此 TimeSpanX 结构加上若干毫秒得到的结果。</returns>
        </member>
        <member name="M:Com.TimeSpanX.Equals(Com.TimeSpanX,Com.TimeSpanX)">
            <summary>
            判断两个 TimeSpanX 结构是否相等。
            </summary>
            <param name="left">用于比较的第一个 TimeSpanX 结构。</param>
            <param name="right">用于比较的第二个 TimeSpanX 结构。</param>
            <returns>布尔值，表示两个 TimeSpanX 结构是否相等。</returns>
        </member>
        <member name="M:Com.TimeSpanX.Compare(Com.TimeSpanX,Com.TimeSpanX)">
            <summary>
            比较两个 TimeSpanX 结构的次序。
            </summary>
            <param name="left">用于比较的第一个 TimeSpanX 结构。</param>
            <param name="right">用于比较的第二个 TimeSpanX 结构。</param>
            <returns>32 位整数，表示将两个 TimeSpanX 结构进行次序比较得到的结果。</returns>
        </member>
        <member name="M:Com.TimeSpanX.op_Equality(Com.TimeSpanX,Com.TimeSpanX)">
            <summary>
            判断两个 TimeSpanX 结构是否表示相同的时刻。
            </summary>
            <param name="left">运算符左侧比较的 TimeSpanX 结构。</param>
            <param name="right">运算符右侧比较的 TimeSpanX 结构。</param>
            <returns>布尔值，表示两个 TimeSpanX 结构是否表示相同的时刻。</returns>
        </member>
        <member name="M:Com.TimeSpanX.op_Inequality(Com.TimeSpanX,Com.TimeSpanX)">
            <summary>
            判断两个 TimeSpanX 结构是否表示不同的时刻。
            </summary>
            <param name="left">运算符左侧比较的 TimeSpanX 结构。</param>
            <param name="right">运算符右侧比较的 TimeSpanX 结构。</param>
            <returns>布尔值，表示两个 TimeSpanX 结构是否表示不同的时刻。</returns>
        </member>
        <member name="M:Com.TimeSpanX.op_LessThan(Com.TimeSpanX,Com.TimeSpanX)">
            <summary>
            判断两个 TimeSpanX 结构表示的时刻是否前者早于后者。
            </summary>
            <param name="left">运算符左侧比较的 TimeSpanX 结构。</param>
            <param name="right">运算符右侧比较的 TimeSpanX 结构。</param>
            <returns>布尔值，表示两个 TimeSpanX 结构表示的时刻是否前者早于后者。</returns>
        </member>
        <member name="M:Com.TimeSpanX.op_GreaterThan(Com.TimeSpanX,Com.TimeSpanX)">
            <summary>
            判断两个 TimeSpanX 结构表示的时刻是否前者晚于后者。
            </summary>
            <param name="left">运算符左侧比较的 TimeSpanX 结构。</param>
            <param name="right">运算符右侧比较的 TimeSpanX 结构。</param>
            <returns>布尔值，表示两个 TimeSpanX 结构表示的时刻是否前者晚于后者。</returns>
        </member>
        <member name="M:Com.TimeSpanX.op_LessThanOrEqual(Com.TimeSpanX,Com.TimeSpanX)">
            <summary>
            判断两个 TimeSpanX 结构表示的时刻是否前者早于或等于后者。
            </summary>
            <param name="left">运算符左侧比较的 TimeSpanX 结构。</param>
            <param name="right">运算符右侧比较的 TimeSpanX 结构。</param>
            <returns>布尔值，表示两个 TimeSpanX 结构表示的时刻是否前者早于或等于后者。</returns>
        </member>
        <member name="M:Com.TimeSpanX.op_GreaterThanOrEqual(Com.TimeSpanX,Com.TimeSpanX)">
            <summary>
            判断两个 TimeSpanX 结构表示的时刻是否前者晚于或等于后者。
            </summary>
            <param name="left">运算符左侧比较的 TimeSpanX 结构。</param>
            <param name="right">运算符右侧比较的 TimeSpanX 结构。</param>
            <returns>布尔值，表示两个 TimeSpanX 结构表示的时刻是否前者晚于或等于后者。</returns>
        </member>
        <member name="M:Com.TimeSpanX.op_UnaryPlus(Com.TimeSpanX)">
            <summary>
            返回在 TimeSpanX 结构前添加正号得到的 TimeSpanX 结构的新实例。
            </summary>
            <param name="timeSpan">运算符右侧的TimeSpanX 结构。</param>
            <returns>TimeSpanX 结构，表示在 TimeSpanX 结构前添加正号得到的结果。</returns>
        </member>
        <member name="M:Com.TimeSpanX.op_UnaryNegation(Com.TimeSpanX)">
            <summary>
            返回在 TimeSpanX 结构前添加负号得到的 TimeSpanX 结构的新实例。
            </summary>
            <param name="timeSpan">运算符右侧的TimeSpanX 结构。</param>
            <returns>TimeSpanX 结构，表示在 TimeSpanX 结构前添加负号得到的结果。</returns>
        </member>
        <member name="M:Com.TimeSpanX.op_Addition(Com.TimeSpanX,Com.TimeSpanX)">
            <summary>
            返回将 TimeSpanX 结构与 TimeSpanX 结构相加得到的 TimeSpanX 结构的新实例。
            </summary>
            <param name="left">TimeSpanX 结构，表示被加数。</param>
            <param name="right">TimeSpanX 结构，表示加数。</param>
            <returns>TimeSpanX 结构，表示将 TimeSpanX 结构与 TimeSpanX 结构相加得到的结果。</returns>
        </member>
        <member name="M:Com.TimeSpanX.op_Addition(Com.TimeSpanX,System.TimeSpan)">
            <summary>
            返回将 TimeSpanX 结构与 TimeSpan 结构相加得到的 TimeSpanX 结构的新实例。
            </summary>
            <param name="left">TimeSpanX 结构，表示被加数。</param>
            <param name="right">TimeSpan 结构，表示加数。</param>
            <returns>TimeSpanX 结构，表示将 TimeSpanX 结构与 TimeSpan 结构相加得到的结果。</returns>
        </member>
        <member name="M:Com.TimeSpanX.op_Addition(System.TimeSpan,Com.TimeSpanX)">
            <summary>
            返回将 TimeSpan 结构与 TimeSpanX 结构相加得到的 TimeSpanX 结构的新实例。
            </summary>
            <param name="left">TimeSpan 结构，表示被加数。</param>
            <param name="right">TimeSpanX 结构，表示加数。</param>
            <returns>TimeSpanX 结构，表示将 TimeSpan 结构与 TimeSpanX 结构相加得到的结果。</returns>
        </member>
        <member name="M:Com.TimeSpanX.op_Subtraction(Com.TimeSpanX,Com.TimeSpanX)">
            <summary>
            返回将 TimeSpanX 结构与 TimeSpanX 结构相减得到的 TimeSpanX 结构的新实例。
            </summary>
            <param name="left">TimeSpanX 结构，表示被减数。</param>
            <param name="right">TimeSpanX 结构，表示减数。</param>
            <returns>TimeSpanX 结构，表示将 TimeSpanX 结构与 TimeSpanX 结构相减得到的结果。</returns>
        </member>
        <member name="M:Com.TimeSpanX.op_Subtraction(Com.TimeSpanX,System.TimeSpan)">
            <summary>
            返回将 TimeSpanX 结构与 TimeSpan 结构相减得到的 TimeSpanX 结构的新实例。
            </summary>
            <param name="left">TimeSpanX 结构，表示被减数。</param>
            <param name="right">TimeSpan 结构，表示减数。</param>
            <returns>TimeSpanX 结构，表示将 TimeSpanX 结构与 TimeSpan 结构相减得到的结果。</returns>
        </member>
        <member name="M:Com.TimeSpanX.op_Subtraction(System.TimeSpan,Com.TimeSpanX)">
            <summary>
            返回将 TimeSpan 结构与 TimeSpanX 结构相减得到的 TimeSpanX 结构的新实例。
            </summary>
            <param name="left">TimeSpan 结构，表示被减数。</param>
            <param name="right">TimeSpanX 结构，表示减数。</param>
            <returns>TimeSpanX 结构，表示将 TimeSpan 结构与 TimeSpanX 结构相减得到的结果。</returns>
        </member>
        <member name="M:Com.TimeSpanX.op_Implicit(System.TimeSpan)~Com.TimeSpanX">
            <summary>
            将指定的 TimeSpan 结构隐式转换为 TimeSpanX 结构。
            </summary>
            <param name="timeSpan">用于转换的 TimeSpan 结构。</param>
            <returns>TimeSpanX 结构，表示隐式转换的结果。</returns>
        </member>
        <member name="T:Com.Vector">
            <summary>
            以一组有序的双精度浮点数表示的向量。
            </summary>
        </member>
        <member name="T:Com.Vector.Type">
            <summary>
            向量类型。
            </summary>
        </member>
        <member name="F:Com.Vector.Type.ColumnVector">
            <summary>
            列向量。
            </summary>
        </member>
        <member name="F:Com.Vector.Type.RowVector">
            <summary>
            行向量。
            </summary>
        </member>
        <member name="M:Com.Vector.#ctor(Com.VectorType,System.Double[])">
            <summary>
            使用双精度浮点数表示的各基向量方向的分量初始化 Vector 的新实例。
            </summary>
            <param name="type">向量类型。</param>
            <param name="values">各基向量方向的分量。</param>
        </member>
        <member name="M:Com.Vector.#ctor(Com.Vector.Type,System.Double[])">
            <summary>
            使用双精度浮点数表示的各基向量方向的分量初始化 Vector 的新实例。
            </summary>
            <param name="type">向量类型。</param>
            <param name="values">各基向量方向的分量。</param>
        </member>
        <member name="M:Com.Vector.#ctor(System.Double[])">
            <summary>
            使用双精度浮点数表示的各基向量方向的分量初始化 Vector 的新实例。
            </summary>
            <param name="values">各基向量方向的分量。</param>
        </member>
        <member name="P:Com.Vector.Item(System.Int32)">
            <summary>
            获取或设置此 Vector 在指定的基向量方向的分量。
            </summary>
            <param name="index">索引。</param>
        </member>
        <member name="P:Com.Vector.Dimension">
            <summary>
            获取此 Vector 的维度。
            </summary>
        </member>
        <member name="P:Com.Vector.IsEmpty">
            <summary>
            获取表示此 Vector 是否为空向量的布尔值。
            </summary>
        </member>
        <member name="P:Com.Vector.IsZero">
            <summary>
            获取表示此 Vector 是否为零向量的布尔值。
            </summary>
        </member>
        <member name="P:Com.Vector.IsColumnVector">
            <summary>
            获取表示此 Vector 是否为列向量的布尔值。
            </summary>
        </member>
        <member name="P:Com.Vector.IsRowVector">
            <summary>
            获取表示此 Vector 是否为行向量的布尔值。
            </summary>
        </member>
        <member name="P:Com.Vector.IsReadOnly">
            <summary>
            获取表示此 Vector 是否只读的布尔值。
            </summary>
        </member>
        <member name="P:Com.Vector.IsFixedSize">
            <summary>
            获取表示此 Vector 是否具有固定的维度的布尔值。
            </summary>
        </member>
        <member name="P:Com.Vector.IsNaN">
            <summary>
            获取表示此 Vector 是否包含非数字分量的布尔值。
            </summary>
        </member>
        <member name="P:Com.Vector.IsInfinity">
            <summary>
            获取表示此 Vector 是否包含无穷大分量的布尔值。
            </summary>
        </member>
        <member name="P:Com.Vector.IsNaNOrInfinity">
            <summary>
            获取表示此 Vector 是否包含非数字或无穷大分量的布尔值。
            </summary>
        </member>
        <member name="P:Com.Vector.Module">
            <summary>
            获取此 Vector 的模。
            </summary>
        </member>
        <member name="P:Com.Vector.ModuleSquared">
            <summary>
            获取此 Vector 的模的平方。
            </summary>
        </member>
        <member name="P:Com.Vector.Opposite">
            <summary>
            获取此 Vector 的相反向量。
            </summary>
        </member>
        <member name="P:Com.Vector.Normalize">
            <summary>
            获取此 Vector 的规范化向量。
            </summary>
        </member>
        <member name="P:Com.Vector.Transport">
            <summary>
            获取此 Vector 的转置向量。
            </summary>
        </member>
        <member name="P:Com.Vector.Empty">
            <summary>
            获取表示空向量的 Vector 的新实例。
            </summary>
        </member>
        <member name="M:Com.Vector.Equals(System.Object)">
            <summary>
            判断此 Vector 是否与指定的对象相等。
            </summary>
            <param name="obj">用于比较的对象。</param>
            <returns>布尔值，表示此 Vector 是否与指定的对象相等。</returns>
        </member>
        <member name="M:Com.Vector.GetHashCode">
            <summary>
            返回此 Vector 的哈希代码。
            </summary>
            <returns>32 位整数，表示此 Vector 的哈希代码。</returns>
        </member>
        <member name="M:Com.Vector.ToString">
            <summary>
            将此 Vector 转换为字符串。
            </summary>
            <returns>字符串，表示此 Vector 的字符串形式。</returns>
        </member>
        <member name="M:Com.Vector.Equals(Com.Vector)">
            <summary>
            判断此 Vector 是否与指定的 Vector 对象相等。
            </summary>
            <param name="vector">用于比较的 Vector 对象。</param>
            <returns>布尔值，表示此 Vector 是否与指定的 Vector 对象相等。</returns>
        </member>
        <member name="M:Com.Vector.CompareTo(System.Object)">
            <summary>
            将此 Vector 与指定的对象进行次序比较。
            </summary>
            <param name="obj">用于比较的对象。</param>
            <returns>32 位整数，表示将此 Vector 与指定的对象进行次序比较得到的结果。</returns>
        </member>
        <member name="M:Com.Vector.CompareTo(Com.Vector)">
            <summary>
            将此 Vector 与指定的 Vector 对象进行次序比较。
            </summary>
            <param name="vector">用于比较的 Vector 对象。</param>
            <returns>32 位整数，表示将此 Vector 与指定的 Vector 对象进行次序比较得到的结果。</returns>
        </member>
        <member name="M:Com.Vector.Copy">
            <summary>
            获取此 Vector 的副本。
            </summary>
            <returns>Vector 对象，表示此 Vector 的副本。</returns>
        </member>
        <member name="M:Com.Vector.IndexOf(System.Double)">
            <summary>
            遍历此 Vector 的所有分量并返回第一个与指定值相等的分量的索引。
            </summary>
            <param name="item">用于检索的值。</param>
            <returns>32 位整数，表示第一个与指定值相等的分量的索引。</returns>
        </member>
        <member name="M:Com.Vector.IndexOf(System.Double,System.Int32)">
            <summary>
            从指定的索引开始遍历此 Vector 的所有分量并返回第一个与指定值相等的分量的索引。
            </summary>
            <param name="item">用于检索的值。</param>
            <param name="startIndex">起始索引。</param>
            <returns>32 位整数，表示第一个与指定值相等的分量的索引。</returns>
        </member>
        <member name="M:Com.Vector.IndexOf(System.Double,System.Int32,System.Int32)">
            <summary>
            从指定的索引开始遍历此 Vector 指定数量的分量并返回第一个与指定值相等的分量的索引。
            </summary>
            <param name="item">用于检索的值。</param>
            <param name="startIndex">起始索引。</param>
            <param name="count">遍历的分量数量。</param>
            <returns>32 位整数，表示第一个与指定值相等的分量的索引。</returns>
        </member>
        <member name="M:Com.Vector.LastIndexOf(System.Double)">
            <summary>
            逆序遍历此 Vector 的所有分量并返回第一个与指定值相等的分量的索引。
            </summary>
            <param name="item">用于检索的值。</param>
            <returns>32 位整数，表示第一个与指定值相等的分量的索引。</returns>
        </member>
        <member name="M:Com.Vector.LastIndexOf(System.Double,System.Int32)">
            <summary>
            从指定的索引开始逆序遍历此 Vector 的所有分量并返回第一个与指定值相等的分量的索引。
            </summary>
            <param name="item">用于检索的值。</param>
            <param name="startIndex">起始索引。</param>
            <returns>32 位整数，表示第一个与指定值相等的分量的索引。</returns>
        </member>
        <member name="M:Com.Vector.LastIndexOf(System.Double,System.Int32,System.Int32)">
            <summary>
            从指定的索引开始逆序遍历此 Vector 指定数量的分量并返回第一个与指定值相等的分量的索引。
            </summary>
            <param name="item">用于检索的值。</param>
            <param name="startIndex">起始索引。</param>
            <param name="count">遍历的分量数量。</param>
            <returns>32 位整数，表示第一个与指定值相等的分量的索引。</returns>
        </member>
        <member name="M:Com.Vector.Contains(System.Double)">
            <summary>
            遍历此 Vector 的所有分量并返回表示是否存在与指定值相等的分量的布尔值。
            </summary>
            <param name="item">用于检索的值。</param>
            <returns>布尔值，表示是否存在与指定值相等的分量。</returns>
        </member>
        <member name="M:Com.Vector.ToArray">
            <summary>
            将此 Vector 转换为双精度浮点数数组。
            </summary>
            <returns>双精度浮点数数组，数组元素表示此 Vector 的分量。</returns>
        </member>
        <member name="M:Com.Vector.ToList">
            <summary>
            将此 Vector 转换为双精度浮点数列表。
            </summary>
            <returns>双精度浮点数列表，列表元素表示此 Vector 的分量。</returns>
        </member>
        <member name="M:Com.Vector.ToMatrix">
            <summary>
            返回将此 Vector 转换为矩阵的 Matrix 的新实例。
            </summary>
            <returns>Matrix 对象，表示将此 Vector 转换为矩阵的结果。</returns>
        </member>
        <member name="M:Com.Vector.CopyTo(System.Double[],System.Int32)">
            <summary>
            将此 Vector 的所有分量复制到双精度浮点数数组中。
            </summary>
            <param name="array">双精度浮点数数组。</param>
            <param name="index">双精度浮点数数组的起始索引。</param>
        </member>
        <member name="M:Com.Vector.ToSpherical">
            <summary>
            返回将此 Vector 表示的直角坐标系坐标转换为极坐标系、球坐标系或超球坐标系坐标的新实例。
            </summary>
            <returns>Vector 对象，表示将此 Vector 表示的直角坐标系坐标转换为极坐标系、球坐标系或超球坐标系坐标得到的结果。</returns>
        </member>
        <member name="M:Com.Vector.ToCartesian">
            <summary>
            返回将此 Vector 表示的极坐标系、球坐标系或超球坐标系坐标转换为直角坐标系坐标的新实例。
            </summary>
            <returns>Vector 对象，表示将此 Vector 表示的极坐标系、球坐标系或超球坐标系坐标转换为直角坐标系坐标得到的结果。</returns>
        </member>
        <member name="M:Com.Vector.DistanceFrom(Com.Vector)">
            <summary>
            返回此 Vector 与指定的 Vector 对象之间的距离。
            </summary>
            <param name="vector">Vector 对象，表示另一个向量。</param>
            <returns>双精度浮点数，表示此 Vector 与指定的 Vector 对象之间的距离。</returns>
        </member>
        <member name="M:Com.Vector.AngleFrom(Com.Vector)">
            <summary>
            返回此 Vector 与指定的 Vector 对象之间的夹角（弧度）。
            </summary>
            <param name="vector">Vector 对象，表示另一个向量。</param>
            <returns>双精度浮点数，表示此 Vector 与指定的 Vector 对象之间的夹角（弧度）。</returns>
        </member>
        <member name="M:Com.Vector.Offset(System.Int32,System.Double)">
            <summary>
            按双精度浮点数表示的位移将此 Vector 在指定的基向量方向的分量平移指定的量。
            </summary>
            <param name="index">索引，用于指定平移的分量所在方向的基向量。</param>
            <param name="d">双精度浮点数表示的位移。</param>
        </member>
        <member name="M:Com.Vector.Offset(System.Double)">
            <summary>
            按双精度浮点数表示的位移将此 Vector 的所有分量平移指定的量。
            </summary>
            <param name="d">双精度浮点数表示的位移。</param>
        </member>
        <member name="M:Com.Vector.Offset(Com.Vector)">
            <summary>
            按 Vector 对象表示的位移将此 Vector 平移指定的量。
            </summary>
            <param name="vector">Vector 对象表示的位移。</param>
        </member>
        <member name="M:Com.Vector.OffsetCopy(System.Int32,System.Double)">
            <summary>
            返回按双精度浮点数表示的位移将此 Vector 在指定的基向量方向的分量平移指定的量的新实例。
            </summary>
            <param name="index">索引，用于指定平移的分量所在方向的基向量。</param>
            <param name="d">双精度浮点数表示的位移。</param>
            <returns>Vector 对象，表示按双精度浮点数表示的位移将此 Vector 在指定的基向量方向的分量平移指定的量得到的结果。</returns>
        </member>
        <member name="M:Com.Vector.OffsetCopy(System.Double)">
            <summary>
            返回按双精度浮点数表示的位移将此 Vector 的所有分量平移指定的量的新实例。
            </summary>
            <param name="d">双精度浮点数表示的位移。</param>
            <returns>Vector 对象，表示按双精度浮点数表示的位移将此 Vector 的所有分量平移指定的量得到的结果。</returns>
        </member>
        <member name="M:Com.Vector.OffsetCopy(Com.Vector)">
            <summary>
            返回按 Vector 对象表示的位移将此 Vector 平移指定的量的新实例。
            </summary>
            <param name="vector">Vector 对象表示的位移。</param>
            <returns>Vector 对象，表示按 Vector 对象表示的位移将此 Vector 平移指定的量得到的结果。</returns>
        </member>
        <member name="M:Com.Vector.Scale(System.Int32,System.Double)">
            <summary>
            按双精度浮点数表示的缩放因数将此 Vector 在指定的基向量方向的分量缩放指定的倍数。
            </summary>
            <param name="index">索引，用于指定缩放的分量所在方向的基向量。</param>
            <param name="s">双精度浮点数表示的缩放因数。</param>
        </member>
        <member name="M:Com.Vector.Scale(System.Double)">
            <summary>
            按双精度浮点数表示的缩放因数将此 Vector 的所有分量缩放指定的倍数。
            </summary>
            <param name="s">双精度浮点数表示的缩放因数。</param>
        </member>
        <member name="M:Com.Vector.Scale(Com.Vector)">
            <summary>
            按 Vector 对象表示的缩放因数将此 Vector 缩放指定的倍数。
            </summary>
            <param name="vector">Vector 对象表示的缩放因数。</param>
        </member>
        <member name="M:Com.Vector.ScaleCopy(System.Int32,System.Double)">
            <summary>
            返回按双精度浮点数表示的缩放因数将此 Vector 在指定的基向量方向的分量缩放指定的倍数的新实例。
            </summary>
            <param name="index">索引，用于指定缩放的分量所在方向的基向量。</param>
            <param name="s">双精度浮点数表示的缩放因数。</param>
            <returns>Vector 对象，表示按双精度浮点数表示的缩放因数将此 Vector 在指定的基向量方向的分量缩放指定的倍数得到的结果。</returns>
        </member>
        <member name="M:Com.Vector.ScaleCopy(System.Double)">
            <summary>
            返回按双精度浮点数表示的缩放因数将此 Vector 的所有分量缩放指定的倍数的新实例。
            </summary>
            <param name="s">双精度浮点数表示的缩放因数。</param>
            <returns>Vector 对象，表示按双精度浮点数表示的缩放因数将此 Vector 的所有分量缩放指定的倍数得到的结果。</returns>
        </member>
        <member name="M:Com.Vector.ScaleCopy(Com.Vector)">
            <summary>
            返回按 Vector 对象表示的缩放因数将此 Vector 缩放指定的倍数的新实例。
            </summary>
            <param name="vector">Vector 对象表示的缩放因数。</param>
            <returns>Vector 对象，表示按 Vector 对象表示的缩放因数将此 Vector 缩放指定的倍数得到的结果。</returns>
        </member>
        <member name="M:Com.Vector.Reflect(System.Int32)">
            <summary>
            将此 Vector 在指定的基向量方向的分量翻转。
            </summary>
            <param name="index">索引，用于指定翻转的分量所在方向的基向量。</param>
        </member>
        <member name="M:Com.Vector.ReflectCopy(System.Int32)">
            <summary>
            返回将此 Vector 在指定的基向量方向的分量翻转的新实例。
            </summary>
            <param name="index">索引，用于指定翻转的分量所在方向的基向量。</param>
            <returns>Vector 对象，表示将此 Vector 在指定的基向量方向的分量翻转得到的结果。</returns>
        </member>
        <member name="M:Com.Vector.Shear(System.Int32,System.Int32,System.Double)">
            <summary>
            按双精度浮点数表示的弧度将此 Vector 错切指定的角度。
            </summary>
            <param name="index1">索引，用于指定与错切方向同向的基向量。</param>
            <param name="index2">索引，用于指定与错切方向共面正交的基向量。</param>
            <param name="angle">双精度浮点数，表示此 Vector 沿索引 index1 指定的基向量方向且共面正交于 index2 指定的基向量方向错切的角度（弧度）。</param>
        </member>
        <member name="M:Com.Vector.ShearCopy(System.Int32,System.Int32,System.Double)">
            <summary>
            返回按双精度浮点数表示的弧度将此 Vector 错切指定的角度的新实例。
            </summary>
            <param name="index1">索引，用于指定与错切方向同向的基向量。</param>
            <param name="index2">索引，用于指定与错切方向共面正交的基向量。</param>
            <param name="angle">双精度浮点数，表示此 Vector 沿索引 index1 指定的基向量方向且共面正交于 index2 指定的基向量方向错切的角度（弧度）。</param>
            <returns>Vector 对象，表示按双精度浮点数表示的弧度将此 Vector 错切指定的角度得到的结果。</returns>
        </member>
        <member name="M:Com.Vector.Rotate(System.Int32,System.Int32,System.Double)">
            <summary>
            按双精度浮点数表示的弧度将此 Vector 旋转指定的角度。
            </summary>
            <param name="index1">索引，用于指定构成旋转轨迹所在平面的第一个基向量。</param>
            <param name="index2">索引，用于指定构成旋转轨迹所在平面的第二个基向量。</param>
            <param name="angle">双精度浮点数，表示此 Vector 绕索引 index1 与 index2 指定的基向量构成的平面的法向空间旋转的角度（弧度）（以索引 index1 指定的基向量为 0 弧度，从索引 index1 指定的基向量指向索引 index2 指定的基向量的方向为正方向）。</param>
        </member>
        <member name="M:Com.Vector.RotateCopy(System.Int32,System.Int32,System.Double)">
            <summary>
            返回按双精度浮点数表示的弧度将此 Vector 旋转指定的角度的新实例。
            </summary>
            <param name="index1">索引，用于指定构成旋转轨迹所在平面的第一个基向量。</param>
            <param name="index2">索引，用于指定构成旋转轨迹所在平面的第二个基向量。</param>
            <param name="angle">双精度浮点数，表示此 Vector 绕索引 index1 与 index2 指定的基向量构成的平面的法向空间旋转的角度（弧度）（以索引 index1 指定的基向量为 0 弧度，从索引 index1 指定的基向量指向索引 index2 指定的基向量的方向为正方向）。</param>
            <returns>Vector 对象，表示按双精度浮点数表示的弧度将此 Vector 旋转指定的角度得到的结果。</returns>
        </member>
        <member name="M:Com.Vector.MatrixTransform(Com.Matrix)">
            <summary>
            按 Matrix 对象表示的仿射矩阵将此 Vector 进行仿射变换。
            </summary>
            <param name="matrix">Matrix 对象表示的仿射矩阵，对于列向量应为左矩阵，对于行向量应为右矩阵。</param>
        </member>
        <member name="M:Com.Vector.MatrixTransformCopy(Com.Matrix)">
            <summary>
            返回按 Matrix 对象表示的仿射矩阵将此 Vector 进行仿射变换的新实例。
            </summary>
            <param name="matrix">Matrix 对象表示的仿射矩阵，对于列向量应为左矩阵，对于行向量应为右矩阵。</param>
            <returns>Vector 对象，表示按 Matrix 对象表示的仿射矩阵将此 Vector 进行仿射变换得到的结果。</returns>
        </member>
        <member name="M:Com.Vector.AffineTransform(Com.AffineTransformation)">
            <summary>
            按 AffineTransformation 对象将此 Vector 进行仿射变换。
            </summary>
            <param name="affineTransformation">AffineTransformation 对象。</param>
        </member>
        <member name="M:Com.Vector.AffineTransformCopy(Com.AffineTransformation)">
            <summary>
            返回按 AffineTransformation 对象将此 Vector 进行仿射变换得到的结果。
            </summary>
            <param name="affineTransformation">AffineTransformation 对象。</param>
            <returns>Vector 对象，表示按 AffineTransformation 对象将此 Vector 进行仿射变换得到的结果。</returns>
        </member>
        <member name="M:Com.Vector.AffineTransform(Com.Matrix)">
            <summary>
            按 Matrix 对象表示的仿射矩阵将此 Vector 进行仿射变换。
            </summary>
            <param name="matrix">Matrix 对象表示的仿射矩阵，对于列向量应为左矩阵，对于行向量应为右矩阵。</param>
        </member>
        <member name="M:Com.Vector.AffineTransform(Com.Matrix[])">
            <summary>
            按 Matrix 对象数组表示的仿射矩阵数组将此 Vector 进行仿射变换。
            </summary>
            <param name="matrices">Matrix 对象数组，对于列向量应全部为左矩阵，对于行向量应全部为右矩阵。</param>
        </member>
        <member name="M:Com.Vector.AffineTransform(System.Collections.Generic.List{Com.Matrix})">
            <summary>
            按 Matrix 对象列表表示的仿射矩阵列表将此 Vector 进行仿射变换。
            </summary>
            <param name="matrices">Matrix 对象列表，对于列向量应全部为左矩阵，对于行向量应全部为右矩阵。</param>
        </member>
        <member name="M:Com.Vector.AffineTransformCopy(Com.Matrix)">
            <summary>
            返回按 Matrix 对象表示的仿射矩阵将此 Vector 进行仿射变换的新实例。
            </summary>
            <param name="matrix">Matrix 对象表示的仿射矩阵，对于列向量应为左矩阵，对于行向量应为右矩阵。</param>
            <returns>Vector 对象，表示按 Matrix 对象表示的仿射矩阵将此 Vector 进行仿射变换得到的结果。</returns>
        </member>
        <member name="M:Com.Vector.AffineTransformCopy(Com.Matrix[])">
            <summary>
            返回按 Matrix 对象数组表示的仿射矩阵数组将此 Vector 进行仿射变换的新实例。
            </summary>
            <param name="matrices">Matrix 对象数组，对于列向量应全部为左矩阵，对于行向量应全部为右矩阵。</param>
            <returns>Vector 对象，表示按 Matrix 对象数组表示的仿射矩阵数组将此 Vector 进行仿射变换得到的结果。</returns>
        </member>
        <member name="M:Com.Vector.AffineTransformCopy(System.Collections.Generic.List{Com.Matrix})">
            <summary>
            返回按 Matrix 对象列表表示的仿射矩阵列表将此 Vector 进行仿射变换的新实例。
            </summary>
            <param name="matrices">Matrix 对象列表，对于列向量应全部为左矩阵，对于行向量应全部为右矩阵。</param>
            <returns>Vector 对象，表示按 Matrix 对象列表表示的仿射矩阵列表将此 Vector 进行仿射变换得到的结果。</returns>
        </member>
        <member name="M:Com.Vector.InverseAffineTransform(Com.Matrix)">
            <summary>
            按 Matrix 对象表示的仿射矩阵将此 Vector 进行逆仿射变换。
            </summary>
            <param name="matrix">Matrix 对象表示的仿射矩阵，对于列向量应为左矩阵，对于行向量应为右矩阵。</param>
        </member>
        <member name="M:Com.Vector.InverseAffineTransform(Com.Matrix[])">
            <summary>
            按 Matrix 对象数组表示的仿射矩阵数组将此 Vector 进行逆仿射变换。
            </summary>
            <param name="matrices">Matrix 对象数组，对于列向量应全部为左矩阵，对于行向量应全部为右矩阵。</param>
        </member>
        <member name="M:Com.Vector.InverseAffineTransform(System.Collections.Generic.List{Com.Matrix})">
            <summary>
            按 Matrix 对象列表表示的仿射矩阵列表将此 Vector 进行逆仿射变换。
            </summary>
            <param name="matrices">Matrix 对象列表，对于列向量应全部为左矩阵，对于行向量应全部为右矩阵。</param>
        </member>
        <member name="M:Com.Vector.InverseAffineTransformCopy(Com.Matrix)">
            <summary>
            返回按 Matrix 对象表示的仿射矩阵将此 Vector 进行逆仿射变换的新实例。
            </summary>
            <param name="matrix">Matrix 对象表示的仿射矩阵，对于列向量应为左矩阵，对于行向量应为右矩阵。</param>
            <returns>Vector 对象，表示按 Matrix 对象表示的仿射矩阵将此 Vector 进行逆仿射变换得到的结果。</returns>
        </member>
        <member name="M:Com.Vector.InverseAffineTransformCopy(Com.Matrix[])">
            <summary>
            返回按 Matrix 对象数组表示的仿射矩阵数组将此 Vector 进行逆仿射变换的新实例。
            </summary>
            <param name="matrices">Matrix 对象数组，对于列向量应全部为左矩阵，对于行向量应全部为右矩阵。</param>
            <returns>Vector 对象，表示按 Matrix 对象数组表示的仿射矩阵数组将此 Vector 进行逆仿射变换得到的结果。</returns>
        </member>
        <member name="M:Com.Vector.InverseAffineTransformCopy(System.Collections.Generic.List{Com.Matrix})">
            <summary>
            返回按 Matrix 对象列表表示的仿射矩阵列表将此 Vector 进行逆仿射变换的新实例。
            </summary>
            <param name="matrices">Matrix 对象列表，对于列向量应全部为左矩阵，对于行向量应全部为右矩阵。</param>
            <returns>Vector 对象，表示按 Matrix 对象列表表示的仿射矩阵列表将此 Vector 进行逆仿射变换得到的结果。</returns>
        </member>
        <member name="M:Com.Vector.AngleFromBase(System.Int32)">
            <summary>
            返回此 Vector 与指定索引的基向量之间的夹角（弧度）。
            </summary>
            <param name="index">索引。</param>
            <returns>双精度浮点数，表示此 Vector 与指定索引的基向量之间的夹角（弧度）。</returns>
        </member>
        <member name="M:Com.Vector.AngleFromSpace(System.Int32)">
            <summary>
            返回此 Vector 与正交于指定索引的基向量的子空间之间的夹角（弧度）。
            </summary>
            <param name="index">索引。</param>
            <returns>双精度浮点数，表示此 Vector 与正交于指定索引的基向量的子空间之间的夹角（弧度）。</returns>
        </member>
        <member name="M:Com.Vector.IsNullOrEmpty(Com.Vector)">
            <summary>
            判断指定的 Vector 是否为 null 或表示空向量。
            </summary>
            <param name="vector">用于判断的 Vector 对象。</param>
            <returns>布尔值，表示指定的 Vector 是否为 null 或表示空向量。</returns>
        </member>
        <member name="M:Com.Vector.Equals(Com.Vector,Com.Vector)">
            <summary>
            判断两个 Vector 对象是否相等。
            </summary>
            <param name="left">用于比较的第一个 Vector 对象。</param>
            <param name="right">用于比较的第二个 Vector 对象。</param>
            <returns>布尔值，表示两个 Vector 对象是否相等。</returns>
        </member>
        <member name="M:Com.Vector.Compare(Com.Vector,Com.Vector)">
            <summary>
            比较两个 Vector 对象的次序。
            </summary>
            <param name="left">用于比较的第一个 Vector 对象。</param>
            <param name="right">用于比较的第二个 Vector 对象。</param>
            <returns>32 位整数，表示将两个 Vector 对象进行次序比较得到的结果。</returns>
        </member>
        <member name="M:Com.Vector.Zero(Com.VectorType,System.Int32)">
            <summary>
            返回表示零向量的 Vector 的新实例。
            </summary>
            <param name="type">向量类型。</param>
            <param name="dimension">向量维度。</param>
            <returns>Vector 对象，表示零向量。</returns>
        </member>
        <member name="M:Com.Vector.Zero(Com.Vector.Type,System.Int32)">
            <summary>
            返回表示零向量的 Vector 的新实例。
            </summary>
            <param name="type">向量类型。</param>
            <param name="dimension">向量维度。</param>
            <returns>Vector 对象，表示零向量。</returns>
        </member>
        <member name="M:Com.Vector.Zero(System.Int32)">
            <summary>
            返回表示零向量的 Vector 的新实例。
            </summary>
            <param name="dimension">向量维度。</param>
            <returns>Vector 对象，表示零向量。</returns>
        </member>
        <member name="M:Com.Vector.Base(Com.VectorType,System.Int32,System.Int32)">
            <summary>
            返回表示指定索引的基向量的 Vector 的新实例。
            </summary>
            <param name="type">向量类型。</param>
            <param name="dimension">向量维度。</param>
            <param name="index">索引。</param>
            <returns>Vector 对象，表示指定索引的基向量。</returns>
        </member>
        <member name="M:Com.Vector.Base(Com.Vector.Type,System.Int32,System.Int32)">
            <summary>
            返回表示指定索引的基向量的 Vector 的新实例。
            </summary>
            <param name="type">向量类型。</param>
            <param name="dimension">向量维度。</param>
            <param name="index">索引。</param>
            <returns>Vector 对象，表示指定索引的基向量。</returns>
        </member>
        <member name="M:Com.Vector.Base(System.Int32,System.Int32)">
            <summary>
            返回表示指定索引的基向量的 Vector 的新实例。
            </summary>
            <param name="dimension">向量维度。</param>
            <param name="index">索引。</param>
            <returns>Vector 对象，表示指定索引的基向量。</returns>
        </member>
        <member name="M:Com.Vector.OffsetMatrix(Com.VectorType,System.Int32,System.Int32,System.Double)">
            <summary>
            返回表示按双精度浮点数表示的位移将 Vector 对象在指定的基向量方向的分量平移指定的量的仿射矩阵的 Matrix 的新实例，对于列向量将返回左矩阵，对于行向量将返回右矩阵。
            </summary>
            <param name="type">向量类型。</param>
            <param name="dimension">向量维度。</param>
            <param name="index">索引，用于指定平移的分量所在方向的基向量。</param>
            <param name="d">双精度浮点数表示的位移。</param>
            <returns>Matrix 对象，表示按双精度浮点数表示的位移将 Vector 对象在指定的基向量方向的分量平移指定的量的仿射矩阵。</returns>
        </member>
        <member name="M:Com.Vector.OffsetMatrix(Com.Vector.Type,System.Int32,System.Int32,System.Double)">
            <summary>
            返回表示按双精度浮点数表示的位移将 Vector 对象在指定的基向量方向的分量平移指定的量的仿射矩阵的 Matrix 的新实例，对于列向量将返回左矩阵，对于行向量将返回右矩阵。
            </summary>
            <param name="type">向量类型。</param>
            <param name="dimension">向量维度。</param>
            <param name="index">索引，用于指定平移的分量所在方向的基向量。</param>
            <param name="d">双精度浮点数表示的位移。</param>
            <returns>Matrix 对象，表示按双精度浮点数表示的位移将 Vector 对象在指定的基向量方向的分量平移指定的量的仿射矩阵。</returns>
        </member>
        <member name="M:Com.Vector.OffsetMatrix(Com.VectorType,System.Int32,System.Double)">
            <summary>
            返回表示按双精度浮点数表示的位移将 Vector 对象的所有分量平移指定的量的仿射矩阵的 Matrix 的新实例，对于列向量将返回左矩阵，对于行向量将返回右矩阵。
            </summary>
            <param name="type">向量类型。</param>
            <param name="dimension">向量维度。</param>
            <param name="d">双精度浮点数表示的位移。</param>
            <returns>Matrix 对象，表示按双精度浮点数表示的位移将 Vector 对象的所有分量平移指定的量的仿射矩阵。</returns>
        </member>
        <member name="M:Com.Vector.OffsetMatrix(Com.Vector.Type,System.Int32,System.Double)">
            <summary>
            返回表示按双精度浮点数表示的位移将 Vector 对象的所有分量平移指定的量的仿射矩阵的 Matrix 的新实例，对于列向量将返回左矩阵，对于行向量将返回右矩阵。
            </summary>
            <param name="type">向量类型。</param>
            <param name="dimension">向量维度。</param>
            <param name="d">双精度浮点数表示的位移。</param>
            <returns>Matrix 对象，表示按双精度浮点数表示的位移将 Vector 对象的所有分量平移指定的量的仿射矩阵。</returns>
        </member>
        <member name="M:Com.Vector.OffsetMatrix(Com.Vector)">
            <summary>
            返回表示按 Vector 对象表示的位移将 Vector 对象平移指定的量的仿射矩阵的 Matrix 的新实例，对于列向量将返回左矩阵，对于行向量将返回右矩阵。
            </summary>
            <param name="vector">Vector 对象表示的位移。</param>
            <returns>Matrix 对象，表示按 Vector 对象表示的位移将 Vector 对象平移指定的量的仿射矩阵。</returns>
        </member>
        <member name="M:Com.Vector.ScaleMatrix(System.Int32,System.Int32,System.Double)">
            <summary>
            返回表示按双精度浮点数表示的缩放因数将 Vector 对象在指定的基向量方向的分量缩放指定的倍数的仿射矩阵的 Matrix 的新实例，对于列向量将返回左矩阵，对于行向量将返回右矩阵。
            </summary>
            <param name="dimension">向量维度。</param>
            <param name="index">索引，用于指定缩放的分量所在方向的基向量。</param>
            <param name="s">双精度浮点数表示的缩放因数。</param>
            <returns>Matrix 对象，表示按双精度浮点数表示的缩放因数将 Vector 对象在指定的基向量方向的分量缩放指定的倍数的仿射矩阵。</returns>
        </member>
        <member name="M:Com.Vector.ScaleMatrix(Com.Vector.Type,System.Int32,System.Int32,System.Double)">
            <summary>
            返回表示按双精度浮点数表示的缩放因数将 Vector 对象在指定的基向量方向的分量缩放指定的倍数的仿射矩阵的 Matrix 的新实例，对于列向量将返回左矩阵，对于行向量将返回右矩阵。
            </summary>
            <param name="type">向量类型。</param>
            <param name="dimension">向量维度。</param>
            <param name="index">索引，用于指定缩放的分量所在方向的基向量。</param>
            <param name="s">双精度浮点数表示的缩放因数。</param>
            <returns>Matrix 对象，表示按双精度浮点数表示的缩放因数将 Vector 对象在指定的基向量方向的分量缩放指定的倍数的仿射矩阵。</returns>
        </member>
        <member name="M:Com.Vector.ScaleMatrix(System.Int32,System.Double)">
            <summary>
            返回表示按双精度浮点数表示的缩放因数将 Vector 对象的所有分量缩放指定的倍数的仿射矩阵的 Matrix 的新实例，对于列向量将返回左矩阵，对于行向量将返回右矩阵。
            </summary>
            <param name="dimension">向量维度。</param>
            <param name="s">双精度浮点数表示的缩放因数。</param>
            <returns>Matrix 对象，表示按双精度浮点数表示的缩放因数将 Vector 对象的所有分量缩放指定的倍数的仿射矩阵。</returns>
        </member>
        <member name="M:Com.Vector.ScaleMatrix(Com.Vector.Type,System.Int32,System.Double)">
            <summary>
            返回表示按双精度浮点数表示的缩放因数将 Vector 对象的所有分量缩放指定的倍数的仿射矩阵的 Matrix 的新实例，对于列向量将返回左矩阵，对于行向量将返回右矩阵。
            </summary>
            <param name="type">向量类型。</param>
            <param name="dimension">向量维度。</param>
            <param name="s">双精度浮点数表示的缩放因数。</param>
            <returns>Matrix 对象，表示按双精度浮点数表示的缩放因数将 Vector 对象的所有分量缩放指定的倍数的仿射矩阵。</returns>
        </member>
        <member name="M:Com.Vector.ScaleMatrix(Com.Vector)">
            <summary>
            返回表示按 Vector 对象表示的缩放因数将 Vector 对象缩放指定的倍数的仿射矩阵的 Matrix 的新实例，对于列向量将返回左矩阵，对于行向量将返回右矩阵。
            </summary>
            <param name="vector">Vector 对象表示的缩放因数。</param>
            <returns>Matrix 对象，表示按 Vector 对象表示的缩放因数将 Vector 对象缩放指定的倍数的仿射矩阵。</returns>
        </member>
        <member name="M:Com.Vector.ReflectMatrix(System.Int32,System.Int32)">
            <summary>
            返回表示将 Vector 对象在指定的基向量方向的分量翻转的仿射矩阵的 Matrix 的新实例，对于列向量将返回左矩阵，对于行向量将返回右矩阵。
            </summary>
            <param name="dimension">向量维度。</param>
            <param name="index">索引，用于指定翻转的分量所在方向的基向量。</param>
            <returns>Matrix 对象，表示将 Vector 对象在指定的基向量方向的分量翻转的仿射矩阵。</returns>
        </member>
        <member name="M:Com.Vector.ReflectMatrix(Com.Vector.Type,System.Int32,System.Int32)">
            <summary>
            返回表示将 Vector 对象在指定的基向量方向的分量翻转的仿射矩阵的 Matrix 的新实例，对于列向量将返回左矩阵，对于行向量将返回右矩阵。
            </summary>
            <param name="type">向量类型。</param>
            <param name="dimension">向量维度。</param>
            <param name="index">索引，用于指定翻转的分量所在方向的基向量。</param>
            <returns>Matrix 对象，表示将 Vector 对象在指定的基向量方向的分量翻转的仿射矩阵。</returns>
        </member>
        <member name="M:Com.Vector.ShearMatrix(Com.VectorType,System.Int32,System.Int32,System.Int32,System.Double)">
            <summary>
            返回表示按双精度浮点数表示的弧度将 Vector 对象错切指定的角度的仿射矩阵的 Matrix 的新实例，对于列向量将返回左矩阵，对于行向量将返回右矩阵。
            </summary>
            <param name="type">向量类型。</param>
            <param name="dimension">向量维度。</param>
            <param name="index1">索引，用于指定与错切方向同向的基向量。</param>
            <param name="index2">索引，用于指定与错切方向共面正交的基向量。</param>
            <param name="angle">双精度浮点数，表示 Vector 对象沿索引 index1 指定的基向量方向且共面正交于 index2 指定的基向量方向错切的角度（弧度）。</param>
            <returns>Matrix 对象，表示按双精度浮点数表示的弧度将 Vector 对象错切指定的角度的仿射矩阵。</returns>
        </member>
        <member name="M:Com.Vector.ShearMatrix(Com.Vector.Type,System.Int32,System.Int32,System.Int32,System.Double)">
            <summary>
            返回表示按双精度浮点数表示的弧度将 Vector 对象错切指定的角度的仿射矩阵的 Matrix 的新实例，对于列向量将返回左矩阵，对于行向量将返回右矩阵。
            </summary>
            <param name="type">向量类型。</param>
            <param name="dimension">向量维度。</param>
            <param name="index1">索引，用于指定与错切方向同向的基向量。</param>
            <param name="index2">索引，用于指定与错切方向共面正交的基向量。</param>
            <param name="angle">双精度浮点数，表示 Vector 对象沿索引 index1 指定的基向量方向且共面正交于 index2 指定的基向量方向错切的角度（弧度）。</param>
            <returns>Matrix 对象，表示按双精度浮点数表示的弧度将 Vector 对象错切指定的角度的仿射矩阵。</returns>
        </member>
        <member name="M:Com.Vector.RotateMatrix(Com.VectorType,System.Int32,System.Int32,System.Int32,System.Double)">
            <summary>
            返回表示按双精度浮点数表示的弧度将 Vector 对象旋转指定的角度的仿射矩阵的 Matrix 的新实例，对于列向量将返回左矩阵，对于行向量将返回右矩阵。
            </summary>
            <param name="type">向量类型。</param>
            <param name="dimension">向量维度。</param>
            <param name="index1">索引，用于指定构成旋转轨迹所在平面的第一个基向量。</param>
            <param name="index2">索引，用于指定构成旋转轨迹所在平面的第二个基向量。</param>
            <param name="angle">双精度浮点数，表示 Vector 对象绕索引 index1 与 index2 指定的基向量构成的平面的法向空间旋转的角度（弧度）（以索引 index1 指定的基向量为 0 弧度，从索引 index1 指定的基向量指向索引 index2 指定的基向量的方向为正方向）。</param>
            <returns>Matrix 对象，表示按双精度浮点数表示的弧度将 Vector 对象旋转指定的角度的仿射矩阵。</returns>
        </member>
        <member name="M:Com.Vector.RotateMatrix(Com.Vector.Type,System.Int32,System.Int32,System.Int32,System.Double)">
            <summary>
            返回表示按双精度浮点数表示的弧度将 Vector 对象旋转指定的角度的仿射矩阵的 Matrix 的新实例，对于列向量将返回左矩阵，对于行向量将返回右矩阵。
            </summary>
            <param name="type">向量类型。</param>
            <param name="dimension">向量维度。</param>
            <param name="index1">索引，用于指定构成旋转轨迹所在平面的第一个基向量。</param>
            <param name="index2">索引，用于指定构成旋转轨迹所在平面的第二个基向量。</param>
            <param name="angle">双精度浮点数，表示 Vector 对象绕索引 index1 与 index2 指定的基向量构成的平面的法向空间旋转的角度（弧度）（以索引 index1 指定的基向量为 0 弧度，从索引 index1 指定的基向量指向索引 index2 指定的基向量的方向为正方向）。</param>
            <returns>Matrix 对象，表示按双精度浮点数表示的弧度将 Vector 对象旋转指定的角度的仿射矩阵。</returns>
        </member>
        <member name="M:Com.Vector.DistanceBetween(Com.Vector,Com.Vector)">
            <summary>
            返回两个 Vector 对象之间的距离。
            </summary>
            <param name="left">第一个 Vector 对象。</param>
            <param name="right">第二个 Vector 对象。</param>
            <returns>双精度浮点数，表示两个 Vector 对象之间的距离。</returns>
        </member>
        <member name="M:Com.Vector.AngleBetween(Com.Vector,Com.Vector)">
            <summary>
            返回两个 Vector 对象之间的夹角（弧度）。
            </summary>
            <param name="left">第一个 Vector 对象。</param>
            <param name="right">第二个 Vector 对象。</param>
            <returns>双精度浮点数，表示两个 Vector 对象之间的夹角（弧度）。</returns>
        </member>
        <member name="M:Com.Vector.DotProduct(Com.Vector,Com.Vector)">
            <summary>
            返回两个 Vector 对象的内积。
            </summary>
            <param name="left">第一个 Vector 对象。</param>
            <param name="right">第二个 Vector 对象。</param>
            <returns>双精度浮点数，表示两个 Vector 对象的内积。</returns>
        </member>
        <member name="M:Com.Vector.CrossProduct(Com.Vector,Com.Vector)">
            <summary>
            返回两个 Vector 对象的外积。两个 N 维向量的外积为一个 N * (N - 1) / 2 维向量，其所有分量的数值依次为 E(0)∧E(1) 基向量、E(0)∧E(2) 基向量、……、E(0)∧E(N - 1) 基向量、E(1)∧E(2) 基向量、E(1)∧E(3) 基向量、……、 E(N - 2)∧E(N - 1) 基向量的系数，其中 E(i) 为 N 维向量的第 i 维基向量。
            </summary>
            <param name="left">第一个 Vector 对象。</param>
            <param name="right">第二个 Vector 对象。</param>
            <returns>Vector 对象，表示两个 Vector 对象的外积。</returns>
        </member>
        <member name="M:Com.Vector.Sign(Com.Vector)">
            <summary>
            返回将 Vector 对象的所有分量取符号数得到的 Vector 的新实例。
            </summary>
            <param name="vector">用于转换的 Vector 对象。</param>
            <returns>Vector 对象，表示将 Vector 对象的所有分量取符号数得到的结果</returns>
        </member>
        <member name="M:Com.Vector.Abs(Com.Vector)">
            <summary>
            返回将 Vector 对象的所有分量取绝对值得到的 Vector 的新实例。
            </summary>
            <param name="vector">用于转换的 Vector 对象。</param>
            <returns>Vector 对象，表示将 Vector 对象的所有分量取绝对值得到的结果</returns>
        </member>
        <member name="M:Com.Vector.Ceiling(Com.Vector)">
            <summary>
            返回将 Vector 对象的所有分量舍入到较大的整数值得到的 Vector 的新实例。
            </summary>
            <param name="vector">用于转换的 Vector 对象。</param>
            <returns>Vector 对象，表示将 Vector 对象的所有分量舍入到较大的整数值得到的结果</returns>
        </member>
        <member name="M:Com.Vector.Floor(Com.Vector)">
            <summary>
            返回将 Vector 对象的所有分量舍入到较小的整数值得到的 Vector 的新实例。
            </summary>
            <param name="vector">用于转换的 Vector 对象。</param>
            <returns>Vector 对象，表示将 Vector 对象的所有分量舍入到较小的整数值得到的结果</returns>
        </member>
        <member name="M:Com.Vector.Round(Com.Vector)">
            <summary>
            返回将 Vector 对象的所有分量舍入到最接近的整数值得到的 Vector 的新实例。
            </summary>
            <param name="vector">用于转换的 Vector 对象。</param>
            <returns>Vector 对象，表示将 Vector 对象的所有分量舍入到最接近的整数值得到的结果</returns>
        </member>
        <member name="M:Com.Vector.Truncate(Com.Vector)">
            <summary>
            返回将 Vector 对象的所有分量截断小数部分取整得到的 Vector 的新实例。
            </summary>
            <param name="vector">用于转换的 Vector 对象。</param>
            <returns>Vector 对象，表示将 Vector 对象的所有分量截断小数部分取整得到的结果</returns>
        </member>
        <member name="M:Com.Vector.Max(Com.Vector,Com.Vector)">
            <summary>
            返回将两个 Vector 对象的所有分量分别取最大值得到的 Vector 的新实例。
            </summary>
            <param name="left">用于比较的第一个 Vector 对象。</param>
            <param name="right">用于比较的第二个 Vector 对象。</param>
            <returns>Vector 对象，表示将两个 Vector 对象的所有分量分别取最大值得到的结果</returns>
        </member>
        <member name="M:Com.Vector.Min(Com.Vector,Com.Vector)">
            <summary>
            返回将两个 Vector 对象的所有分量分别取最小值得到的 Vector 的新实例。
            </summary>
            <param name="left">用于比较的第一个 Vector 对象。</param>
            <param name="right">用于比较的第二个 Vector 对象。</param>
            <returns>Vector 对象，表示将两个 Vector 对象的所有分量分别取最小值得到的结果</returns>
        </member>
        <member name="M:Com.Vector.op_Equality(Com.Vector,Com.Vector)">
            <summary>
            判断两个 Vector 对象是否相等。
            </summary>
            <param name="left">运算符左侧比较的 Vector 对象。</param>
            <param name="right">运算符右侧比较的 Vector 对象。</param>
            <returns>布尔值，表示两个 Vector 对象是否相等。</returns>
        </member>
        <member name="M:Com.Vector.op_Inequality(Com.Vector,Com.Vector)">
            <summary>
            判断两个 Vector 对象是否不相等。
            </summary>
            <param name="left">运算符左侧比较的 Vector 对象。</param>
            <param name="right">运算符右侧比较的 Vector 对象。</param>
            <returns>布尔值，表示两个 Vector 对象是否不相等。</returns>
        </member>
        <member name="M:Com.Vector.op_LessThan(Com.Vector,Com.Vector)">
            <summary>
            判断两个 Vector 对象的维度与字典序是否前者小于后者。
            </summary>
            <param name="left">运算符左侧比较的 Vector 对象。</param>
            <param name="right">运算符右侧比较的 Vector 对象。</param>
            <returns>布尔值，表示两个 Vector 对象的维度与字典序是否前者小于后者。</returns>
        </member>
        <member name="M:Com.Vector.op_GreaterThan(Com.Vector,Com.Vector)">
            <summary>
            判断两个 Vector 对象的维度与字典序是否前者大于后者。
            </summary>
            <param name="left">运算符左侧比较的 Vector 对象。</param>
            <param name="right">运算符右侧比较的 Vector 对象。</param>
            <returns>布尔值，表示两个 Vector 对象的维度与字典序是否前者大于后者。</returns>
        </member>
        <member name="M:Com.Vector.op_LessThanOrEqual(Com.Vector,Com.Vector)">
            <summary>
            判断两个 Vector 对象的维度与字典序是否前者小于或等于后者。
            </summary>
            <param name="left">运算符左侧比较的 Vector 对象。</param>
            <param name="right">运算符右侧比较的 Vector 对象。</param>
            <returns>布尔值，表示两个 Vector 对象的维度与字典序是否前者小于或等于后者。</returns>
        </member>
        <member name="M:Com.Vector.op_GreaterThanOrEqual(Com.Vector,Com.Vector)">
            <summary>
            判断两个 Vector 对象的维度与字典序是否前者大于或等于后者。
            </summary>
            <param name="left">运算符左侧比较的 Vector 对象。</param>
            <param name="right">运算符右侧比较的 Vector 对象。</param>
            <returns>布尔值，表示两个 Vector 对象的维度与字典序是否前者大于或等于后者。</returns>
        </member>
        <member name="M:Com.Vector.op_UnaryPlus(Com.Vector)">
            <summary>
            返回在 Vector 对象的所有分量前添加正号得到的 Vector 的新实例。
            </summary>
            <param name="vector">运算符右侧的 Vector 对象。</param>
            <returns>Vector 对象，表示在 Vector 对象的所有分量前添加正号得到的结果。</returns>
        </member>
        <member name="M:Com.Vector.op_UnaryNegation(Com.Vector)">
            <summary>
            返回在 Vector 对象的所有分量前添加负号得到的 Vector 的新实例。
            </summary>
            <param name="vector">运算符右侧的 Vector 对象。</param>
            <returns>Vector 对象，表示在 Vector 对象的所有分量前添加负号得到的结果。</returns>
        </member>
        <member name="M:Com.Vector.op_Addition(Com.Vector,System.Double)">
            <summary>
            返回将 Vector 对象的所有分量与双精度浮点数相加得到的 Vector 的新实例。
            </summary>
            <param name="vector">Vector 对象，表示被加数。</param>
            <param name="n">双精度浮点数，表示加数。</param>
            <returns>Vector 对象，表示将 Vector 对象的所有分量与双精度浮点数相加得到的结果。</returns>
        </member>
        <member name="M:Com.Vector.op_Addition(System.Double,Com.Vector)">
            <summary>
            返回将双精度浮点数与 Vector 对象的所有分量相加得到的 Vector 的新实例。
            </summary>
            <param name="n">双精度浮点数，表示被加数。</param>
            <param name="vector">Vector 对象，表示加数。</param>
            <returns>Vector 对象，表示将双精度浮点数与 Vector 对象的所有分量相加得到的结果。</returns>
        </member>
        <member name="M:Com.Vector.op_Addition(Com.Vector,Com.Vector)">
            <summary>
            返回将 Vector 对象与 Vector 对象的所有分量对应相加得到的 Vector 的新实例。
            </summary>
            <param name="left">Vector 对象，表示被加数。</param>
            <param name="right">Vector 对象，表示加数。</param>
            <returns>Vector 对象，表示将 Vector 对象与 Vector 对象的所有分量对应相加得到的结果。</returns>
        </member>
        <member name="M:Com.Vector.op_Subtraction(Com.Vector,System.Double)">
            <summary>
            返回将 Vector 对象的所有分量与双精度浮点数相减得到的 Vector 的新实例。
            </summary>
            <param name="vector">Vector 对象，表示被减数。</param>
            <param name="n">双精度浮点数，表示减数。</param>
            <returns>Vector 对象，表示将 Vector 对象的所有分量与双精度浮点数相减得到的结果。</returns>
        </member>
        <member name="M:Com.Vector.op_Subtraction(System.Double,Com.Vector)">
            <summary>
            返回将双精度浮点数与 Vector 对象的所有分量相减得到的 Vector 的新实例。
            </summary>
            <param name="n">双精度浮点数，表示被减数。</param>
            <param name="vector">Vector 对象，表示减数。</param>
            <returns>Vector 对象，表示将双精度浮点数与 Vector 对象的所有分量相减得到的结果。</returns>
        </member>
        <member name="M:Com.Vector.op_Subtraction(Com.Vector,Com.Vector)">
            <summary>
            返回将 Vector 对象与 Vector 对象的所有分量对应相减得到的 Vector 的新实例。
            </summary>
            <param name="left">Vector 对象，表示被减数。</param>
            <param name="right">Vector 对象，表示减数。</param>
            <returns>Vector 对象，表示将 Vector 对象与 Vector 对象的所有分量对应相减得到的结果。</returns>
        </member>
        <member name="M:Com.Vector.op_Multiply(Com.Vector,System.Double)">
            <summary>
            返回将 Vector 对象的所有分量与双精度浮点数相乘得到的 Vector 的新实例。
            </summary>
            <param name="vector">Vector 对象，表示被乘数。</param>
            <param name="n">双精度浮点数，表示乘数。</param>
            <returns>Vector 对象，表示将 Vector 对象的所有分量与双精度浮点数相乘得到的结果。</returns>
        </member>
        <member name="M:Com.Vector.op_Multiply(System.Double,Com.Vector)">
            <summary>
            返回将双精度浮点数与 Vector 对象的所有分量相乘得到的 Vector 的新实例。
            </summary>
            <param name="n">双精度浮点数，表示被乘数。</param>
            <param name="vector">Vector 对象，表示乘数。</param>
            <returns>Vector 对象，表示将双精度浮点数与 Vector 对象的所有分量相乘得到的结果。</returns>
        </member>
        <member name="M:Com.Vector.op_Multiply(Com.Vector,Com.Vector)">
            <summary>
            返回将 Vector 对象与 Vector 对象的所有分量对应相乘得到的 Vector 的新实例。
            </summary>
            <param name="left">Vector 对象，表示被乘数。</param>
            <param name="right">Vector 对象，表示乘数。</param>
            <returns>Vector 对象，表示将 Vector 对象与 Vector 对象的所有分量对应相乘得到的结果。</returns>
        </member>
        <member name="M:Com.Vector.op_Division(Com.Vector,System.Double)">
            <summary>
            返回将 Vector 对象的所有分量与双精度浮点数相除得到的 Vector 的新实例。
            </summary>
            <param name="vector">Vector 对象，表示被除数。</param>
            <param name="n">双精度浮点数，表示除数。</param>
            <returns>Vector 对象，表示将 Vector 对象的所有分量与双精度浮点数相除得到的结果。</returns>
        </member>
        <member name="M:Com.Vector.op_Division(System.Double,Com.Vector)">
            <summary>
            返回将双精度浮点数与 Vector 对象的所有分量相除得到的 Vector 的新实例。
            </summary>
            <param name="n">双精度浮点数，表示被除数。</param>
            <param name="vector">Vector 对象，表示除数。</param>
            <returns>Vector 对象，表示将双精度浮点数与 Vector 对象的所有分量相除得到的结果。</returns>
        </member>
        <member name="M:Com.Vector.op_Division(Com.Vector,Com.Vector)">
            <summary>
            返回将 Vector 对象与 Vector 对象的所有分量对应相除得到的 Vector 的新实例。
            </summary>
            <param name="left">Vector 对象，表示被除数。</param>
            <param name="right">Vector 对象，表示除数。</param>
            <returns>Vector 对象，表示将 Vector 对象与 Vector 对象的所有分量对应相除得到的结果。</returns>
        </member>
        <member name="T:Com.VectorType">
            <summary>
            向量类型。
            </summary>
        </member>
        <member name="F:Com.VectorType.ColumnVector">
            <summary>
            列向量。
            </summary>
        </member>
        <member name="F:Com.VectorType.RowVector">
            <summary>
            行向量。
            </summary>
        </member>
        <member name="T:Com.Properties.Resources">
            <summary>
              一个强类型的资源类，用于查找本地化的字符串等。
            </summary>
        </member>
        <member name="P:Com.Properties.Resources.ResourceManager">
            <summary>
              返回此类使用的缓存的 ResourceManager 实例。
            </summary>
        </member>
        <member name="P:Com.Properties.Resources.Culture">
            <summary>
              重写当前线程的 CurrentUICulture 属性
              重写当前线程的 CurrentUICulture 属性。
            </summary>
        </member>
        <member name="P:Com.Properties.Resources.ControlBox_Active_DarkImage_EnterFullScreen_16">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:Com.Properties.Resources.ControlBox_Active_DarkImage_Exit_16">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:Com.Properties.Resources.ControlBox_Active_DarkImage_ExitFullScreen_16">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:Com.Properties.Resources.ControlBox_Active_DarkImage_Maximize_16">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:Com.Properties.Resources.ControlBox_Active_DarkImage_Minimize_16">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:Com.Properties.Resources.ControlBox_Active_DarkImage_Return_16">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:Com.Properties.Resources.ControlBox_Active_LightImage_EnterFullScreen_16">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:Com.Properties.Resources.ControlBox_Active_LightImage_Exit_16">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:Com.Properties.Resources.ControlBox_Active_LightImage_ExitFullScreen_16">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:Com.Properties.Resources.ControlBox_Active_LightImage_Maximize_16">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:Com.Properties.Resources.ControlBox_Active_LightImage_Minimize_16">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:Com.Properties.Resources.ControlBox_Active_LightImage_Return_16">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:Com.Properties.Resources.ControlBox_Inactive_DarkImage_EnterFullScreen_16">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:Com.Properties.Resources.ControlBox_Inactive_DarkImage_Exit_16">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:Com.Properties.Resources.ControlBox_Inactive_DarkImage_ExitFullScreen_16">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:Com.Properties.Resources.ControlBox_Inactive_DarkImage_Maximize_16">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:Com.Properties.Resources.ControlBox_Inactive_DarkImage_Minimize_16">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:Com.Properties.Resources.ControlBox_Inactive_DarkImage_Return_16">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:Com.Properties.Resources.ControlBox_Inactive_LightImage_EnterFullScreen_16">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:Com.Properties.Resources.ControlBox_Inactive_LightImage_Exit_16">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:Com.Properties.Resources.ControlBox_Inactive_LightImage_ExitFullScreen_16">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:Com.Properties.Resources.ControlBox_Inactive_LightImage_Maximize_16">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:Com.Properties.Resources.ControlBox_Inactive_LightImage_Minimize_16">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:Com.Properties.Resources.ControlBox_Inactive_LightImage_Return_16">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:Com.Properties.Resources.MenuItem_Exit_16">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:Com.Properties.Resources.MenuItem_Maximize_16">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:Com.Properties.Resources.MenuItem_Minimize_16">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:Com.Properties.Resources.MenuItem_Return_16">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="T:Com.Animation">
            <summary>
            为动画的绘制提供静态方法。
            </summary>
        </member>
        <member name="T:Com.Animation.Frame">
            <summary>
            表示用于绘制动画的某一帧的方法。
            </summary>
            <param name="frameId">当前帧在动画所有帧中的次序数（从 1 开始计数）。</param>
            <param name="frameCount">动画的总帧数。</param>
            <param name="msPerFrame">动画每帧持续的毫秒数。</param>
        </member>
        <member name="M:Com.Animation.Show(Com.Animation.Frame,System.Int32,System.Int32,System.Int32,System.Collections.Generic.List{System.Int32})">
            <summary>
            按照指定的方法、总帧数、每帧的持续时长、关键帧密度与关键帧列表绘制动画。
            </summary>
            <param name="frame">用于绘制动画的某一帧的方法。</param>
            <param name="frameCount">动画的总帧数。</param>
            <param name="msPerFrame">动画每帧持续的毫秒数。</param>
            <param name="keyFrameDensity">表示自动画的第一帧起，每连续若干帧中的第一帧为关键帧。</param>
            <param name="keyFrameList">包含所有关键帧次序数的列表。</param>
        </member>
        <member name="M:Com.Animation.Show(Com.Animation.Frame,System.Int32,System.Int32,System.Int32)">
            <summary>
            按照指定的方法、总帧数、每帧的持续时长与关键帧密度绘制动画。
            </summary>
            <param name="frame">用于绘制动画的某一帧的方法。</param>
            <param name="frameCount">动画的总帧数。</param>
            <param name="msPerFrame">动画每帧持续的毫秒数。</param>
            <param name="keyFrameDensity">表示自动画的第一帧起，每连续若干帧中的第一帧为关键帧。</param>
        </member>
        <member name="M:Com.Animation.Show(Com.Animation.Frame,System.Int32,System.Int32,System.Collections.Generic.List{System.Int32})">
            <summary>
            按照指定的方法、总帧数、每帧的持续时长与关键帧列表绘制动画。
            </summary>
            <param name="frame">用于绘制动画的某一帧的方法。</param>
            <param name="frameCount">动画的总帧数。</param>
            <param name="msPerFrame">动画每帧持续的毫秒数。</param>
            <param name="keyFrameList">包含所有关键帧次序数的列表。</param>
        </member>
        <member name="M:Com.Animation.Show(Com.Animation.Frame,System.Int32,System.Int32)">
            <summary>
            按照指定的方法、总帧数与每帧的持续时长绘制动画。
            </summary>
            <param name="frame">用于绘制动画的某一帧的方法。</param>
            <param name="frameCount">动画的总帧数。</param>
            <param name="msPerFrame">动画每帧持续的毫秒数。</param>
        </member>
        <member name="T:Com.BitOperation">
            <summary>
            为 8 位、16 位、32 位与 64 位无符号整数的位运算提供静态方法。
            </summary>
        </member>
        <member name="M:Com.BitOperation.GetBinary8WithSingleBit1(System.Int32)">
            <summary>
            返回一个仅指定二进制位为 1 的 8 位无符号整数。
            </summary>
            <param name="bit">指定的二进制位。</param>
            <returns>8 位无符号整数，该 8 位无符号整数仅指定二进制位为 1。</returns>
        </member>
        <member name="M:Com.BitOperation.GetBinary8WithSingleBit0(System.Int32)">
            <summary>
            返回一个仅指定二进制位为 0 的 8 位无符号整数。
            </summary>
            <param name="bit">指定的二进制位。</param>
            <returns>8 位无符号整数，该 8 位无符号整数仅指定二进制位为 0。</returns>
        </member>
        <member name="M:Com.BitOperation.AddBitToBinary(System.Byte@,System.Int32)">
            <summary>
            将 8 位无符号整数的指定二进制位设为 1。
            </summary>
            <param name="bin">8 位无符号整数。</param>
            <param name="bit">需要处理的二进制位。</param>
        </member>
        <member name="M:Com.BitOperation.RemoveBitFromBinary(System.Byte@,System.Int32)">
            <summary>
            将 8 位无符号整数的指定二进制位设为 0。
            </summary>
            <param name="bin">8 位无符号整数。</param>
            <param name="bit">需要处理的二进制位。</param>
        </member>
        <member name="M:Com.BitOperation.InverseBitOfBinary(System.Byte@,System.Int32)">
            <summary>
            将 8 位无符号整数的指定二进制位反转。
            </summary>
            <param name="bin">8 位无符号整数。</param>
            <param name="bit">需要处理的二进制位。</param>
        </member>
        <member name="M:Com.BitOperation.BinaryHasBit(System.Byte,System.Int32)">
            <summary>
            判断 8 位无符号整数的指定二进制位是否为 1。
            </summary>
            <param name="bin">8 位无符号整数。</param>
            <param name="bit">指定的二进制位。</param>
            <returns>布尔值，表示 8 位无符号整数的指定二进制位是否为 1。</returns>
        </member>
        <member name="M:Com.BitOperation.GetBit1CountOfBinary(System.Byte)">
            <summary>
            计算 8 位无符号整数的值为 1 的二进制位的数量。
            </summary>
            <param name="bin">8 位无符号整数。</param>
            <returns>8 位无符号整数的值为 1 的二进制位的数量。</returns>
        </member>
        <member name="M:Com.BitOperation.GetBit0CountOfBinary(System.Byte)">
            <summary>
            计算 8 位无符号整数的值为 0 的二进制位的数量。
            </summary>
            <param name="bin">8 位无符号整数。</param>
            <returns>8 位无符号整数的值为 0 的二进制位的数量。</returns>
        </member>
        <member name="M:Com.BitOperation.GetBit1IndexOfBinary(System.Byte)">
            <summary>
            返回一个列表，列表元素表示 8 位无符号整数值为 1 的二进制位在该整数的二进制序列中从低位到高位的次序数（最低位的次序数为 0）。
            </summary>
            <param name="bin">8 位无符号整数。</param>
            <returns>32 位整数列表，列表元素表示 8 位无符号整数值为 1 的二进制位在该整数的二进制序列中从低位到高位的次序数（最低位的次序数为 0）。</returns>
        </member>
        <member name="M:Com.BitOperation.GetBit0IndexOfBinary(System.Byte)">
            <summary>
            返回一个列表，列表元素表示 8 位无符号整数值为 0 的二进制位在该整数的二进制序列中从低位到高位的次序数（最低位的次序数为 0）。
            </summary>
            <param name="bin">8 位无符号整数。</param>
            <returns>32 位整数列表，列表元素表示 8 位无符号整数值为 0 的二进制位在该整数的二进制序列中从低位到高位的次序数（最低位的次序数为 0）。</returns>
        </member>
        <member name="M:Com.BitOperation.GetBinary16WithSingleBit1(System.Int32)">
            <summary>
            返回一个仅指定二进制位为 1 的 16 位无符号整数。
            </summary>
            <param name="bit">指定的二进制位。</param>
            <returns>16 位无符号整数，该 16 位无符号整数仅指定二进制位为 1。</returns>
        </member>
        <member name="M:Com.BitOperation.GetBinary16WithSingleBit0(System.Int32)">
            <summary>
            返回一个仅指定二进制位为 0 的 16 位无符号整数。
            </summary>
            <param name="bit">指定的二进制位。</param>
            <returns>16 位无符号整数，该 16 位无符号整数仅指定二进制位为 0。</returns>
        </member>
        <member name="M:Com.BitOperation.AddBitToBinary(System.UInt16@,System.Int32)">
            <summary>
            将 16 位无符号整数的指定二进制位设为 1。
            </summary>
            <param name="bin">16 位无符号整数。</param>
            <param name="bit">需要处理的二进制位。</param>
        </member>
        <member name="M:Com.BitOperation.RemoveBitFromBinary(System.UInt16@,System.Int32)">
            <summary>
            将 16 位无符号整数的指定二进制位设为 0。
            </summary>
            <param name="bin">16 位无符号整数。</param>
            <param name="bit">需要处理的二进制位。</param>
        </member>
        <member name="M:Com.BitOperation.InverseBitOfBinary(System.UInt16@,System.Int32)">
            <summary>
            将 16 位无符号整数的指定二进制位反转。
            </summary>
            <param name="bin">16 位无符号整数。</param>
            <param name="bit">需要处理的二进制位。</param>
        </member>
        <member name="M:Com.BitOperation.BinaryHasBit(System.UInt16,System.Int32)">
            <summary>
            判断 16 位无符号整数的指定二进制位是否为 1。
            </summary>
            <param name="bin">16 位无符号整数。</param>
            <param name="bit">指定的二进制位。</param>
            <returns>布尔值，表示 16 位无符号整数的指定二进制位是否为 1。</returns>
        </member>
        <member name="M:Com.BitOperation.GetBit1CountOfBinary(System.UInt16)">
            <summary>
            计算 16 位无符号整数的值为 1 的二进制位的数量。
            </summary>
            <param name="bin">16 位无符号整数。</param>
            <returns>16 位无符号整数的值为 1 的二进制位的数量。</returns>
        </member>
        <member name="M:Com.BitOperation.GetBit0CountOfBinary(System.UInt16)">
            <summary>
            计算 16 位无符号整数的值为 0 的二进制位的数量。
            </summary>
            <param name="bin">16 位无符号整数。</param>
            <returns>16 位无符号整数的值为 0 的二进制位的数量。</returns>
        </member>
        <member name="M:Com.BitOperation.GetBit1IndexOfBinary(System.UInt16)">
            <summary>
            返回一个列表，列表元素表示 16 位无符号整数值为 1 的二进制位在该整数的二进制序列中从低位到高位的次序数（最低位的次序数为 0）。
            </summary>
            <param name="bin">16 位无符号整数。</param>
            <returns>32 位整数列表，列表元素表示 16 位无符号整数值为 1 的二进制位在该整数的二进制序列中从低位到高位的次序数（最低位的次序数为 0）。</returns>
        </member>
        <member name="M:Com.BitOperation.GetBit0IndexOfBinary(System.UInt16)">
            <summary>
            返回一个列表，列表元素表示 16 位无符号整数值为 0 的二进制位在该整数的二进制序列中从低位到高位的次序数（最低位的次序数为 0）。
            </summary>
            <param name="bin">16 位无符号整数。</param>
            <returns>32 位整数列表，列表元素表示 16 位无符号整数值为 0 的二进制位在该整数的二进制序列中从低位到高位的次序数（最低位的次序数为 0）。</returns>
        </member>
        <member name="M:Com.BitOperation.GetBinary32WithSingleBit1(System.Int32)">
            <summary>
            返回一个仅指定二进制位为 1 的 32 位无符号整数。
            </summary>
            <param name="bit">指定的二进制位。</param>
            <returns>32 位无符号整数，该 32 位无符号整数仅指定二进制位为 1。</returns>
        </member>
        <member name="M:Com.BitOperation.GetBinary32WithSingleBit0(System.Int32)">
            <summary>
            返回一个仅指定二进制位为 0 的 32 位无符号整数。
            </summary>
            <param name="bit">指定的二进制位。</param>
            <returns>32 位无符号整数，该 32 位无符号整数仅指定二进制位为 0。</returns>
        </member>
        <member name="M:Com.BitOperation.AddBitToBinary(System.UInt32@,System.Int32)">
            <summary>
            将 32 位无符号整数的指定二进制位设为 1。
            </summary>
            <param name="bin">32 位无符号整数。</param>
            <param name="bit">需要处理的二进制位。</param>
        </member>
        <member name="M:Com.BitOperation.RemoveBitFromBinary(System.UInt32@,System.Int32)">
            <summary>
            将 32 位无符号整数的指定二进制位设为 0。
            </summary>
            <param name="bin">32 位无符号整数。</param>
            <param name="bit">需要处理的二进制位。</param>
        </member>
        <member name="M:Com.BitOperation.InverseBitOfBinary(System.UInt32@,System.Int32)">
            <summary>
            将 32 位无符号整数的指定二进制位反转。
            </summary>
            <param name="bin">32 位无符号整数。</param>
            <param name="bit">需要处理的二进制位。</param>
        </member>
        <member name="M:Com.BitOperation.BinaryHasBit(System.UInt32,System.Int32)">
            <summary>
            判断 32 位无符号整数的指定二进制位是否为 1。
            </summary>
            <param name="bin">32 位无符号整数。</param>
            <param name="bit">指定的二进制位。</param>
            <returns>布尔值，表示 32 位无符号整数的指定二进制位是否为 1。</returns>
        </member>
        <member name="M:Com.BitOperation.GetBit1CountOfBinary(System.UInt32)">
            <summary>
            计算 32 位无符号整数的值为 1 的二进制位的数量。
            </summary>
            <param name="bin">32 位无符号整数。</param>
            <returns>32 位无符号整数的值为 1 的二进制位的数量。</returns>
        </member>
        <member name="M:Com.BitOperation.GetBit0CountOfBinary(System.UInt32)">
            <summary>
            计算 32 位无符号整数的值为 0 的二进制位的数量。
            </summary>
            <param name="bin">32 位无符号整数。</param>
            <returns>32 位无符号整数的值为 0 的二进制位的数量。</returns>
        </member>
        <member name="M:Com.BitOperation.GetBit1IndexOfBinary(System.UInt32)">
            <summary>
            返回一个列表，列表元素表示 32 位无符号整数值为 1 的二进制位在该整数的二进制序列中从低位到高位的次序数（最低位的次序数为 0）。
            </summary>
            <param name="bin">32 位无符号整数。</param>
            <returns>32 位整数列表，列表元素表示 32 位无符号整数值为 1 的二进制位在该整数的二进制序列中从低位到高位的次序数（最低位的次序数为 0）。</returns>
        </member>
        <member name="M:Com.BitOperation.GetBit0IndexOfBinary(System.UInt32)">
            <summary>
            返回一个列表，列表元素表示 32 位无符号整数值为 0 的二进制位在该整数的二进制序列中从低位到高位的次序数（最低位的次序数为 0）。
            </summary>
            <param name="bin">32 位无符号整数。</param>
            <returns>32 位整数列表，列表元素表示 32 位无符号整数值为 0 的二进制位在该整数的二进制序列中从低位到高位的次序数（最低位的次序数为 0）。</returns>
        </member>
        <member name="M:Com.BitOperation.GetBinary64WithSingleBit1(System.Int32)">
            <summary>
            返回一个仅指定二进制位为 1 的 64 位无符号整数。
            </summary>
            <param name="bit">指定的二进制位。</param>
            <returns>64 位无符号整数，该 64 位无符号整数仅指定二进制位为 1。</returns>
        </member>
        <member name="M:Com.BitOperation.GetBinary64WithSingleBit0(System.Int32)">
            <summary>
            返回一个仅指定二进制位为 0 的 64 位无符号整数。
            </summary>
            <param name="bit">指定的二进制位。</param>
            <returns>64 位无符号整数，该 64 位无符号整数仅指定二进制位为 0。</returns>
        </member>
        <member name="M:Com.BitOperation.AddBitToBinary(System.UInt64@,System.Int32)">
            <summary>
            将 64 位无符号整数的指定二进制位设为 1。
            </summary>
            <param name="bin">64 位无符号整数。</param>
            <param name="bit">需要处理的二进制位。</param>
        </member>
        <member name="M:Com.BitOperation.RemoveBitFromBinary(System.UInt64@,System.Int32)">
            <summary>
            将 64 位无符号整数的指定二进制位设为 0。
            </summary>
            <param name="bin">64 位无符号整数。</param>
            <param name="bit">需要处理的二进制位。</param>
        </member>
        <member name="M:Com.BitOperation.InverseBitOfBinary(System.UInt64@,System.Int32)">
            <summary>
            将 64 位无符号整数的指定二进制位反转。
            </summary>
            <param name="bin">64 位无符号整数。</param>
            <param name="bit">需要处理的二进制位。</param>
        </member>
        <member name="M:Com.BitOperation.BinaryHasBit(System.UInt64,System.Int32)">
            <summary>
            判断 64 位无符号整数的指定二进制位是否为 1。
            </summary>
            <param name="bin">64 位无符号整数。</param>
            <param name="bit">指定的二进制位。</param>
            <returns>布尔值，表示 64 位无符号整数的指定二进制位是否为 1。</returns>
        </member>
        <member name="M:Com.BitOperation.GetBit1CountOfBinary(System.UInt64)">
            <summary>
            计算 64 位无符号整数的值为 1 的二进制位的数量。
            </summary>
            <param name="bin">64 位无符号整数。</param>
            <returns>64 位无符号整数的值为 1 的二进制位的数量。</returns>
        </member>
        <member name="M:Com.BitOperation.GetBit0CountOfBinary(System.UInt64)">
            <summary>
            计算 64 位无符号整数的值为 0 的二进制位的数量。
            </summary>
            <param name="bin">64 位无符号整数。</param>
            <returns>64 位无符号整数的值为 0 的二进制位的数量。</returns>
        </member>
        <member name="M:Com.BitOperation.GetBit1IndexOfBinary(System.UInt64)">
            <summary>
            返回一个列表，列表元素表示 64 位无符号整数值为 1 的二进制位在该整数的二进制序列中从低位到高位的次序数（最低位的次序数为 0）。
            </summary>
            <param name="bin">64 位无符号整数。</param>
            <returns>32 位整数列表，列表元素表示 64 位无符号整数值为 1 的二进制位在该整数的二进制序列中从低位到高位的次序数（最低位的次序数为 0）。</returns>
        </member>
        <member name="M:Com.BitOperation.GetBit0IndexOfBinary(System.UInt64)">
            <summary>
            返回一个列表，列表元素表示 64 位无符号整数值为 0 的二进制位在该整数的二进制序列中从低位到高位的次序数（最低位的次序数为 0）。
            </summary>
            <param name="bin">64 位无符号整数。</param>
            <returns>32 位整数列表，列表元素表示 64 位无符号整数值为 0 的二进制位在该整数的二进制序列中从低位到高位的次序数（最低位的次序数为 0）。</returns>
        </member>
        <member name="T:Com.ColorX">
            <summary>
            以双精度浮点数在 RGB、HSV、HSL、CMYK、LAB、YUV 等色彩空间表示的颜色。
            </summary>
        </member>
        <member name="M:Com.ColorX.#ctor(System.Drawing.Color)">
            <summary>
            使用 Color 结构初始化 ColorX 结构的新实例。
            </summary>
            <param name="color">Color 结构。</param>
        </member>
        <member name="M:Com.ColorX.#ctor(System.Int32)">
            <summary>
            使用颜色的 32 位 ARGB 值初始化 ColorX 结构的新实例。
            </summary>
            <param name="argb">颜色在 RGB 色彩空间的 32 位 ARGB 值。</param>
        </member>
        <member name="M:Com.ColorX.#ctor(System.String)">
            <summary>
            使用颜色的名称初始化 ColorX 结构的新实例。
            </summary>
            <param name="name">颜色的名称。</param>
        </member>
        <member name="F:Com.ColorX.Empty">
            <summary>
            表示所有属性为其数据类型的默认值的 ColorX 结构的实例。
            </summary>
        </member>
        <member name="F:Com.ColorX.Transparent">
            <summary>
            表示透明色的 ColorX 结构的实例。
            </summary>
        </member>
        <member name="P:Com.ColorX.IsEmpty">
            <summary>
            获取表示此 ColorX 结构是否未初始化的布尔值。
            </summary>
        </member>
        <member name="P:Com.ColorX.IsTransparent">
            <summary>
            获取表示此 ColorX 结构是否为透明色的布尔值。
            </summary>
        </member>
        <member name="P:Com.ColorX.IsTrueColor">
            <summary>
            获取表示此 ColorX 结构是否为 32 位真彩色的布尔值。
            </summary>
        </member>
        <member name="P:Com.ColorX.Opacity">
            <summary>
            获取或设置此 ColorX 结构的不透明度。
            </summary>
        </member>
        <member name="P:Com.ColorX.Alpha">
            <summary>
            获取或设置此 ColorX 结构的 Alpha 通道（A）的值。
            </summary>
        </member>
        <member name="P:Com.ColorX.RGB">
            <summary>
            获取或设置表示此 ColorX 结构在 RGB 色彩空间的各分量的 PointD3D 结构。
            </summary>
        </member>
        <member name="P:Com.ColorX.Red">
            <summary>
            获取或设置此 ColorX 结构在 RGB 色彩空间的红色通道（R）的值。
            </summary>
        </member>
        <member name="P:Com.ColorX.Green">
            <summary>
            获取或设置此 ColorX 结构在 RGB 色彩空间的绿色通道（G）的值。
            </summary>
        </member>
        <member name="P:Com.ColorX.Blue">
            <summary>
            获取或设置此 ColorX 结构在 RGB 色彩空间的蓝色通道（B）的值。
            </summary>
        </member>
        <member name="P:Com.ColorX.HSV">
            <summary>
            获取或设置表示此 ColorX 结构在 HSV 色彩空间的各分量的 PointD3D 结构。
            </summary>
        </member>
        <member name="P:Com.ColorX.Hue_HSV">
            <summary>
            获取或设置此 ColorX 结构在 HSV 色彩空间的色相（H）。
            </summary>
        </member>
        <member name="P:Com.ColorX.Saturation_HSV">
            <summary>
            获取或设置此 ColorX 结构在 HSV 色彩空间的饱和度（S）。
            </summary>
        </member>
        <member name="P:Com.ColorX.Brightness">
            <summary>
            获取或设置此 ColorX 结构在 HSV 色彩空间的亮度（V）。
            </summary>
        </member>
        <member name="P:Com.ColorX.HSL">
            <summary>
            获取或设置表示此 ColorX 结构在 HSL 色彩空间的各分量的 PointD3D 结构。
            </summary>
        </member>
        <member name="P:Com.ColorX.Hue_HSL">
            <summary>
            获取或设置此 ColorX 结构在 HSL 色彩空间的色相（H）。
            </summary>
        </member>
        <member name="P:Com.ColorX.Saturation_HSL">
            <summary>
            获取或设置此 ColorX 结构在 HSL 色彩空间的饱和度（S）。
            </summary>
        </member>
        <member name="P:Com.ColorX.Lightness_HSL">
            <summary>
            获取或设置此 ColorX 结构在 HSL 色彩空间的明度（L）。
            </summary>
        </member>
        <member name="P:Com.ColorX.CMYK">
            <summary>
            获取或设置表示此 ColorX 结构在 CMYK 色彩空间的各分量的 PointD4D 结构。
            </summary>
        </member>
        <member name="P:Com.ColorX.Cyan">
            <summary>
            获取或设置此 ColorX 结构在 CMYK 色彩空间的青色通道（C）的值。
            </summary>
        </member>
        <member name="P:Com.ColorX.Magenta">
            <summary>
            获取或设置此 ColorX 结构在 CMYK 色彩空间的洋红色通道（M）的值。
            </summary>
        </member>
        <member name="P:Com.ColorX.Yellow">
            <summary>
            获取或设置此 ColorX 结构在 CMYK 色彩空间的黄色通道（Y）的值。
            </summary>
        </member>
        <member name="P:Com.ColorX.Black">
            <summary>
            获取或设置此 ColorX 结构在 CMYK 色彩空间的黑色通道（K）的值。
            </summary>
        </member>
        <member name="P:Com.ColorX.LAB">
            <summary>
            获取或设置表示此 ColorX 结构在 LAB 色彩空间的各分量的 PointD3D 结构。
            </summary>
        </member>
        <member name="P:Com.ColorX.Lightness_LAB">
            <summary>
            获取或设置此 ColorX 结构在 LAB 色彩空间的明度（L）。
            </summary>
        </member>
        <member name="P:Com.ColorX.GreenRed">
            <summary>
            获取或设置此 ColorX 结构在 LAB 色彩空间的绿色-红色通道（A）的值。
            </summary>
        </member>
        <member name="P:Com.ColorX.BlueYellow">
            <summary>
            获取或设置此 ColorX 结构在 LAB 色彩空间的蓝色-黄色通道（B）的值。
            </summary>
        </member>
        <member name="P:Com.ColorX.YUV">
            <summary>
            获取或设置表示此 ColorX 结构在 YUV 色彩空间的各分量的 PointD3D 结构。
            </summary>
        </member>
        <member name="P:Com.ColorX.Luminance">
            <summary>
            获取或设置此 ColorX 结构在 YUV 色彩空间的亮度（Y）。
            </summary>
        </member>
        <member name="P:Com.ColorX.ChrominanceBlue">
            <summary>
            获取或设置此 ColorX 结构在 YUV 色彩空间的蓝色色度（U）。
            </summary>
        </member>
        <member name="P:Com.ColorX.ChrominanceRed">
            <summary>
            获取或设置此 ColorX 结构在 YUV 色彩空间的红色色度（V）。
            </summary>
        </member>
        <member name="P:Com.ColorX.Invert">
            <summary>
            获取此 ColorX 结构的相反色。
            </summary>
        </member>
        <member name="P:Com.ColorX.Complementary">
            <summary>
            获取此 ColorX 结构的互补色。
            </summary>
        </member>
        <member name="P:Com.ColorX.ComplementaryColor">
            <summary>
            获取此 ColorX 结构的互补色。
            </summary>
        </member>
        <member name="P:Com.ColorX.Grayscale">
            <summary>
            获取此 ColorX 结构的灰度颜色。
            </summary>
        </member>
        <member name="P:Com.ColorX.GrayscaleColor">
            <summary>
            获取此 ColorX 结构的灰度颜色。
            </summary>
        </member>
        <member name="P:Com.ColorX.ARGBHexCode">
            <summary>
            获取此 ColorX 结构的 16 进制 ARGB 码。
            </summary>
        </member>
        <member name="P:Com.ColorX.RGBHexCode">
            <summary>
            获取此 ColorX 结构的 16 进制 RGB 码。
            </summary>
        </member>
        <member name="P:Com.ColorX.Name">
            <summary>
            获取此 ColorX 结构的名称。
            </summary>
        </member>
        <member name="M:Com.ColorX.Equals(System.Object)">
            <summary>
            判断此 ColorX 结构是否与指定的对象相等。
            </summary>
            <param name="obj">用于比较的对象。</param>
            <returns>布尔值，表示此 ColorX 结构是否与指定的对象相等。</returns>
        </member>
        <member name="M:Com.ColorX.GetHashCode">
            <summary>
            返回此 ColorX 结构的哈希代码。
            </summary>
            <returns>32 位整数，表示此 ColorX 结构的哈希代码。</returns>
        </member>
        <member name="M:Com.ColorX.ToString">
            <summary>
            将此 ColorX 结构转换为字符串。
            </summary>
            <returns>字符串，表示此 ColorX 结构的字符串形式。</returns>
        </member>
        <member name="M:Com.ColorX.Equals(Com.ColorX)">
            <summary>
            判断此 ColorX 结构是否与指定的 ColorX 结构相等。
            </summary>
            <param name="color">用于比较的 ColorX 结构。</param>
            <returns>布尔值，表示此 ColorX 结构是否与指定的 ColorX 结构相等。</returns>
        </member>
        <member name="M:Com.ColorX.ToColor">
            <summary>
            返回将此 ColorX 结构转换为 Color 结构的新实例。
            </summary>
            <returns>Color 结构，表示将此 ColorX 结构转换为 Color 结构得到的结果。</returns>
        </member>
        <member name="M:Com.ColorX.ToARGB">
            <summary>
            返回将此 ColorX 结构转换为 Color 结构的 32 位 ARGB 值。
            </summary>
            <returns>32 位整数，表示将此 ColorX 结构转换为 Color 结构的 32 位 ARGB 值。</returns>
        </member>
        <member name="M:Com.ColorX.AtOpacity(System.Double)">
            <summary>
            返回将此 ColorX 结构的不透明度更改为指定值的 ColorX 结构的新实例。
            </summary>
            <param name="opacity">颜色的不透明度。</param>
            <returns>ColorX 结构，表示将此 ColorX 结构的不透明度更改为指定值得到的结果。</returns>
        </member>
        <member name="M:Com.ColorX.AtAlpha(System.Double)">
            <summary>
            返回将此 ColorX 结构的 Alpha 通道（A）的值更改为指定值的 ColorX 结构的新实例。
            </summary>
            <param name="alpha">颜色的 Alpha 通道（A）的值。</param>
            <returns>ColorX 结构，表示将此 ColorX 结构的 Alpha 通道（A）的值更改为指定值得到的结果。</returns>
        </member>
        <member name="M:Com.ColorX.AtRed(System.Double)">
            <summary>
            返回将此 ColorX 结构在 RGB 色彩空间的红色通道（R）的值更改为指定值的 ColorX 结构的新实例。
            </summary>
            <param name="red">颜色在 RGB 色彩空间的红色通道（R）的值。</param>
            <returns>ColorX 结构，表示将此 ColorX 结构在 RGB 色彩空间的红色通道（R）的值更改为指定值得到的结果。</returns>
        </member>
        <member name="M:Com.ColorX.AtGreen(System.Double)">
            <summary>
            返回将此 ColorX 结构在 RGB 色彩空间的绿色通道（G）的值更改为指定值的 ColorX 结构的新实例。
            </summary>
            <param name="green">颜色在 RGB 色彩空间的绿色通道（G）的值。</param>
            <returns>ColorX 结构，表示将此 ColorX 结构在 RGB 色彩空间的绿色通道（G）的值更改为指定值得到的结果。</returns>
        </member>
        <member name="M:Com.ColorX.AtBlue(System.Double)">
            <summary>
            返回将此 ColorX 结构在 RGB 色彩空间的蓝色通道（B）的值更改为指定值的 ColorX 结构的新实例。
            </summary>
            <param name="blue">颜色在 RGB 色彩空间的蓝色通道（B）的值。</param>
            <returns>ColorX 结构，表示将此 ColorX 结构在 RGB 色彩空间的蓝色通道（B）的值更改为指定值得到的结果。</returns>
        </member>
        <member name="M:Com.ColorX.AtHue_HSV(System.Double)">
            <summary>
            返回将此 ColorX 结构在 HSV 色彩空间的色相（H）更改为指定值的 ColorX 结构的新实例。
            </summary>
            <param name="hue">颜色在 HSV 色彩空间的色相（H）。</param>
            <returns>ColorX 结构，表示将此 ColorX 结构在 HSV 色彩空间的色相（H）更改为指定值得到的结果。</returns>
        </member>
        <member name="M:Com.ColorX.AtSaturation_HSV(System.Double)">
            <summary>
            返回将此 ColorX 结构在 HSV 色彩空间的饱和度（S）更改为指定值的 ColorX 结构的新实例。
            </summary>
            <param name="saturation">颜色在 HSV 色彩空间的饱和度（S）。</param>
            <returns>ColorX 结构，表示将此 ColorX 结构在 HSV 色彩空间的饱和度（S）更改为指定值得到的结果。</returns>
        </member>
        <member name="M:Com.ColorX.AtBrightness(System.Double)">
            <summary>
            返回将此 ColorX 结构在 HSV 色彩空间的亮度（V）更改为指定值的 ColorX 结构的新实例。
            </summary>
            <param name="brightness">颜色在 HSV 色彩空间的亮度（V）。</param>
            <returns>ColorX 结构，表示将此 ColorX 结构在 HSV 色彩空间的亮度（V）更改为指定值得到的结果。</returns>
        </member>
        <member name="M:Com.ColorX.AtHue_HSL(System.Double)">
            <summary>
            返回将此 ColorX 结构在 HSL 色彩空间的色相（H）更改为指定值的 ColorX 结构的新实例。
            </summary>
            <param name="hue">颜色在 HSL 色彩空间的色相（H）。</param>
            <returns>ColorX 结构，表示将此 ColorX 结构在 HSL 色彩空间的色相（H）更改为指定值得到的结果。</returns>
        </member>
        <member name="M:Com.ColorX.AtSaturation_HSL(System.Double)">
            <summary>
            返回将此 ColorX 结构在 HSL 色彩空间的饱和度（S）更改为指定值的 ColorX 结构的新实例。
            </summary>
            <param name="saturation">颜色在 HSL 色彩空间的饱和度（S）。</param>
            <returns>ColorX 结构，表示将此 ColorX 结构在 HSL 色彩空间的饱和度（S）更改为指定值得到的结果。</returns>
        </member>
        <member name="M:Com.ColorX.AtLightness_HSL(System.Double)">
            <summary>
            返回将此 ColorX 结构在 HSL 色彩空间的明度（L）更改为指定值的 ColorX 结构的新实例。
            </summary>
            <param name="lightness">颜色在 HSL 色彩空间的明度（L）。</param>
            <returns>ColorX 结构，表示将此 ColorX 结构在 HSL 色彩空间的明度（L）更改为指定值得到的结果。</returns>
        </member>
        <member name="M:Com.ColorX.AtCyan(System.Double)">
            <summary>
            返回将此 ColorX 结构在 CMYK 色彩空间的青色通道（C）的值更改为指定值的 ColorX 结构的新实例。
            </summary>
            <param name="cyan">颜色在 CMYK 色彩空间的青色通道（C）的值。</param>
            <returns>ColorX 结构，表示将此 ColorX 结构在 CMYK 色彩空间的青色通道（C）的值更改为指定值得到的结果。</returns>
        </member>
        <member name="M:Com.ColorX.AtMagenta(System.Double)">
            <summary>
            返回将此 ColorX 结构在 CMYK 色彩空间的洋红色通道（M）的值更改为指定值的 ColorX 结构的新实例。
            </summary>
            <param name="magenta">颜色在 CMYK 色彩空间的洋红色通道（M）的值。</param>
            <returns>ColorX 结构，表示将此 ColorX 结构在 CMYK 色彩空间的洋红色通道（M）的值更改为指定值得到的结果。</returns>
        </member>
        <member name="M:Com.ColorX.AtYellow(System.Double)">
            <summary>
            返回将此 ColorX 结构在 CMYK 色彩空间的黄色通道（Y）的值更改为指定值的 ColorX 结构的新实例。
            </summary>
            <param name="yellow">颜色在 CMYK 色彩空间的黄色通道（Y）的值。</param>
            <returns>ColorX 结构，表示将此 ColorX 结构在 CMYK 色彩空间的黄色通道（Y）的值更改为指定值得到的结果。</returns>
        </member>
        <member name="M:Com.ColorX.AtBlack(System.Double)">
            <summary>
            返回将此 ColorX 结构在 CMYK 色彩空间的黑色通道（K）的值更改为指定值的 ColorX 结构的新实例。
            </summary>
            <param name="black">颜色在 CMYK 色彩空间的黑色通道（K）的值。</param>
            <returns>ColorX 结构，表示将此 ColorX 结构在 CMYK 色彩空间的黑色通道（K）的值更改为指定值得到的结果。</returns>
        </member>
        <member name="M:Com.ColorX.AtLightness_LAB(System.Double)">
            <summary>
            返回将此 ColorX 结构在 LAB 色彩空间的明度（L）更改为指定值的 ColorX 结构的新实例。
            </summary>
            <param name="lightness">颜色在 LAB 色彩空间的明度（L）。</param>
            <returns>ColorX 结构，表示将此 ColorX 结构在 LAB 色彩空间的明度（L）更改为指定值得到的结果。</returns>
        </member>
        <member name="M:Com.ColorX.AtGreenRed(System.Double)">
            <summary>
            返回将此 ColorX 结构在 LAB 色彩空间的绿色-红色通道（A）的值更改为指定值的 ColorX 结构的新实例。
            </summary>
            <param name="greenRed">颜色在 LAB 色彩空间的绿色-红色通道（A）的值。</param>
            <returns>ColorX 结构，表示将此 ColorX 结构在 LAB 色彩空间的绿色-红色通道（A）的值更改为指定值得到的结果。</returns>
        </member>
        <member name="M:Com.ColorX.AtBlueYellow(System.Double)">
            <summary>
            返回将此 ColorX 结构在 LAB 色彩空间的蓝色-黄色通道（B）的值更改为指定值的 ColorX 结构的新实例。
            </summary>
            <param name="blueYellow">颜色在 LAB 色彩空间的蓝色-黄色通道（B）的值。</param>
            <returns>ColorX 结构，表示将此 ColorX 结构在 LAB 色彩空间的蓝色-黄色通道（B）的值更改为指定值得到的结果。</returns>
        </member>
        <member name="M:Com.ColorX.AtLuminance(System.Double)">
            <summary>
            返回将此 ColorX 结构在 YUV 色彩空间的亮度（Y）更改为指定值的 ColorX 结构的新实例。
            </summary>
            <param name="luminance">颜色在 YUV 色彩空间的亮度（Y）。</param>
            <returns>ColorX 结构，表示将此 ColorX 结构在 YUV 色彩空间的亮度（Y）更改为指定值得到的结果。</returns>
        </member>
        <member name="M:Com.ColorX.AtChrominanceBlue(System.Double)">
            <summary>
            返回将此 ColorX 结构在 YUV 色彩空间的蓝色色度（U）更改为指定值的 ColorX 结构的新实例。
            </summary>
            <param name="chrominanceBlue">颜色在 YUV 色彩空间的蓝色色度（U）。</param>
            <returns>ColorX 结构，表示将此 ColorX 结构在 YUV 色彩空间的蓝色色度（U）更改为指定值得到的结果。</returns>
        </member>
        <member name="M:Com.ColorX.AtChrominanceRed(System.Double)">
            <summary>
            返回将此 ColorX 结构在 YUV 色彩空间的红色色度（V）更改为指定值的 ColorX 结构的新实例。
            </summary>
            <param name="chrominanceRed">颜色在 YUV 色彩空间的红色色度（V）。</param>
            <returns>ColorX 结构，表示将此 ColorX 结构在 YUV 色彩空间的红色色度（V）更改为指定值得到的结果。</returns>
        </member>
        <member name="M:Com.ColorX.Equals(Com.ColorX,Com.ColorX)">
            <summary>
            判断两个 ColorX 结构是否相等。
            </summary>
            <param name="left">用于比较的第一个 ColorX 结构。</param>
            <param name="right">用于比较的第二个 ColorX 结构。</param>
            <returns>布尔值，表示两个 ColorX 结构是否相等。</returns>
        </member>
        <member name="M:Com.ColorX.FromColor(System.Int32,System.Drawing.Color)">
            <summary>
            返回将 Color 结构转换为 ColorX 结构的新实例。
            </summary>
            <param name="alpha">Alpha 通道（A）的值。</param>
            <param name="color">Color 结构。</param>
            <returns>ColorX 结构，表示将 Color 结构转换为 ColorX 结构得到的结果。</returns>
        </member>
        <member name="M:Com.ColorX.FromColor(System.Drawing.Color)">
            <summary>
            返回将 Color 结构转换为 ColorX 结构的新实例。
            </summary>
            <param name="color">Color 结构。</param>
            <returns>ColorX 结构，表示将 Color 结构转换为 ColorX 结构得到的结果。</returns>
        </member>
        <member name="M:Com.ColorX.FromRGB(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            返回将颜色在 RGB 色彩空间的各分量转换为 ColorX 结构的新实例。
            </summary>
            <param name="alpha">颜色的 Alpha 通道（A）的值。</param>
            <param name="red">颜色在 RGB 色彩空间的红色通道（R）的值。</param>
            <param name="green">颜色在 RGB 色彩空间的绿色通道（G）的值。</param>
            <param name="blue">颜色在 RGB 色彩空间的蓝色通道（B）的值。</param>
            <returns>ColorX 结构，表示将颜色在 RGB 色彩空间的各分量转换为 ColorX 结构得到的结果。</returns>
        </member>
        <member name="M:Com.ColorX.FromRGB(System.Double,System.Double,System.Double)">
            <summary>
            返回将颜色在 RGB 色彩空间的各分量转换为 ColorX 结构的新实例。
            </summary>
            <param name="red">颜色在 RGB 色彩空间的红色通道（R）的值。</param>
            <param name="green">颜色在 RGB 色彩空间的绿色通道（G）的值。</param>
            <param name="blue">颜色在 RGB 色彩空间的蓝色通道（B）的值。</param>
            <returns>ColorX 结构，表示将颜色在 RGB 色彩空间的各分量转换为 ColorX 结构得到的结果。</returns>
        </member>
        <member name="M:Com.ColorX.FromRGB(System.Double,Com.PointD3D)">
            <summary>
            返回将颜色在 RGB 色彩空间的各分量转换为 ColorX 结构的新实例。
            </summary>
            <param name="alpha">颜色的 Alpha 通道（A）的值。</param>
            <param name="rgb">表示颜色在 RGB 色彩空间的各分量的 PointD3D 结构。</param>
            <returns>ColorX 结构，表示将颜色在 RGB 色彩空间的各分量转换为 ColorX 结构得到的结果。</returns>
        </member>
        <member name="M:Com.ColorX.FromRGB(Com.PointD3D)">
            <summary>
            返回将颜色在 RGB 色彩空间的各分量转换为 ColorX 结构的新实例。
            </summary>
            <param name="rgb">表示颜色在 RGB 色彩空间的各分量的 PointD3D 结构。</param>
            <returns>ColorX 结构，表示将颜色在 RGB 色彩空间的各分量转换为 ColorX 结构得到的结果。</returns>
        </member>
        <member name="M:Com.ColorX.FromRGB(System.Int32)">
            <summary>
            返回将颜色在 RGB 色彩空间的 32 位 ARGB 值转换为 ColorX 结构的新实例。
            </summary>
            <param name="argb">颜色在 RGB 色彩空间的 32 位 ARGB 值。</param>
            <returns>ColorX 结构，表示将颜色在 RGB 色彩空间的 32 位 ARGB 值转换为 ColorX 结构得到的结果。</returns>
        </member>
        <member name="M:Com.ColorX.FromHSV(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            返回将颜色在 HSV 色彩空间的各分量转换为 ColorX 结构的新实例。
            </summary>
            <param name="hue">颜色在 HSV 色彩空间的色相（H）。</param>
            <param name="saturation">颜色在 HSV 色彩空间的饱和度（S）。</param>
            <param name="brightness">颜色在 HSV 色彩空间的亮度（V）。</param>
            <param name="opacity">颜色的不透明度。</param>
            <returns>ColorX 结构，表示将颜色在 HSV 色彩空间的各分量转换为 ColorX 结构得到的结果。</returns>
        </member>
        <member name="M:Com.ColorX.FromHSV(System.Double,System.Double,System.Double)">
            <summary>
            返回将颜色在 HSV 色彩空间的各分量转换为 ColorX 结构的新实例。
            </summary>
            <param name="hue">颜色在 HSV 色彩空间的色相（H）。</param>
            <param name="saturation">颜色在 HSV 色彩空间的饱和度（S）。</param>
            <param name="brightness">颜色在 HSV 色彩空间的亮度（V）。</param>
            <returns>ColorX 结构，表示将颜色在 HSV 色彩空间的各分量转换为 ColorX 结构得到的结果。</returns>
        </member>
        <member name="M:Com.ColorX.FromHSV(Com.PointD3D,System.Double)">
            <summary>
            返回将颜色在 HSV 色彩空间的各分量转换为 ColorX 结构的新实例。
            </summary>
            <param name="hsv">表示颜色在 HSV 色彩空间的各分量的 PointD3D 结构。</param>
            <param name="opacity">颜色的不透明度。</param>
            <returns>ColorX 结构，表示将颜色在 HSV 色彩空间的各分量转换为 ColorX 结构得到的结果。</returns>
        </member>
        <member name="M:Com.ColorX.FromHSV(Com.PointD3D)">
            <summary>
            返回将颜色在 HSV 色彩空间的各分量转换为 ColorX 结构的新实例。
            </summary>
            <param name="hsv">表示颜色在 HSV 色彩空间的各分量的 PointD3D 结构。</param>
            <returns>ColorX 结构，表示将颜色在 HSV 色彩空间的各分量转换为 ColorX 结构得到的结果。</returns>
        </member>
        <member name="M:Com.ColorX.FromHSL(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            返回将颜色在 HSL 色彩空间的各分量转换为 ColorX 结构的新实例。
            </summary>
            <param name="hue">颜色在 HSL 色彩空间的色相（H）。</param>
            <param name="saturation">颜色在 HSL 色彩空间的饱和度（S）。</param>
            <param name="lightness">颜色在 HSL 色彩空间的明度（L）。</param>
            <param name="opacity">颜色的不透明度。</param>
            <returns>ColorX 结构，表示将颜色在 HSL 色彩空间的各分量转换为 ColorX 结构得到的结果。</returns>
        </member>
        <member name="M:Com.ColorX.FromHSL(System.Double,System.Double,System.Double)">
            <summary>
            返回将颜色在 HSL 色彩空间的各分量转换为 ColorX 结构的新实例。
            </summary>
            <param name="hue">颜色在 HSL 色彩空间的色相（H）。</param>
            <param name="saturation">颜色在 HSL 色彩空间的饱和度（S）。</param>
            <param name="lightness">颜色在 HSL 色彩空间的明度（L）。</param>
            <returns>ColorX 结构，表示将颜色在 HSL 色彩空间的各分量转换为 ColorX 结构得到的结果。</returns>
        </member>
        <member name="M:Com.ColorX.FromHSL(Com.PointD3D,System.Double)">
            <summary>
            返回将颜色在 HSL 色彩空间的各分量转换为 ColorX 结构的新实例。
            </summary>
            <param name="hsl">表示颜色在 HSL 色彩空间的各分量的 PointD3D 结构。</param>
            <param name="opacity">颜色的不透明度。</param>
            <returns>ColorX 结构，表示将颜色在 HSL 色彩空间的各分量转换为 ColorX 结构得到的结果。</returns>
        </member>
        <member name="M:Com.ColorX.FromHSL(Com.PointD3D)">
            <summary>
            返回将颜色在 HSL 色彩空间的各分量转换为 ColorX 结构的新实例。
            </summary>
            <param name="hsl">表示颜色在 HSL 色彩空间的各分量的 PointD3D 结构。</param>
            <returns>ColorX 结构，表示将颜色在 HSL 色彩空间的各分量转换为 ColorX 结构得到的结果。</returns>
        </member>
        <member name="M:Com.ColorX.FromCMYK(System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            返回将颜色在 CMYK 色彩空间的各分量转换为 ColorX 结构的新实例。
            </summary>
            <param name="cyan">颜色在 CMYK 色彩空间的青色通道（C）的值。</param>
            <param name="magenta">颜色在 CMYK 色彩空间的洋红色通道（M）的值。</param>
            <param name="yellow">颜色在 CMYK 色彩空间的黄色通道（Y）的值。</param>
            <param name="black">颜色在 CMYK 色彩空间的黑色通道（K）的值。</param>
            <param name="opacity">颜色的不透明度。</param>
            <returns>ColorX 结构，表示将颜色在 CMYK 色彩空间的各分量转换为 ColorX 结构得到的结果。</returns>
        </member>
        <member name="M:Com.ColorX.FromCMYK(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            返回将颜色在 CMYK 色彩空间的各分量转换为 ColorX 结构的新实例。
            </summary>
            <param name="cyan">颜色在 CMYK 色彩空间的青色通道（C）的值。</param>
            <param name="magenta">颜色在 CMYK 色彩空间的洋红色通道（M）的值。</param>
            <param name="yellow">颜色在 CMYK 色彩空间的黄色通道（Y）的值。</param>
            <param name="black">颜色在 CMYK 色彩空间的黑色通道（K）的值。</param>
            <returns>ColorX 结构，表示将颜色在 CMYK 色彩空间的各分量转换为 ColorX 结构得到的结果。</returns>
        </member>
        <member name="M:Com.ColorX.FromCMYK(Com.PointD4D,System.Double)">
            <summary>
            返回将颜色在 CMYK 色彩空间的各分量转换为 ColorX 结构的新实例。
            </summary>
            <param name="cmyk">表示颜色在 CMYK 色彩空间的各分量的 PointD4D 结构。</param>
            <param name="opacity">颜色的不透明度。</param>
            <returns>ColorX 结构，表示将颜色在 CMYK 色彩空间的各分量转换为 ColorX 结构得到的结果。</returns>
        </member>
        <member name="M:Com.ColorX.FromCMYK(Com.PointD4D)">
            <summary>
            返回将颜色在 CMYK 色彩空间的各分量转换为 ColorX 结构的新实例。
            </summary>
            <param name="cmyk">表示颜色在 CMYK 色彩空间的各分量的 PointD4D 结构。</param>
            <returns>ColorX 结构，表示将颜色在 CMYK 色彩空间的各分量转换为 ColorX 结构得到的结果。</returns>
        </member>
        <member name="M:Com.ColorX.FromLAB(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            返回将颜色在 LAB 色彩空间的各分量转换为 ColorX 结构的新实例。
            </summary>
            <param name="lightness">颜色在 LAB 色彩空间的明度（L）。</param>
            <param name="greenRed">颜色在 LAB 色彩空间的绿色-红色通道（A）的值。</param>
            <param name="blueYellow">颜色在 LAB 色彩空间的蓝色-黄色通道（B）的值。</param>
            <param name="opacity">颜色的不透明度。</param>
            <returns>ColorX 结构，表示将颜色在 LAB 色彩空间的各分量转换为 ColorX 结构得到的结果。</returns>
        </member>
        <member name="M:Com.ColorX.FromLAB(System.Double,System.Double,System.Double)">
            <summary>
            返回将颜色在 LAB 色彩空间的各分量转换为 ColorX 结构的新实例。
            </summary>
            <param name="lightness">颜色在 LAB 色彩空间的明度（L）。</param>
            <param name="greenRed">颜色在 LAB 色彩空间的绿色-红色通道（A）的值。</param>
            <param name="blueYellow">颜色在 LAB 色彩空间的蓝色-黄色通道（B）的值。</param>
            <returns>ColorX 结构，表示将颜色在 LAB 色彩空间的各分量转换为 ColorX 结构得到的结果。</returns>
        </member>
        <member name="M:Com.ColorX.FromLAB(Com.PointD3D,System.Double)">
            <summary>
            返回将颜色在 LAB 色彩空间的各分量转换为 ColorX 结构的新实例。
            </summary>
            <param name="lab">表示颜色在 LAB 色彩空间的各分量的 PointD3D 结构。</param>
            <param name="opacity">颜色的不透明度。</param>
            <returns>ColorX 结构，表示将颜色在 LAB 色彩空间的各分量转换为 ColorX 结构得到的结果。</returns>
        </member>
        <member name="M:Com.ColorX.FromLAB(Com.PointD3D)">
            <summary>
            返回将颜色在 LAB 色彩空间的各分量转换为 ColorX 结构的新实例。
            </summary>
            <param name="lab">表示颜色在 LAB 色彩空间的各分量的 PointD3D 结构。</param>
            <returns>ColorX 结构，表示将颜色在 LAB 色彩空间的各分量转换为 ColorX 结构得到的结果。</returns>
        </member>
        <member name="M:Com.ColorX.FromYUV(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            返回将颜色在 YUV 色彩空间的各分量转换为 ColorX 结构的新实例。
            </summary>
            <param name="luminance">颜色在 YUV 色彩空间的亮度（Y）。</param>
            <param name="chrominanceBlue">颜色在 YUV 色彩空间的蓝色色度（U）。</param>
            <param name="chrominanceRed">颜色在 YUV 色彩空间的红色色度（V）。</param>
            <param name="opacity">颜色的不透明度。</param>
            <returns>ColorX 结构，表示将颜色在 YUV 色彩空间的各分量转换为 ColorX 结构得到的结果。</returns>
        </member>
        <member name="M:Com.ColorX.FromYUV(System.Double,System.Double,System.Double)">
            <summary>
            返回将颜色在 YUV 色彩空间的各分量转换为 ColorX 结构的新实例。
            </summary>
            <param name="luminance">颜色在 YUV 色彩空间的亮度（Y）。</param>
            <param name="chrominanceBlue">颜色在 YUV 色彩空间的蓝色色度（U）。</param>
            <param name="chrominanceRed">颜色在 YUV 色彩空间的红色色度（V）。</param>
            <returns>ColorX 结构，表示将颜色在 YUV 色彩空间的各分量转换为 ColorX 结构得到的结果。</returns>
        </member>
        <member name="M:Com.ColorX.FromYUV(Com.PointD3D,System.Double)">
            <summary>
            返回将颜色在 YUV 色彩空间的各分量转换为 ColorX 结构的新实例。
            </summary>
            <param name="yuv">表示颜色在 YUV 色彩空间的各分量的 PointD3D 结构。</param>
            <param name="opacity">颜色的不透明度。</param>
            <returns>ColorX 结构，表示将颜色在 YUV 色彩空间的各分量转换为 ColorX 结构得到的结果。</returns>
        </member>
        <member name="M:Com.ColorX.FromYUV(Com.PointD3D)">
            <summary>
            返回将颜色在 YUV 色彩空间的各分量转换为 ColorX 结构的新实例。
            </summary>
            <param name="yuv">表示颜色在 YUV 色彩空间的各分量的 PointD3D 结构。</param>
            <returns>ColorX 结构，表示将颜色在 YUV 色彩空间的各分量转换为 ColorX 结构得到的结果。</returns>
        </member>
        <member name="M:Com.ColorX.FromHexCode(System.String)">
            <summary>
            返回将颜色的 16 进制 ARGB 码或 RGB 码转换为 ColorX 结构的新实例。
            </summary>
            <param name="hexCode">颜色的 16 进制 ARGB 码或 RGB 码。</param>
            <returns>ColorX 结构，表示将颜色的 16 进制 ARGB 码或 RGB 码转换为 ColorX 结构得到的结果。</returns>
        </member>
        <member name="M:Com.ColorX.FromName(System.String)">
            <summary>
            返回将颜色的名称转换为 ColorX 结构的新实例。
            </summary>
            <param name="name">颜色的名称。</param>
            <returns>ColorX 结构，表示将颜色的名称转换为 ColorX 结构得到的结果。</returns>
        </member>
        <member name="M:Com.ColorX.RandomColor">
            <summary>
            返回一个不透明度为 100%，其他分量为随机数的 ColorX 结构的新实例。
            </summary>
            <returns>ColorX 结构，表示不透明度为 100%，其他分量为随机数的 ColorX 结构。</returns>
        </member>
        <member name="M:Com.ColorX.op_Equality(Com.ColorX,Com.ColorX)">
            <summary>
            判断两个 ColorX 结构是否表示相同的颜色。
            </summary>
            <param name="left">运算符左侧比较的 ColorX 结构。</param>
            <param name="right">运算符右侧比较的 ColorX 结构。</param>
            <returns>布尔值，表示两个 ColorX 结构是否表示相同的颜色。</returns>
        </member>
        <member name="M:Com.ColorX.op_Inequality(Com.ColorX,Com.ColorX)">
            <summary>
            判断两个 ColorX 结构是否表示不同的颜色。
            </summary>
            <param name="left">运算符左侧比较的 ColorX 结构。</param>
            <param name="right">运算符右侧比较的 ColorX 结构。</param>
            <returns>布尔值，表示两个 ColorX 结构是否表示不同的颜色。</returns>
        </member>
        <member name="M:Com.ColorX.op_Explicit(Com.ColorX)~System.Drawing.Color">
            <summary>
            将指定的 ColorX 结构显式转换为 Color 结构。
            </summary>
            <param name="color">用于转换的 ColorX 结构。</param>
            <returns>Color 结构，表示显式转换的结果。</returns>
        </member>
        <member name="M:Com.ColorX.op_Implicit(System.Drawing.Color)~Com.ColorX">
            <summary>
            将指定的 Color 结构隐式转换为 ColorX 结构。
            </summary>
            <param name="color">用于转换的 Color 结构。</param>
            <returns>ColorX 结构，表示隐式转换的结果。</returns>
        </member>
        <member name="T:Com.Complex">
            <summary>
            以一组有序的双精度浮点数表示的直角坐标形式的二元复数。
            </summary>
        </member>
        <member name="M:Com.Complex.#ctor(System.Double,System.Double)">
            <summary>
            使用双精度浮点数表示的实部与虚部初始化 Complex 结构的新实例。
            </summary>
            <param name="real">双精度浮点数表示的实部。</param>
            <param name="imaginary">双精度浮点数表示的虚部。</param>
        </member>
        <member name="M:Com.Complex.#ctor(System.Double)">
            <summary>
            使用双精度浮点数表示的实部初始化 Complex 结构的新实例。
            </summary>
            <param name="real">双精度浮点数表示的实部。</param>
        </member>
        <member name="M:Com.Complex.#ctor(Com.PointD)">
            <summary>
            使用 PointD 结构初始化 Complex 结构的新实例。
            </summary>
            <param name="pt">PointD 结构。</param>
        </member>
        <member name="F:Com.Complex.NaN">
            <summary>
            表示非数字的 Complex 结构的实例。
            </summary>
        </member>
        <member name="F:Com.Complex.Zero">
            <summary>
            表示 0 的 Complex 结构的实例。
            </summary>
        </member>
        <member name="F:Com.Complex.One">
            <summary>
            表示实数单位 1 的 Complex 结构的实例。
            </summary>
        </member>
        <member name="F:Com.Complex.ImaginaryOne">
            <summary>
            表示虚数单位 i 的 Complex 结构的实例。
            </summary>
        </member>
        <member name="P:Com.Complex.IsNaN">
            <summary>
            获取表示此 Complex 结构是否为非数字的布尔值。
            </summary>
        </member>
        <member name="P:Com.Complex.IsInfinity">
            <summary>
            获取表示此 Complex 结构是否为无穷大的布尔值。
            </summary>
        </member>
        <member name="P:Com.Complex.IsNaNOrInfinity">
            <summary>
            获取表示此 Complex 结构是否为非数字或无穷大的布尔值。
            </summary>
        </member>
        <member name="P:Com.Complex.IsZero">
            <summary>
            获取表示此 Complex 结构是否为 0 的布尔值。
            </summary>
        </member>
        <member name="P:Com.Complex.IsOne">
            <summary>
            获取表示此 Complex 结构是否为实数单位 1 的布尔值。
            </summary>
        </member>
        <member name="P:Com.Complex.IsImaginaryOne">
            <summary>
            获取表示此 Complex 结构是否为虚数单位 i 的布尔值。
            </summary>
        </member>
        <member name="P:Com.Complex.Real">
            <summary>
            获取或设置此 Complex 结构的实部。
            </summary>
        </member>
        <member name="P:Com.Complex.Imaginary">
            <summary>
            获取或设置此 Complex 结构的虚部。
            </summary>
        </member>
        <member name="P:Com.Complex.Module">
            <summary>
            获取此 Complex 结构的模。
            </summary>
        </member>
        <member name="P:Com.Complex.ModuleSquared">
            <summary>
            获取此 Complex 结构的模的平方。
            </summary>
        </member>
        <member name="P:Com.Complex.Argument">
            <summary>
            获取此 Complex 结构的辐角（弧度）（以实轴正方向为 0 弧度，从实轴正方向指向虚轴正方向的方向为正方向）。
            </summary>
        </member>
        <member name="P:Com.Complex.Opposite">
            <summary>
            获取此 Complex 结构的相反数。
            </summary>
        </member>
        <member name="P:Com.Complex.Reciprocal">
            <summary>
            获取此 Complex 结构的倒数。
            </summary>
        </member>
        <member name="P:Com.Complex.Conjugate">
            <summary>
            获取此 Complex 结构的共轭复数。
            </summary>
        </member>
        <member name="M:Com.Complex.Equals(System.Object)">
            <summary>
            判断此 Complex 结构是否与指定的对象相等。
            </summary>
            <param name="obj">用于比较的对象。</param>
            <returns>布尔值，表示此 Complex 结构是否与指定的对象相等。</returns>
        </member>
        <member name="M:Com.Complex.GetHashCode">
            <summary>
            返回此 Complex 结构的哈希代码。
            </summary>
            <returns>32 位整数，表示此 Complex 结构的哈希代码。</returns>
        </member>
        <member name="M:Com.Complex.ToString">
            <summary>
            将此 Complex 结构转换为字符串。
            </summary>
            <returns>字符串，表示此 Complex 结构的字符串形式。</returns>
        </member>
        <member name="M:Com.Complex.Equals(Com.Complex)">
            <summary>
            判断此 Complex 结构是否与指定的 Complex 结构相等。
            </summary>
            <param name="comp">用于比较的 Complex 结构。</param>
            <returns>布尔值，表示此 Complex 结构是否与指定的 Complex 结构相等。</returns>
        </member>
        <member name="M:Com.Complex.CompareTo(System.Object)">
            <summary>
            将此 Complex 结构与指定的对象进行次序比较。
            </summary>
            <param name="obj">用于比较的对象。</param>
            <returns>32 位整数，表示将此 Complex 结构与指定的对象进行次序比较得到的结果。</returns>
        </member>
        <member name="M:Com.Complex.CompareTo(Com.Complex)">
            <summary>
            将此 Complex 结构与指定的 Complex 结构进行次序比较。
            </summary>
            <param name="comp">用于比较的 Complex 结构。</param>
            <returns>32 位整数，表示将此 Complex 结构与指定的 Complex 结构进行次序比较得到的结果。</returns>
        </member>
        <member name="M:Com.Complex.ToPointD">
            <summary>
            返回将此 Complex 结构转换为 PointD 结构的新实例。
            </summary>
            <returns>PointD 结构，表示将此 Complex 结构转换为 PointD 结构得到的结果。</returns>
        </member>
        <member name="M:Com.Complex.Equals(Com.Complex,Com.Complex)">
            <summary>
            判断两个 Complex 结构是否相等。
            </summary>
            <param name="left">用于比较的第一个 Complex 结构。</param>
            <param name="right">用于比较的第二个 Complex 结构。</param>
            <returns>布尔值，表示两个 Complex 结构是否相等。</returns>
        </member>
        <member name="M:Com.Complex.Compare(Com.Complex,Com.Complex)">
            <summary>
            比较两个 Complex 结构的次序。
            </summary>
            <param name="left">用于比较的第一个 Complex 结构。</param>
            <param name="right">用于比较的第二个 Complex 结构。</param>
            <returns>32 位整数，表示将两个 Complex 结构进行次序比较得到的结果。</returns>
        </member>
        <member name="M:Com.Complex.FromPointD(Com.PointD)">
            <summary>
            返回将 PointD 结构转换为 Complex 结构的新实例。
            </summary>
            <param name="pt">PointD 结构。</param>
            <returns>Complex 结构，表示将 PointD 结构转换为 Complex 结构得到的结果。</returns>
        </member>
        <member name="M:Com.Complex.FromPolarCoordinates(System.Double,System.Double)">
            <summary>
            返回将 Complex 结构的极坐标分量模与辐角（弧度）转换为 Complex 结构的新实例。
            </summary>
            <param name="module">表示 Complex 结构的模。</param>
            <param name="argument">表示 Complex 结构的辐角（弧度）。</param>
            <returns>Complex 结构，表示将 Complex 结构的极坐标分量模与辐角（弧度）转换为 Complex 结构得到的结果。</returns>
        </member>
        <member name="M:Com.Complex.Sqr(Com.Complex)">
            <summary>
            返回对 Complex 结构计算平方得到的 Complex 结构的新实例。
            </summary>
            <param name="comp">Complex 结构，表示底数。</param>
            <returns>Complex 结构，表示对 Complex 结构计算平方得到的结果。</returns>
        </member>
        <member name="M:Com.Complex.Sqrt(Com.Complex)">
            <summary>
            返回对 Complex 结构计算平方根得到的 Complex 结构的新实例。
            </summary>
            <param name="comp">Complex 结构，表示被开方数。</param>
            <returns>Complex 结构，表示对 Complex 结构计算平方根得到的结果。</returns>
        </member>
        <member name="M:Com.Complex.Exp(Com.Complex)">
            <summary>
            返回对 Complex 结构计算自然幂得到的 Complex 结构的新实例。
            </summary>
            <param name="comp">Complex 结构，表示底数。</param>
            <returns>Complex 结构，表示对 Complex 结构计算自然幂得到的结果。</returns>
        </member>
        <member name="M:Com.Complex.Pow(Com.Complex,Com.Complex)">
            <summary>
            返回对 Complex 结构计算复幂得到的 Complex 结构的新实例。
            </summary>
            <param name="left">Complex 结构，表示底数。</param>
            <param name="right">Complex 结构，表示指数。</param>
            <returns>Complex 结构，表示对 Complex 结构计算复幂得到的结果。</returns>
        </member>
        <member name="M:Com.Complex.Pow(Com.Complex,System.Double)">
            <summary>
            返回对 Complex 结构计算实幂得到的 Complex 结构的新实例。
            </summary>
            <param name="left">Complex 结构，表示底数。</param>
            <param name="right">双精度浮点数，表示指数。</param>
            <returns>Complex 结构，表示对 Complex 结构计算实幂得到的结果。</returns>
        </member>
        <member name="M:Com.Complex.Pow(System.Double,Com.Complex)">
            <summary>
            返回对双精度浮点数计算复幂得到的 Complex 结构的新实例。
            </summary>
            <param name="left">双精度浮点数，表示底数。</param>
            <param name="right">Complex 结构，表示指数。</param>
            <returns>Complex 结构，表示对双精度浮点数计算复幂得到的结果。</returns>
        </member>
        <member name="M:Com.Complex.Log(Com.Complex)">
            <summary>
            返回对 Complex 结构计算自然对数得到的 Complex 结构的新实例。
            </summary>
            <param name="comp">Complex 结构，表示幂。</param>
            <returns>Complex 结构，表示对 Complex 结构计算自然对数得到的结果。</returns>
        </member>
        <member name="M:Com.Complex.Log(Com.Complex,Com.Complex)">
            <summary>
            返回对 Complex 结构计算复对数得到的 Complex 结构的新实例。
            </summary>
            <param name="left">Complex 结构，表示幂。</param>
            <param name="right">Complex 结构，表示底数。</param>
            <returns>Complex 结构，表示对 Complex 结构计算复对数得到的结果。</returns>
        </member>
        <member name="M:Com.Complex.Log(Com.Complex,System.Double)">
            <summary>
            返回对双精度浮点数计算复对数得到的 Complex 结构的新实例。
            </summary>
            <param name="left">Complex 结构，表示幂。</param>
            <param name="right">双精度浮点数，表示底数。</param>
            <returns>Complex 结构，表示对双精度浮点数计算复对数得到的结果。</returns>
        </member>
        <member name="M:Com.Complex.Log(System.Double,Com.Complex)">
            <summary>
            返回对 Complex 结构计算实对数得到的 Complex 结构的新实例。
            </summary>
            <param name="left">双精度浮点数，表示幂。</param>
            <param name="right">Complex 结构，表示底数。</param>
            <returns>Complex 结构，表示对 Complex 结构计算实对数得到的结果。</returns>
        </member>
        <member name="M:Com.Complex.Sin(Com.Complex)">
            <summary>
            返回对 Complex 结构计算正弦得到的 Complex 结构的新实例。
            </summary>
            <param name="comp">Complex 结构，表示以弧度计量的角度。</param>
            <returns>Complex 结构，表示对 Complex 结构计算正弦得到的结果。</returns>
        </member>
        <member name="M:Com.Complex.Cos(Com.Complex)">
            <summary>
            返回对 Complex 结构计算余弦得到的 Complex 结构的新实例。
            </summary>
            <param name="comp">Complex 结构，表示以弧度计量的角度。</param>
            <returns>Complex 结构，表示对 Complex 结构计算余弦得到的结果。</returns>
        </member>
        <member name="M:Com.Complex.Tan(Com.Complex)">
            <summary>
            返回对 Complex 结构计算正切得到的 Complex 结构的新实例。
            </summary>
            <param name="comp">Complex 结构，表示以弧度计量的角度。</param>
            <returns>Complex 结构，表示对 Complex 结构计算正切得到的结果。</returns>
        </member>
        <member name="M:Com.Complex.Asin(Com.Complex)">
            <summary>
            返回对 Complex 结构计算反正弦得到的 Complex 结构的新实例。
            </summary>
            <param name="comp">Complex 结构，表示正弦值。</param>
            <returns>Complex 结构，表示对 Complex 结构计算反正弦得到的结果。</returns>
        </member>
        <member name="M:Com.Complex.Acos(Com.Complex)">
            <summary>
            返回对 Complex 结构计算反余弦得到的 Complex 结构的新实例。
            </summary>
            <param name="comp">Complex 结构，表示余弦值。</param>
            <returns>Complex 结构，表示对 Complex 结构计算反余弦得到的结果。</returns>
        </member>
        <member name="M:Com.Complex.Atan(Com.Complex)">
            <summary>
            返回对 Complex 结构计算反正切得到的 Complex 结构的新实例。
            </summary>
            <param name="comp">Complex 结构，表示正切值。</param>
            <returns>Complex 结构，表示对 Complex 结构计算反正切得到的结果。</returns>
        </member>
        <member name="M:Com.Complex.Sinh(Com.Complex)">
            <summary>
            返回对 Complex 结构计算双曲正弦得到的 Complex 结构的新实例。
            </summary>
            <param name="comp">Complex 结构，表示以弧度计量的角度。</param>
            <returns>Complex 结构，表示对 Complex 结构计算双曲正弦得到的结果。</returns>
        </member>
        <member name="M:Com.Complex.Cosh(Com.Complex)">
            <summary>
            返回对 Complex 结构计算双曲余弦得到的 Complex 结构的新实例。
            </summary>
            <param name="comp">Complex 结构，表示以弧度计量的角度。</param>
            <returns>Complex 结构，表示对 Complex 结构计算双曲余弦得到的结果。</returns>
        </member>
        <member name="M:Com.Complex.Tanh(Com.Complex)">
            <summary>
            返回对 Complex 结构计算双曲正切得到的 Complex 结构的新实例。
            </summary>
            <param name="comp">Complex 结构，表示以弧度计量的角度。</param>
            <returns>Complex 结构，表示对 Complex 结构计算双曲正切得到的结果。</returns>
        </member>
        <member name="M:Com.Complex.Asinh(Com.Complex)">
            <summary>
            返回对 Complex 结构计算反双曲正弦得到的 Complex 结构的新实例。
            </summary>
            <param name="comp">Complex 结构，表示双曲正弦值。</param>
            <returns>Complex 结构，表示对 Complex 结构计算反双曲正弦得到的结果。</returns>
        </member>
        <member name="M:Com.Complex.Acosh(Com.Complex)">
            <summary>
            返回对 Complex 结构计算反双曲余弦得到的 Complex 结构的新实例。
            </summary>
            <param name="comp">Complex 结构，表示双曲余弦值。</param>
            <returns>Complex 结构，表示对 Complex 结构计算反双曲余弦得到的结果。</returns>
        </member>
        <member name="M:Com.Complex.Atanh(Com.Complex)">
            <summary>
            返回对 Complex 结构计算反双曲正切得到的 Complex 结构的新实例。
            </summary>
            <param name="comp">Complex 结构，表示双曲正切值。</param>
            <returns>Complex 结构，表示对 Complex 结构计算反双曲正切得到的结果。</returns>
        </member>
        <member name="M:Com.Complex.Sign(Com.Complex)">
            <summary>
            返回将 Complex 结构的所有分量取符号数得到的 Complex 结构的新实例。
            </summary>
            <param name="comp">Complex 结构，用于转换的结构。</param>
            <returns>Complex 结构，表示将 Complex 结构的所有分量取符号数得到的结果。</returns>
        </member>
        <member name="M:Com.Complex.Abs(Com.Complex)">
            <summary>
            返回将 Complex 结构的所有分量取绝对值得到的 Complex 结构的新实例。
            </summary>
            <param name="comp">Complex 结构，用于转换的结构。</param>
            <returns>Complex 结构，表示将 Complex 结构的所有分量取绝对值得到的结果。</returns>
        </member>
        <member name="M:Com.Complex.Ceiling(Com.Complex)">
            <summary>
            返回将 Complex 结构的所有分量舍入到较大的整数值得到的 Complex 结构的新实例。
            </summary>
            <param name="comp">Complex 结构，用于转换的结构。</param>
            <returns>Complex 结构，表示将 Complex 结构的所有分量舍入到较大的整数值得到的结果。</returns>
        </member>
        <member name="M:Com.Complex.Floor(Com.Complex)">
            <summary>
            返回将 Complex 结构的所有分量舍入到较小的整数值得到的 Complex 结构的新实例。
            </summary>
            <param name="comp">Complex 结构，用于转换的结构。</param>
            <returns>Complex 结构，表示将 Complex 结构的所有分量舍入到较小的整数值得到的结果。</returns>
        </member>
        <member name="M:Com.Complex.Round(Com.Complex)">
            <summary>
            返回将 Complex 结构的所有分量舍入到最接近的整数值得到的 Complex 结构的新实例。
            </summary>
            <param name="comp">Complex 结构，用于转换的结构。</param>
            <returns>Complex 结构，表示将 Complex 结构的所有分量舍入到最接近的整数值得到的结果。</returns>
        </member>
        <member name="M:Com.Complex.Truncate(Com.Complex)">
            <summary>
            返回将 Complex 结构的所有分量截断小数部分取整得到的 Complex 结构的新实例。
            </summary>
            <param name="comp">Complex 结构，用于转换的结构。</param>
            <returns>Complex 结构，表示将 Complex 结构的所有分量截断小数部分取整得到的结果。</returns>
        </member>
        <member name="M:Com.Complex.Max(Com.Complex,Com.Complex)">
            <summary>
            返回将两个 Complex 结构的所有分量分别取最大值得到的 Complex 结构的新实例。
            </summary>
            <param name="left">Complex 结构，用于比较的第一个结构。</param>
            <param name="right">Complex 结构，用于比较的第二个结构。</param>
            <returns>Complex 结构，表示将两个 Complex 结构的所有分量分别取最大值得到的结果。</returns>
        </member>
        <member name="M:Com.Complex.Min(Com.Complex,Com.Complex)">
            <summary>
            返回将两个 Complex 结构的所有分量分别取最小值得到的 Complex 结构的新实例。
            </summary>
            <param name="left">Complex 结构，用于比较的第一个结构。</param>
            <param name="right">Complex 结构，用于比较的第二个结构。</param>
            <returns>Complex 结构，表示将两个 Complex 结构的所有分量分别取最小值得到的结果。</returns>
        </member>
        <member name="M:Com.Complex.op_Equality(Com.Complex,Com.Complex)">
            <summary>
            判断两个 Complex 结构是否相等。
            </summary>
            <param name="left">运算符左侧比较的 Complex 结构。</param>
            <param name="right">运算符右侧比较的 Complex 结构。</param>
            <returns>布尔值，表示两个 Complex 结构是否相等。</returns>
        </member>
        <member name="M:Com.Complex.op_Inequality(Com.Complex,Com.Complex)">
            <summary>
            判断两个 Complex 结构是否不相等。
            </summary>
            <param name="left">运算符左侧比较的 Complex 结构。</param>
            <param name="right">运算符右侧比较的 Complex 结构。</param>
            <returns>布尔值，表示两个 Complex 结构是否不相等。</returns>
        </member>
        <member name="M:Com.Complex.op_LessThan(Com.Complex,Com.Complex)">
            <summary>
            判断两个 Complex 结构的模是否前者小于后者。
            </summary>
            <param name="left">运算符左侧比较的 Complex 结构。</param>
            <param name="right">运算符右侧比较的 Complex 结构。</param>
            <returns>布尔值，表示两个 Complex 结构的模是否前者小于后者。</returns>
        </member>
        <member name="M:Com.Complex.op_GreaterThan(Com.Complex,Com.Complex)">
            <summary>
            判断两个 Complex 结构的模是否前者大于后者。
            </summary>
            <param name="left">运算符左侧比较的 Complex 结构。</param>
            <param name="right">运算符右侧比较的 Complex 结构。</param>
            <returns>布尔值，表示两个 Complex 结构的模是否前者大于后者。</returns>
        </member>
        <member name="M:Com.Complex.op_LessThanOrEqual(Com.Complex,Com.Complex)">
            <summary>
            判断两个 Complex 结构的模是否前者小于或等于后者。
            </summary>
            <param name="left">运算符左侧比较的 Complex 结构。</param>
            <param name="right">运算符右侧比较的 Complex 结构。</param>
            <returns>布尔值，表示两个 Complex 结构的模是否前者小于或等于后者。</returns>
        </member>
        <member name="M:Com.Complex.op_GreaterThanOrEqual(Com.Complex,Com.Complex)">
            <summary>
            判断两个 Complex 结构的模是否前者大于或等于后者。
            </summary>
            <param name="left">运算符左侧比较的 Complex 结构。</param>
            <param name="right">运算符右侧比较的 Complex 结构。</param>
            <returns>布尔值，表示两个 Complex 结构的模是否前者大于或等于后者。</returns>
        </member>
        <member name="M:Com.Complex.op_UnaryPlus(Com.Complex)">
            <summary>
            返回在 Complex 结构的所有分量前添加正号得到的 Complex 结构的新实例。
            </summary>
            <param name="comp">Complex 结构，用于转换的结构。</param>
            <returns>Complex 结构，表示在 Complex 结构的所有分量前添加正号得到的结果。</returns>
        </member>
        <member name="M:Com.Complex.op_UnaryNegation(Com.Complex)">
            <summary>
            返回在 Complex 结构的所有分量前添加负号得到的 Complex 结构的新实例。
            </summary>
            <param name="comp">Complex 结构，用于转换的结构。</param>
            <returns>Complex 结构，表示在 Complex 结构的所有分量前添加负号得到的结果。</returns>
        </member>
        <member name="M:Com.Complex.op_Addition(Com.Complex,Com.Complex)">
            <summary>
            返回将 Complex 结构与 Complex 结构的相加得到的 Complex 结构的新实例。
            </summary>
            <param name="left">Complex 结构，表示被加数。</param>
            <param name="right">Complex 结构，表示加数。</param>
            <returns>Complex 结构，表示将 Complex 结构与 Complex 结构的相加得到的结果。</returns>
        </member>
        <member name="M:Com.Complex.op_Addition(Com.Complex,System.Double)">
            <summary>
            返回将 Complex 结构与双精度浮点数的相加得到的 Complex 结构的新实例。
            </summary>
            <param name="left">Complex 结构，表示被加数。</param>
            <param name="right">双精度浮点数，表示加数。</param>
            <returns>Complex 结构，表示将 Complex 结构与双精度浮点数的相加得到的结果。</returns>
        </member>
        <member name="M:Com.Complex.op_Addition(System.Double,Com.Complex)">
            <summary>
            返回将双精度浮点数与 Complex 结构的相加得到的 Complex 结构的新实例。
            </summary>
            <param name="left">双精度浮点数，表示被加数。</param>
            <param name="right">Complex 结构，表示加数。</param>
            <returns>Complex 结构，表示将双精度浮点数与 Complex 结构的相加得到的结果。</returns>
        </member>
        <member name="M:Com.Complex.op_Subtraction(Com.Complex,Com.Complex)">
            <summary>
            返回将 Complex 结构与 Complex 结构的相减得到的 Complex 结构的新实例。
            </summary>
            <param name="left">Complex 结构，表示被减数。</param>
            <param name="right">Complex 结构，表示减数。</param>
            <returns>Complex 结构，表示将 Complex 结构与 Complex 结构的相减得到的结果。</returns>
        </member>
        <member name="M:Com.Complex.op_Subtraction(Com.Complex,System.Double)">
            <summary>
            返回将 Complex 结构与双精度浮点数的相减得到的 Complex 结构的新实例。
            </summary>
            <param name="left">Complex 结构，表示被减数。</param>
            <param name="right">双精度浮点数，表示减数。</param>
            <returns>Complex 结构，表示将 Complex 结构与双精度浮点数的相减得到的结果。</returns>
        </member>
        <member name="M:Com.Complex.op_Subtraction(System.Double,Com.Complex)">
            <summary>
            返回将双精度浮点数与 Complex 结构的相减得到的 Complex 结构的新实例。
            </summary>
            <param name="left">双精度浮点数，表示被减数。</param>
            <param name="right">Complex 结构，表示减数。</param>
            <returns>Complex 结构，表示将双精度浮点数与 Complex 结构的相减得到的结果。</returns>
        </member>
        <member name="M:Com.Complex.op_Multiply(Com.Complex,Com.Complex)">
            <summary>
            返回将 Complex 结构与 Complex 结构的相乘得到的 Complex 结构的新实例。
            </summary>
            <param name="left">Complex 结构，表示被乘数。</param>
            <param name="right">Complex 结构，表示乘数。</param>
            <returns>Complex 结构，表示将 Complex 结构与 Complex 结构的相乘得到的结果。</returns>
        </member>
        <member name="M:Com.Complex.op_Multiply(Com.Complex,System.Double)">
            <summary>
            返回将 Complex 结构与双精度浮点数的相乘得到的 Complex 结构的新实例。
            </summary>
            <param name="left">Complex 结构，表示被乘数。</param>
            <param name="right">双精度浮点数，表示乘数。</param>
            <returns>Complex 结构，表示将 Complex 结构与双精度浮点数的相乘得到的结果。</returns>
        </member>
        <member name="M:Com.Complex.op_Multiply(System.Double,Com.Complex)">
            <summary>
            返回将双精度浮点数与 Complex 结构的相乘得到的 Complex 结构的新实例。
            </summary>
            <param name="left">双精度浮点数，表示被乘数。</param>
            <param name="right">Complex 结构，表示乘数。</param>
            <returns>Complex 结构，表示将双精度浮点数与 Complex 结构的相乘得到的结果。</returns>
        </member>
        <member name="M:Com.Complex.op_Division(Com.Complex,Com.Complex)">
            <summary>
            返回将 Complex 结构与 Complex 结构的相除得到的 Complex 结构的新实例。
            </summary>
            <param name="left">Complex 结构，表示被除数。</param>
            <param name="right">Complex 结构，表示除数。</param>
            <returns>Complex 结构，表示将 Complex 结构与 Complex 结构的相除得到的结果。</returns>
        </member>
        <member name="M:Com.Complex.op_Division(Com.Complex,System.Double)">
            <summary>
            返回将 Complex 结构与双精度浮点数的相除得到的 Complex 结构的新实例。
            </summary>
            <param name="left">Complex 结构，表示被除数。</param>
            <param name="right">双精度浮点数，表示除数。</param>
            <returns>Complex 结构，表示将 Complex 结构与双精度浮点数的相除得到的结果。</returns>
        </member>
        <member name="M:Com.Complex.op_Division(System.Double,Com.Complex)">
            <summary>
            返回将双精度浮点数与 Complex 结构的相除得到的 Complex 结构的新实例。
            </summary>
            <param name="left">Complex 结构，表示被除数。</param>
            <param name="right">Complex 结构，表示除数。</param>
            <returns>Complex 结构，表示将双精度浮点数与 Complex 结构的相除得到的结果。</returns>
        </member>
        <member name="M:Com.Complex.op_Explicit(Com.Complex)~Com.PointD">
            <summary>
            将指定的 Complex 结构显式转换为 PointD 结构。
            </summary>
            <param name="comp">用于转换的 Complex 结构。</param>
            <returns>PointD 结构，表示显式转换的结果。</returns>
        </member>
        <member name="M:Com.Complex.op_Explicit(System.Double)~Com.Complex">
            <summary>
            将指定的双精度浮点数显式转换为 Complex 结构。
            </summary>
            <param name="real">用于转换的双精度浮点数。</param>
            <returns>Complex 结构，表示显式转换的结果。</returns>
        </member>
        <member name="T:Com.Geometry">
            <summary>
            为几何学的基本计算提供静态方法。
            </summary>
        </member>
        <member name="M:Com.Geometry.CalcLineGeneralFunction(Com.PointD,Com.PointD,System.Double@,System.Double@,System.Double@)">
            <summary>
            计算平面直角坐标系中过两个定点的直线的一般式方程的参数。
            </summary>
            <param name="pt1">第一个定点。</param>
            <param name="pt2">第二个定点。</param>
            <param name="A">直线的一般式方程的第一个参数。</param>
            <param name="B">直线的一般式方程的第二个参数。</param>
            <param name="C">直线的一般式方程的第三个参数。</param>
        </member>
        <member name="M:Com.Geometry.GetDistanceBetweenPointAndLine(Com.PointD,System.Double,System.Double,System.Double)">
            <summary>
            计算平面直角坐标系中过一个定点到一条直线的距离。
            </summary>
            <param name="pt">定点。</param>
            <param name="A">直线的一般式方程的第一个参数。</param>
            <param name="B">直线的一般式方程的第二个参数。</param>
            <param name="C">直线的一般式方程的第三个参数。</param>
            <returns>双精度浮点数，表示平面直角坐标系中过一个定点到一条直线的距离。</returns>
        </member>
        <member name="M:Com.Geometry.GetDistanceBetweenPointAndLine(Com.PointD,Com.PointD,Com.PointD)">
            <summary>
            计算平面直角坐标系中过一个定点到一条直线的距离。
            </summary>
            <param name="pt">定点。</param>
            <param name="pt1">直线上的第一个点。</param>
            <param name="pt2">直线上的第二个点。</param>
            <returns>双精度浮点数，表示平面直角坐标系中过一个定点到一条直线的距离。</returns>
        </member>
        <member name="M:Com.Geometry.GetFootPoint(Com.PointD,Com.PointD,Com.PointD)">
            <summary>
            计算平面直角坐标系中过一个定点到一条直线的垂足。
            </summary>
            <param name="pt">定点。</param>
            <param name="pt1">直线上的第一个点。</param>
            <param name="pt2">直线上的第二个点。</param>
            <returns>PointD 结构，表示平面直角坐标系中过一个定点到一条直线的垂足。</returns>
        </member>
        <member name="M:Com.Geometry.TwoLinesIntersect(System.ValueTuple{Com.PointD,Com.PointD},System.ValueTuple{Com.PointD,Com.PointD})">
            <summary>
            判断平面直角坐标系中两条直线段是否相交。
            </summary>
            <param name="line1">第一条直线段。</param>
            <param name="line2">第二条直线段。</param>
            <returns>布尔值，表示两条直线段是否相交。</returns>
        </member>
        <member name="M:Com.Geometry.GetAngleOfTwoPoints(Com.PointD,Com.PointD)">
            <summary>
            计算平面直角坐标系中由指定的起点与终点确定的向量与 +X 轴之间的夹角（弧度）（以 +X 轴为 0 弧度，从 +X 轴指向 +Y 轴的方向为正方向）。
            </summary>
            <param name="pt1">向量的起点。</param>
            <param name="pt2">向量的终点。</param>
            <returns>双精度浮点数，表示平面直角坐标系中由指定的起点与终点确定的向量与 +X 轴之间的夹角（弧度）（以 +X 轴为 0 弧度，从 +X 轴指向 +Y 轴的方向为正方向）。</returns>
        </member>
        <member name="M:Com.Geometry.AngleMapping(System.Double,System.Boolean,System.Boolean)">
            <summary>
            将一个角度映射到范围为一个周角的区间。
            </summary>
            <param name="angle">用于转换的角度。</param>
            <param name="asDegree">用于转换的角度是否以角度制表示。</param>
            <param name="zeroCentered">目标区间是否以 0 为中心。</param>
            <returns>双精度浮点数，表示将一个角度映射到范围为一个周角的区间得到的结果。</returns>
        </member>
        <member name="M:Com.Geometry.AngleMapping(System.Double,System.Boolean)">
            <summary>
            将一个角度映射到范围为一个周角的区间。
            </summary>
            <param name="angle">用于转换的角度。</param>
            <param name="asDegree">用于转换的角度是否以角度制表示。</param>
            <returns>双精度浮点数，表示将一个角度映射到范围为一个周角的区间得到的结果。</returns>
        </member>
        <member name="M:Com.Geometry.AngleMapping(System.Double)">
            <summary>
            将一个角度（弧度）映射到 [0, 2 * PI) 区间。
            </summary>
            <param name="angle">用于转换的角度（弧度）。</param>
            <returns>双精度浮点数，表示将一个角度（弧度）映射到 [0, 2 * PI) 区间得到的结果。</returns>
        </member>
        <member name="M:Com.Geometry.RadianToDegree(System.Double)">
            <summary>
            将一个角度由弧度制转换为角度制。
            </summary>
            <param name="angle">用于转换的角度（弧度）。</param>
            <returns>双精度浮点数，表示将一个角度由弧度制转换为角度制得到的结果。</returns>
        </member>
        <member name="M:Com.Geometry.DegreeToRadian(System.Double)">
            <summary>
            将一个角度由角度制转换为弧度制。
            </summary>
            <param name="angle">用于转换的角度（角度）。</param>
            <returns>双精度浮点数，表示将一个角度由角度制转换为弧度制得到的结果。</returns>
        </member>
        <member name="M:Com.Geometry.GetCursorPositionOfControl(System.Windows.Forms.Control)">
            <summary>
            获取鼠标相对于控件的坐标。
            </summary>
            <param name="ctrl">控件。</param>
            <returns>Point 结构，表示鼠标相对于控件的坐标。</returns>
        </member>
        <member name="M:Com.Geometry.CursorIsInControl(System.Windows.Forms.Control)">
            <summary>
            判断鼠标指针是否在控件内部。
            </summary>
            <param name="ctrl">控件。</param>
            <returns>布尔值，表示鼠标指针是否在控件内部。</returns>
        </member>
        <member name="M:Com.Geometry.PointIsInControl(System.Drawing.Point,System.Windows.Forms.Control)">
            <summary>
            判断控件坐标系中的一个点是否在控件内部。
            </summary>
            <param name="pt">控件坐标系中的点。</param>
            <param name="ctrl">控件。</param>
            <returns>布尔值，表示控件坐标系中的一个点是否在控件内部。</returns>
        </member>
        <member name="M:Com.Geometry.ScreenPointIsInControl(System.Drawing.Point,System.Windows.Forms.Control)">
            <summary>
            判断屏幕坐标系中的一个点是否在控件内部。
            </summary>
            <param name="pt">屏幕坐标系中的点。</param>
            <param name="ctrl">控件。</param>
            <returns>布尔值，表示屏幕坐标系中的一个点是否在控件内部。</returns>
        </member>
        <member name="M:Com.Geometry.GetMinimumBoundingRectangleOfControls(System.Windows.Forms.Control[],System.Int32)">
            <summary>
            计算同一容器中一组控件的最小外接矩形。
            </summary>
            <param name="ctrls">控件数组。</param>
            <param name="edgeDist">矩形的每边到控件边缘的距离。</param>
            <returns>Point 结构，表示同一容器中一组控件的最小外接矩形。</returns>
        </member>
        <member name="M:Com.Geometry.GetMinimumBoundingRectangleOfControls(System.Windows.Forms.Control[])">
            <summary>
            计算同一容器中一组控件的最小外接矩形。
            </summary>
            <param name="ctrls">控件数组。</param>
            <returns>Point 结构，表示同一容器中一组控件的最小外接矩形。</returns>
        </member>
        <member name="M:Com.Geometry.PointIsVisibleInRectangle(Com.PointD,System.Drawing.RectangleF)">
            <summary>
            判断在一个矩形内部能否看到一个点。
            </summary>
            <param name="pt">点。</param>
            <param name="rect">矩形。</param>
            <returns>布尔值，表示在一个矩形内部能否看到一个点。</returns>
        </member>
        <member name="M:Com.Geometry.PointIsVisibleInCircle(Com.PointD,Com.PointD,System.Double)">
            <summary>
            判断在一个圆内部能否看到一个点。
            </summary>
            <param name="pt">点。</param>
            <param name="offset">圆的圆心。</param>
            <param name="radius">圆的半径。</param>
            <returns>布尔值，表示在一个圆内部能否看到一个点。</returns>
        </member>
        <member name="M:Com.Geometry.PointIsVisibleInEllipse(Com.PointD,Com.PointD,System.Double,System.Double,System.Double)">
            <summary>
            判断在一个椭圆内部能否看到一个点。
            </summary>
            <param name="pt">点。</param>
            <param name="offset">椭圆的焦点。</param>
            <param name="semiMajorAxis">椭圆的半长轴。</param>
            <param name="eccentricity">椭圆的离心率。</param>
            <param name="rotateAngle">椭圆的旋转角（弧度）（以焦点为中心，以 +X 轴为 0 弧度，从 +X 轴指向 +Y 轴的方向为正方向，焦点到近焦点连线相对于 +X 轴的角度）。</param>
            <returns>布尔值，表示在一个椭圆内部能否看到一个点。</returns>
        </member>
        <member name="M:Com.Geometry.PointIsVisibleInRhombus(Com.PointD,Com.PointD,System.Double,System.Double,System.Double)">
            <summary>
            判断在一个菱形内部能否看到一个点。
            </summary>
            <param name="pt">点。</param>
            <param name="offset">菱形的中心。</param>
            <param name="semiMajorAxis">菱形的半长轴。</param>
            <param name="semiMinorAxis">菱形的半短轴。</param>
            <param name="rotateAngle">菱形的旋转角（弧度）（以焦点为中心，以 +X 轴为 0 弧度，从 +X 轴指向 +Y 轴的方向为正方向，半长轴相对于 +X 轴的角度）。</param>
            <returns>布尔值，表示在一个菱形内部能否看到一个点。</returns>
        </member>
        <member name="M:Com.Geometry.LineIsVisibleInRectangle(Com.PointD,Com.PointD,System.Drawing.RectangleF)">
            <summary>
            判断在一个矩形内部能否看到一个直线段的部分或全部。
            </summary>
            <param name="pt1">直线段的第一个端点。</param>
            <param name="pt2">直线段的第二个端点。</param>
            <param name="rect">矩形。</param>
            <returns>布尔值，表示在一个矩形内部能否看到一个直线段的部分或全部。</returns>
        </member>
        <member name="M:Com.Geometry.LineIsVisibleInCircle(Com.PointD,Com.PointD,Com.PointD,System.Double)">
            <summary>
            判断在一个圆内部能否看到一个直线段的部分或全部。
            </summary>
            <param name="pt1">直线段的第一个端点。</param>
            <param name="pt2">直线段的第二个端点。</param>
            <param name="offset">圆的圆心。</param>
            <param name="radius">圆的半径。</param>
            <returns>布尔值，表示在一个圆内部能否看到一个直线段的部分或全部。</returns>
        </member>
        <member name="M:Com.Geometry.CircleInnerIsVisibleInRectangle(Com.PointD,System.Double,System.Drawing.RectangleF)">
            <summary>
            判断在一个矩形内部能否看到一个圆的内部或者圆周的部分或全部。
            </summary>
            <param name="offset">圆的圆心。</param>
            <param name="radius">圆的半径。</param>
            <param name="rect">矩形。</param>
            <returns>布尔值，表示在一个矩形内部能否看到一个圆的内部或者圆周的部分或全部。</returns>
        </member>
        <member name="M:Com.Geometry.CircumferenceIsVisibleInRectangle(Com.PointD,System.Double,System.Drawing.RectangleF)">
            <summary>
            判断在一个矩形内部能否看到一个圆的圆周的部分或全部。
            </summary>
            <param name="offset">圆的圆心。</param>
            <param name="radius">圆的半径。</param>
            <param name="rect">矩形。</param>
            <returns>布尔值，表示在一个矩形内部能否看到一个圆的圆周的部分或全部。</returns>
        </member>
        <member name="M:Com.Geometry.GetRadiusOfEllipse(System.Double,System.Double,System.Double)">
            <summary>
            计算椭圆在指定相位的半径。
            </summary>
            <param name="semiMajorAxis">椭圆的半长轴。</param>
            <param name="eccentricity">椭圆的离心率。</param>
            <param name="phase">椭圆的相位（弧度）（以近焦点相位为 0 弧度，从 +X 轴指向 +Y 轴的方向为正方向）。</param>
            <returns>双精度浮点数，表示椭圆在指定相位的半径。</returns>
        </member>
        <member name="M:Com.Geometry.GetFocalRadiusOfEllipse(System.Double,System.Double,System.Double)">
            <summary>
            计算椭圆在指定相位的焦半径。
            </summary>
            <param name="semiMajorAxis">椭圆的半长轴。</param>
            <param name="eccentricity">椭圆的离心率。</param>
            <param name="phase">椭圆的相位（弧度）（以近焦点相位为 0 弧度，从 +X 轴指向 +Y 轴的方向为正方向）。</param>
            <returns>双精度浮点数，表示椭圆在指定相位的焦半径。</returns>
        </member>
        <member name="M:Com.Geometry.EllipseCentralAngleToPhase(System.Double,System.Double)">
            <summary>
            将椭圆的圆心角转换为相位（弧度）（以近焦点相位为 0 弧度，从 +X 轴指向 +Y 轴的方向为正方向）。
            </summary>
            <param name="centralAngle">椭圆的圆心角（弧度）。</param>
            <param name="eccentricity">椭圆的离心率。</param>
            <returns>双精度浮点数，表示将椭圆的圆心角转换为相位（弧度）（以近焦点相位为 0 弧度，从 +X 轴指向 +Y 轴的方向为正方向）得到的结果。</returns>
        </member>
        <member name="M:Com.Geometry.RotateBitmap(System.Drawing.Bitmap,System.Double,System.Boolean)">
            <summary>
            将位图的副本按顺时针方向旋转一个角度，返回旋转后得到的位图。
            </summary>
            <param name="bmp">用于旋转的位图。</param>
            <param name="rotateAngle">按顺时针方向旋转的角度（弧度）。</param>
            <param name="antiAlias">是否使用抗锯齿模式绘图。</param>
            <returns>Bitmap 对象，表示将位图的副本按顺时针方向旋转一个角度得到的结果。</returns>
        </member>
        <member name="M:Com.Geometry.CreateRoundedRectanglePath(System.Drawing.Rectangle,System.Int32)">
            <summary>
            创建一个表示圆角矩形的路径，此圆角矩形包含 4 个半径相同的圆角。
            </summary>
            <param name="rect">矩形。</param>
            <param name="cornerRadius">圆角的半径。</param>
            <returns>GraphicsPath 对象，表示圆角矩形的路径，此圆角矩形包含 4 个半径相同的圆角。</returns>
        </member>
        <member name="M:Com.Geometry.CreateRoundedRectanglePath(System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            创建一个表示圆角矩形的路径，此圆角矩形包含 4 个半径不同的圆角。
            </summary>
            <param name="rect">矩形。</param>
            <param name="cornerRadiusLT">左上圆角的半径。</param>
            <param name="cornerRadiusRT">右上圆角的半径。</param>
            <param name="cornerRadiusRB">右下圆角的半径。</param>
            <param name="cornerRadiusLB">左下圆角的半径。</param>
            <returns>GraphicsPath 对象，表示圆角矩形的路径，此圆角矩形包含 4 个半径不同的圆角。</returns>
        </member>
        <member name="M:Com.Geometry.CreateRoundedRectangleOuterPaths(System.Drawing.Rectangle,System.Int32)">
            <summary>
            创建一组表示矩形减去圆角矩形所剩区域的路径，此圆角矩形包含 4 个半径相同的圆角。
            </summary>
            <param name="rect">矩形。</param>
            <param name="cornerRadius">圆角的半径。</param>
            <returns>GraphicsPath 对象数组，数组元素表示矩形减去圆角矩形所剩区域的路径，此圆角矩形包含 4 个半径相同的圆角。</returns>
        </member>
        <member name="M:Com.Geometry.CreateRoundedRectangleOuterPaths(System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            创建一组表示矩形减去圆角矩形所剩区域的路径，此圆角矩形包含 4 个半径不同的圆角。
            </summary>
            <param name="rect">矩形。</param>
            <param name="cornerRadiusLT">左上圆角的半径。</param>
            <param name="cornerRadiusRT">右上圆角的半径。</param>
            <param name="cornerRadiusRB">右下圆角的半径。</param>
            <param name="cornerRadiusLB">左下圆角的半径。</param>
            <returns>GraphicsPath 对象数组，数组元素表示矩形减去圆角矩形所剩区域的路径，此圆角矩形包含 4 个半径不同的圆角。</returns>
        </member>
        <member name="T:Com.DateTimeX">
            <summary>
            以日期与当天的时间表示一个时刻。
            </summary>
        </member>
        <member name="M:Com.DateTimeX.#ctor(System.Decimal,System.Double)">
            <summary>
            使用十进制浮点数表示的自公元时刻以来的总毫秒与所在时区的标准时间与协调世界时（UTC）之间的时差的小时数初始化 DateTimeX 结构的新实例。
            </summary>
            <param name="totalMilliseconds">十进制浮点数表示的自公元时刻以来的总毫秒数。</param>
            <param name="utcOffset">双精度浮点数表示的所在时区的标准时间与协调世界时（UTC）之间的时差的小时数。</param>
        </member>
        <member name="M:Com.DateTimeX.#ctor(System.Decimal)">
            <summary>
            使用十进制浮点数表示的自公元时刻以来的总毫秒数初始化以本地时区表示的 DateTimeX 结构的新实例。
            </summary>
            <param name="totalMilliseconds">十进制浮点数表示的自公元时刻以来的总毫秒数。</param>
        </member>
        <member name="M:Com.DateTimeX.#ctor(System.Int64,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Double)">
            <summary>
            使用指定的年、月、日、时、分、秒、毫秒与所在时区的标准时间与协调世界时（UTC）之间的时差的小时数初始化 DateTimeX 结构的新实例。
            </summary>
            <param name="year">64 位整数表示的年。</param>
            <param name="month">32 位整数表示的月。</param>
            <param name="day">32 位整数表示的日。</param>
            <param name="hour">32 位整数表示的时。</param>
            <param name="minute">32 位整数表示的分。</param>
            <param name="second">32 位整数表示的秒。</param>
            <param name="millisecond">32 位整数表示的毫秒。</param>
            <param name="utcOffset">双精度浮点数表示的所在时区的标准时间与协调世界时（UTC）之间的时差的小时数。</param>
        </member>
        <member name="M:Com.DateTimeX.#ctor(System.Int64,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            使用指定的年、月、日、时、分、秒与毫秒初始化以本地时区表示的 DateTimeX 结构的新实例。
            </summary>
            <param name="year">64 位整数表示的年。</param>
            <param name="month">32 位整数表示的月。</param>
            <param name="day">32 位整数表示的日。</param>
            <param name="hour">32 位整数表示的时。</param>
            <param name="minute">32 位整数表示的分。</param>
            <param name="second">32 位整数表示的秒。</param>
            <param name="millisecond">32 位整数表示的毫秒。</param>
        </member>
        <member name="M:Com.DateTimeX.#ctor(System.Int64,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Double)">
            <summary>
            使用指定的年、月、日、时、分、秒与所在时区的标准时间与协调世界时（UTC）之间的时差的小时数初始化 DateTimeX 结构的新实例。
            </summary>
            <param name="year">64 位整数表示的年。</param>
            <param name="month">32 位整数表示的月。</param>
            <param name="day">32 位整数表示的日。</param>
            <param name="hour">32 位整数表示的时。</param>
            <param name="minute">32 位整数表示的分。</param>
            <param name="second">32 位整数表示的秒。</param>
            <param name="utcOffset">双精度浮点数表示的所在时区的标准时间与协调世界时（UTC）之间的时差的小时数。</param>
        </member>
        <member name="M:Com.DateTimeX.#ctor(System.Int64,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            使用指定的年、月、日、时、分与秒初始化以本地时区表示的 DateTimeX 结构的新实例。
            </summary>
            <param name="year">64 位整数表示的年。</param>
            <param name="month">32 位整数表示的月。</param>
            <param name="day">32 位整数表示的日。</param>
            <param name="hour">32 位整数表示的时。</param>
            <param name="minute">32 位整数表示的分。</param>
            <param name="second">32 位整数表示的秒。</param>
        </member>
        <member name="M:Com.DateTimeX.#ctor(System.Int64,System.Int32,System.Int32,System.Double)">
            <summary>
            使用指定的年、月、日与所在时区的标准时间与协调世界时（UTC）之间的时差的小时数初始化 DateTimeX 结构的新实例。
            </summary>
            <param name="year">64 位整数表示的年。</param>
            <param name="month">32 位整数表示的月。</param>
            <param name="day">32 位整数表示的日。</param>
            <param name="utcOffset">双精度浮点数表示的所在时区的标准时间与协调世界时（UTC）之间的时差的小时数。</param>
        </member>
        <member name="M:Com.DateTimeX.#ctor(System.Int64,System.Int32,System.Int32)">
            <summary>
            使用指定的年、月与日初始化以本地时区表示的 DateTimeX 结构的新实例。
            </summary>
            <param name="year">64 位整数表示的年。</param>
            <param name="month">32 位整数表示的月。</param>
            <param name="day">32 位整数表示的日。</param>
        </member>
        <member name="M:Com.DateTimeX.#ctor(Com.DateTimeX,System.Double)">
            <summary>
            使用 DateTimeX 结构与所在时区的标准时间与协调世界时（UTC）之间的时差的小时数初始化 DateTimeX 结构的新实例。
            </summary>
            <param name="dateTime">DateTimeX 结构。</param>
            <param name="utcOffset">双精度浮点数表示的所在时区的标准时间与协调世界时（UTC）之间的时差的小时数。</param>
        </member>
        <member name="M:Com.DateTimeX.#ctor(Com.DateTimeX)">
            <summary>
            使用 DateTimeX 结构初始化以本地时区表示的 DateTimeX 结构的新实例。
            </summary>
            <param name="dateTime">DateTimeX 结构。</param>
        </member>
        <member name="M:Com.DateTimeX.#ctor(System.DateTime,System.Double)">
            <summary>
            使用 DateTime 结构与所在时区的标准时间与协调世界时（UTC）之间的时差的小时数初始化 DateTimeX 结构的新实例。
            </summary>
            <param name="dateTime">DateTime 结构。</param>
            <param name="utcOffset">双精度浮点数表示的所在时区的标准时间与协调世界时（UTC）之间的时差的小时数。</param>
        </member>
        <member name="M:Com.DateTimeX.#ctor(System.DateTime)">
            <summary>
            使用 DateTime 结构初始化以本地时区表示的 DateTimeX 结构的新实例。
            </summary>
            <param name="dateTime">DateTime 结构。</param>
        </member>
        <member name="F:Com.DateTimeX.Empty">
            <summary>
            表示所有属性为其数据类型的默认值的 DateTimeX 结构的实例。
            </summary>
        </member>
        <member name="F:Com.DateTimeX.ChristianEra">
            <summary>
            表示公元时刻的 DateTimeX 结构的实例。
            </summary>
        </member>
        <member name="F:Com.DateTimeX.MinValue">
            <summary>
            表示时刻的最小可能值的 DateTimeX 结构的实例。
            </summary>
        </member>
        <member name="F:Com.DateTimeX.MaxValue">
            <summary>
            表示时刻的最大可能值的 DateTimeX 结构的实例。
            </summary>
        </member>
        <member name="P:Com.DateTimeX.IsEmpty">
            <summary>
            获取表示此 DateTimeX 结构是否未初始化的布尔值。
            </summary>
        </member>
        <member name="P:Com.DateTimeX.IsChristianEra">
            <summary>
            获取表示此 DateTimeX 结构是否为公元时刻的布尔值。
            </summary>
        </member>
        <member name="P:Com.DateTimeX.IsMinValue">
            <summary>
            获取表示此 DateTimeX 结构是否为时刻的最小可能值的布尔值。
            </summary>
        </member>
        <member name="P:Com.DateTimeX.IsMaxValue">
            <summary>
            获取表示此 DateTimeX 结构是否为时刻的最大可能值的布尔值。
            </summary>
        </member>
        <member name="P:Com.DateTimeX.IsAnnoDomini">
            <summary>
            获取表示此 DateTimeX 结构是否为一个公元后的时刻（含公元时刻）的布尔值。
            </summary>
        </member>
        <member name="P:Com.DateTimeX.IsBeforeChrist">
            <summary>
            获取表示此 DateTimeX 结构是否为一个公元前的时刻（不含公元时刻）的布尔值。
            </summary>
        </member>
        <member name="P:Com.DateTimeX.IsLeap">
            <summary>
            获取表示此 DateTimeX 结构的年是否为闰年的布尔值。
            </summary>
        </member>
        <member name="P:Com.DateTimeX.UtcOffset">
            <summary>
            获取或设置此 DateTimeX 结构表示的时刻所在时区的标准时间与协调世界时（UTC）之间的时差的小时数。
            </summary>
        </member>
        <member name="P:Com.DateTimeX.TotalMilliseconds">
            <summary>
            获取或设置此 DateTimeX 结构表示的时刻自公元时刻以来的总毫秒数。
            </summary>
        </member>
        <member name="P:Com.DateTimeX.Year">
            <summary>
            获取或设置此 DateTimeX 结构的年。
            </summary>
        </member>
        <member name="P:Com.DateTimeX.Month">
            <summary>
            获取或设置此 DateTimeX 结构的月。
            </summary>
        </member>
        <member name="P:Com.DateTimeX.Day">
            <summary>
            获取或设置此 DateTimeX 结构的日。
            </summary>
        </member>
        <member name="P:Com.DateTimeX.Hour">
            <summary>
            获取或设置此 DateTimeX 结构的时。
            </summary>
        </member>
        <member name="P:Com.DateTimeX.Minute">
            <summary>
            获取或设置此 DateTimeX 结构的分。
            </summary>
        </member>
        <member name="P:Com.DateTimeX.Second">
            <summary>
            获取或设置此 DateTimeX 结构的秒。
            </summary>
        </member>
        <member name="P:Com.DateTimeX.Millisecond">
            <summary>
            获取或设置此 DateTimeX 结构的毫秒。
            </summary>
        </member>
        <member name="P:Com.DateTimeX.Date">
            <summary>
            获取表示此 DateTimeX 结构的日期部分的 DateTimeX 结构的实例，时间值为午夜。
            </summary>
        </member>
        <member name="P:Com.DateTimeX.TimeOfDay">
            <summary>
            获取表示此 DateTimeX 结构的当天的时间的 TimeSpan 结构的实例，表示自午夜以来的时间间隔。
            </summary>
        </member>
        <member name="P:Com.DateTimeX.WeekOfYear">
            <summary>
            获取此 DateTimeX 结构表示的日期是所在年的第几周（以 1 月 1 日所在周为第一周）。
            </summary>
        </member>
        <member name="P:Com.DateTimeX.DayOfYear">
            <summary>
            获取此 DateTimeX 结构表示的日期是所在年的第几天（以 1 月 1 日为第一天）。
            </summary>
        </member>
        <member name="P:Com.DateTimeX.HourOfYear">
            <summary>
            获取此 DateTimeX 结构表示的时刻是所在年的第几小时（以 1 月 1 日 0 时为第一小时）。
            </summary>
        </member>
        <member name="P:Com.DateTimeX.MinuteOfYear">
            <summary>
            获取此 DateTimeX 结构表示的时刻是所在年的第几分钟（以 1 月 1 日 0 时 0 分为第一分钟）。
            </summary>
        </member>
        <member name="P:Com.DateTimeX.SecondOfYear">
            <summary>
            获取此 DateTimeX 结构表示的时刻是所在年的第几秒（以 1 月 1 日 0 时 0 分 0 秒为第一秒）。
            </summary>
        </member>
        <member name="P:Com.DateTimeX.MillisecondOfYear">
            <summary>
            获取此 DateTimeX 结构表示的时刻是所在年的第几毫秒（以 1 月 1 日 0 时 0 分 0 秒 0 毫秒为第一毫秒）。
            </summary>
        </member>
        <member name="P:Com.DateTimeX.DayOfWeek">
            <summary>
            获取表示此 DateTimeX 结构表示的日期是一周中的某天的枚举。
            </summary>
        </member>
        <member name="P:Com.DateTimeX.HourOfDay">
            <summary>
            获取此 DateTimeX 结构表示的时刻是所在天的第几小时（以 0 时为第一小时）。
            </summary>
        </member>
        <member name="P:Com.DateTimeX.MinuteOfDay">
            <summary>
            获取此 DateTimeX 结构表示的时刻是所在天的第几分钟（以 0 时 0 分为第一分钟）。
            </summary>
        </member>
        <member name="P:Com.DateTimeX.SecondOfDay">
            <summary>
            获取此 DateTimeX 结构表示的时刻是所在天的第几秒（以 0 时 0 分 0 秒为第一秒）。
            </summary>
        </member>
        <member name="P:Com.DateTimeX.MillisecondOfDay">
            <summary>
            获取此 DateTimeX 结构表示的时刻是所在天的第几毫秒（以 0 时 0 分 0 秒 0 毫秒为第一毫秒）。
            </summary>
        </member>
        <member name="P:Com.DateTimeX.MonthStringInChinese">
            <summary>
            获取表示此 DateTimeX 结构表示的月的中文字符串。
            </summary>
        </member>
        <member name="P:Com.DateTimeX.MonthLongStringInEnglish">
            <summary>
            获取表示此 DateTimeX 结构表示的月的英文长字符串。
            </summary>
        </member>
        <member name="P:Com.DateTimeX.MonthShortStringInEnglish">
            <summary>
            获取表示此 DateTimeX 结构表示的月的英文短字符串。
            </summary>
        </member>
        <member name="P:Com.DateTimeX.MonthStringInJapaneseKanji">
            <summary>
            获取表示此 DateTimeX 结构表示的月的日文汉字字符串。
            </summary>
        </member>
        <member name="P:Com.DateTimeX.MonthStringInJapaneseHiragana">
            <summary>
            获取表示此 DateTimeX 结构表示的月的日文平假名字符串。
            </summary>
        </member>
        <member name="P:Com.DateTimeX.WeekdayLongStringInChinese">
            <summary>
            获取表示此 DateTimeX 结构表示的日期是一周中的某天的中文长字符串。
            </summary>
        </member>
        <member name="P:Com.DateTimeX.WeekdayShortStringInChinese">
            <summary>
            获取表示此 DateTimeX 结构表示的日期是一周中的某天的中文短字符串。
            </summary>
        </member>
        <member name="P:Com.DateTimeX.WeekdayLongStringInEnglish">
            <summary>
            获取表示此 DateTimeX 结构表示的日期是一周中的某天的英文长字符串。
            </summary>
        </member>
        <member name="P:Com.DateTimeX.WeekdayShortStringInEnglish">
            <summary>
            获取表示此 DateTimeX 结构表示的日期是一周中的某天的英文短字符串。
            </summary>
        </member>
        <member name="P:Com.DateTimeX.WeekdayLongStringInJapanese">
            <summary>
            获取表示此 DateTimeX 结构表示的日期是一周中的某天的日文长字符串。
            </summary>
        </member>
        <member name="P:Com.DateTimeX.WeekdayShortStringInJapanese">
            <summary>
            获取表示此 DateTimeX 结构表示的日期是一周中的某天的日文短字符串。
            </summary>
        </member>
        <member name="P:Com.DateTimeX.DateLongString">
            <summary>
            获取表示此 DateTimeX 结构日期部分的长字符串。
            </summary>
        </member>
        <member name="P:Com.DateTimeX.DateShortString">
            <summary>
            获取表示此 DateTimeX 结构日期部分的短字符串。
            </summary>
        </member>
        <member name="P:Com.DateTimeX.TimeLongString">
            <summary>
            获取表示此 DateTimeX 结构时间部分的长字符串。
            </summary>
        </member>
        <member name="P:Com.DateTimeX.TimeShortString">
            <summary>
            获取表示此 DateTimeX 结构时间部分的短字符串。
            </summary>
        </member>
        <member name="P:Com.DateTimeX.Now">
            <summary>
            获取以本地时区表示的此计算机上的当前日期与时间的 DateTimeX 结构的实例。
            </summary>
        </member>
        <member name="P:Com.DateTimeX.UtcNow">
            <summary>
            获取以协调世界时（UTC）表示的此计算机上的当前日期与时间的 DateTimeX 结构的实例。
            </summary>
        </member>
        <member name="P:Com.DateTimeX.Today">
            <summary>
            获取以本地时区表示的此计算机上的当前日期的 DateTimeX 结构的实例。
            </summary>
        </member>
        <member name="P:Com.DateTimeX.UtcToday">
            <summary>
            获取以协调世界时（UTC）表示的此计算机上的当前日期的 DateTimeX 结构的实例。
            </summary>
        </member>
        <member name="M:Com.DateTimeX.Equals(System.Object)">
            <summary>
            判断此 DateTimeX 结构是否与指定的对象相等。
            </summary>
            <param name="obj">用于比较的对象。</param>
            <returns>布尔值，表示此 DateTimeX 结构是否与指定的对象相等。</returns>
        </member>
        <member name="M:Com.DateTimeX.GetHashCode">
            <summary>
            返回此 DateTimeX 结构的哈希代码。
            </summary>
            <returns>32 位整数，表示此 DateTimeX 结构的哈希代码。</returns>
        </member>
        <member name="M:Com.DateTimeX.ToString">
            <summary>
            将此 DateTimeX 结构转换为字符串。
            </summary>
            <returns>字符串，表示此 DateTimeX 结构的字符串形式。</returns>
        </member>
        <member name="M:Com.DateTimeX.Equals(Com.DateTimeX)">
            <summary>
            判断此 DateTimeX 结构是否与指定的 DateTimeX 结构相等。
            </summary>
            <param name="dateTime">用于比较的 DateTimeX 结构。</param>
            <returns>布尔值，表示此 DateTimeX 结构是否与指定的 DateTimeX 结构相等。</returns>
        </member>
        <member name="M:Com.DateTimeX.CompareTo(System.Object)">
            <summary>
            将此 DateTimeX 结构与指定的对象进行次序比较。
            </summary>
            <param name="obj">用于比较的对象。</param>
            <returns>32 位整数，表示将此 DateTimeX 结构与指定的对象进行次序比较得到的结果。</returns>
        </member>
        <member name="M:Com.DateTimeX.CompareTo(Com.DateTimeX)">
            <summary>
            将此 DateTimeX 结构与指定的 DateTimeX 结构进行次序比较。
            </summary>
            <param name="dateTime">用于比较的 DateTimeX 结构。</param>
            <returns>32 位整数，表示将此 DateTimeX 结构与指定的 DateTimeX 结构进行次序比较得到的结果。</returns>
        </member>
        <member name="M:Com.DateTimeX.Add(Com.TimeSpanX)">
            <summary>
            返回将此 DateTimeX 结构与 TimeSpanX 结构相加得到的 DateTimeX 结构的新实例。
            </summary>
            <param name="timeSpan">TimeSpanX 结构，用于相加到此 DateTimeX 结构。</param>
            <returns>DateTimeX 结构，表示将此 DateTimeX 结构与 TimeSpanX 结构相加得到的结果。</returns>
        </member>
        <member name="M:Com.DateTimeX.Add(System.TimeSpan)">
            <summary>
            返回将此 DateTimeX 结构与 TimeSpan 结构相加得到的 DateTimeX 结构的新实例。
            </summary>
            <param name="timeSpan">TimeSpan 结构，用于相加到此 DateTimeX 结构。</param>
            <returns>DateTimeX 结构，表示将此 DateTimeX 结构与 TimeSpan 结构相加得到的结果。</returns>
        </member>
        <member name="M:Com.DateTimeX.AddYears(System.Int64)">
            <summary>
            返回将此 DateTimeX 结构加上若干年得到的 DateTimeX 结构的新实例。
            </summary>
            <param name="years">64 位整数表示的年数，用于相加到此 DateTimeX 结构。</param>
            <returns>DateTimeX 结构，表示将此 DateTimeX 结构加上若干年得到的结果。</returns>
        </member>
        <member name="M:Com.DateTimeX.AddMonths(System.Int64)">
            <summary>
            返回将此 DateTimeX 结构加上若干个月得到的 DateTimeX 结构的新实例。
            </summary>
            <param name="months">64 位整数表示的月数，用于相加到此 DateTimeX 结构。</param>
            <returns>DateTimeX 结构，表示将此 DateTimeX 结构加上若干个月得到的结果。</returns>
        </member>
        <member name="M:Com.DateTimeX.AddWeeks(System.Double)">
            <summary>
            返回将此 DateTimeX 结构加上若干周得到的 DateTimeX 结构的新实例。
            </summary>
            <param name="weeks">双精度浮点数表示的周数，用于相加到此 DateTimeX 结构。</param>
            <returns>DateTimeX 结构，表示将此 DateTimeX 结构加上若干周得到的结果。</returns>
        </member>
        <member name="M:Com.DateTimeX.AddDays(System.Decimal)">
            <summary>
            返回将此 DateTimeX 结构加上若干天得到的 DateTimeX 结构的新实例。
            </summary>
            <param name="days">十进制浮点数表示的天数，用于相加到此 DateTimeX 结构。</param>
            <returns>DateTimeX 结构，表示将此 DateTimeX 结构加上若干天得到的结果。</returns>
        </member>
        <member name="M:Com.DateTimeX.AddDays(System.Double)">
            <summary>
            返回将此 DateTimeX 结构加上若干天得到的 DateTimeX 结构的新实例。
            </summary>
            <param name="days">双精度浮点数表示的天数，用于相加到此 DateTimeX 结构。</param>
            <returns>DateTimeX 结构，表示将此 DateTimeX 结构加上若干天得到的结果。</returns>
        </member>
        <member name="M:Com.DateTimeX.AddHours(System.Decimal)">
            <summary>
            返回将此 DateTimeX 结构加上若干小时得到的 DateTimeX 结构的新实例。
            </summary>
            <param name="hours">十进制浮点数表示的小时数，用于相加到此 DateTimeX 结构。</param>
            <returns>DateTimeX 结构，表示将此 DateTimeX 结构加上若干小时得到的结果。</returns>
        </member>
        <member name="M:Com.DateTimeX.AddHours(System.Double)">
            <summary>
            返回将此 DateTimeX 结构加上若干小时得到的 DateTimeX 结构的新实例。
            </summary>
            <param name="hours">双精度浮点数表示的小时数，用于相加到此 DateTimeX 结构。</param>
            <returns>DateTimeX 结构，表示将此 DateTimeX 结构加上若干小时得到的结果。</returns>
        </member>
        <member name="M:Com.DateTimeX.AddMinutes(System.Decimal)">
            <summary>
            返回将此 DateTimeX 结构加上若干分钟得到的 DateTimeX 结构的新实例。
            </summary>
            <param name="minutes">十进制浮点数表示的分钟数，用于相加到此 DateTimeX 结构。</param>
            <returns>DateTimeX 结构，表示将此 DateTimeX 结构加上若干分钟得到的结果。</returns>
        </member>
        <member name="M:Com.DateTimeX.AddMinutes(System.Double)">
            <summary>
            返回将此 DateTimeX 结构加上若干分钟得到的 DateTimeX 结构的新实例。
            </summary>
            <param name="minutes">双精度浮点数表示的分钟数，用于相加到此 DateTimeX 结构。</param>
            <returns>DateTimeX 结构，表示将此 DateTimeX 结构加上若干分钟得到的结果。</returns>
        </member>
        <member name="M:Com.DateTimeX.AddSeconds(System.Decimal)">
            <summary>
            返回将此 DateTimeX 结构加上若干秒得到的 DateTimeX 结构的新实例。
            </summary>
            <param name="seconds">十进制浮点数表示的秒数，用于相加到此 DateTimeX 结构。</param>
            <returns>DateTimeX 结构，表示将此 DateTimeX 结构加上若干秒得到的结果。</returns>
        </member>
        <member name="M:Com.DateTimeX.AddSeconds(System.Double)">
            <summary>
            返回将此 DateTimeX 结构加上若干秒得到的 DateTimeX 结构的新实例。
            </summary>
            <param name="seconds">双精度浮点数表示的秒数，用于相加到此 DateTimeX 结构。</param>
            <returns>DateTimeX 结构，表示将此 DateTimeX 结构加上若干秒得到的结果。</returns>
        </member>
        <member name="M:Com.DateTimeX.AddMilliseconds(System.Decimal)">
            <summary>
            返回将此 DateTimeX 结构加上若干毫秒得到的 DateTimeX 结构的新实例。
            </summary>
            <param name="milliseconds">十进制浮点数表示的毫秒数，用于相加到此 DateTimeX 结构。</param>
            <returns>DateTimeX 结构，表示将此 DateTimeX 结构加上若干毫秒得到的结果。</returns>
        </member>
        <member name="M:Com.DateTimeX.AddMilliseconds(System.Double)">
            <summary>
            返回将此 DateTimeX 结构加上若干毫秒得到的 DateTimeX 结构的新实例。
            </summary>
            <param name="milliseconds">双精度浮点数表示的毫秒数，用于相加到此 DateTimeX 结构。</param>
            <returns>DateTimeX 结构，表示将此 DateTimeX 结构加上若干毫秒得到的结果。</returns>
        </member>
        <member name="M:Com.DateTimeX.ToLocalTime">
            <summary>
            返回将此 DateTimeX 结构转换为以本地时区表示的 DateTimeX 结构的新实例。
            </summary>
            <returns>DateTimeX 结构，表示将此 DateTimeX 结构转换为以本地时区表示的 DateTimeX 结构得到的结果。</returns>
        </member>
        <member name="M:Com.DateTimeX.ToUniversalTime">
            <summary>
            返回将此 DateTimeX 结构转换为以协调世界时（UTC）表示的 DateTimeX 结构的新实例。
            </summary>
            <returns>DateTimeX 结构，表示将此 DateTimeX 结构转换为以协调世界时（UTC）表示的 DateTimeX 结构得到的结果。</returns>
        </member>
        <member name="M:Com.DateTimeX.ToLongDateString">
            <summary>
            返回表示此 DateTimeX 结构的长日期字符串。
            </summary>
            <returns>字符串，表示此 DateTimeX 结构的长日期字符串形式。</returns>
        </member>
        <member name="M:Com.DateTimeX.ToShortDateString">
            <summary>
            返回表示此 DateTimeX 结构的短日期字符串。
            </summary>
            <returns>字符串，表示此 DateTimeX 结构的短日期字符串形式。</returns>
        </member>
        <member name="M:Com.DateTimeX.ToLongTimeString">
            <summary>
            返回表示此 DateTimeX 结构的长时间字符串。
            </summary>
            <returns>字符串，表示此 DateTimeX 结构的长时间字符串形式。</returns>
        </member>
        <member name="M:Com.DateTimeX.ToShortTimeString">
            <summary>
            返回表示此 DateTimeX 结构的短时间字符串。
            </summary>
            <returns>字符串，表示此 DateTimeX 结构的短时间字符串形式。</returns>
        </member>
        <member name="M:Com.DateTimeX.Equals(Com.DateTimeX,Com.DateTimeX)">
            <summary>
            判断两个 DateTimeX 结构是否相等。
            </summary>
            <param name="left">用于比较的第一个 DateTimeX 结构。</param>
            <param name="right">用于比较的第二个 DateTimeX 结构。</param>
            <returns>布尔值，表示两个 DateTimeX 结构是否相等。</returns>
        </member>
        <member name="M:Com.DateTimeX.Compare(Com.DateTimeX,Com.DateTimeX)">
            <summary>
            比较两个 DateTimeX 结构的次序。
            </summary>
            <param name="left">用于比较的第一个 DateTimeX 结构。</param>
            <param name="right">用于比较的第二个 DateTimeX 结构。</param>
            <returns>32 位整数，表示将两个 DateTimeX 结构进行次序比较得到的结果。</returns>
        </member>
        <member name="M:Com.DateTimeX.IsLeapYear(System.Int64)">
            <summary>
            返回表示指定年是否为闰年的布尔值。
            </summary>
            <param name="year">64 位整数表示的年。</param>
            <returns>布尔值，表示指定年是否为闰年。</returns>
        </member>
        <member name="M:Com.DateTimeX.DaysInYear(System.Int64)">
            <summary>
            返回指定年的天数。
            </summary>
            <param name="year">64 位整数表示的年。</param>
            <returns>32 位整数，表示指定年的天数。</returns>
        </member>
        <member name="M:Com.DateTimeX.DaysInMonth(System.Int64,System.Int32)">
            <summary>
            返回指定年的指定月的天数。
            </summary>
            <param name="year">64 位整数表示的年。</param>
            <param name="month">32 位整数表示的月。</param>
            <returns>32 位整数，表示指定年的指定月的天数。</returns>
        </member>
        <member name="M:Com.DateTimeX.op_Equality(Com.DateTimeX,Com.DateTimeX)">
            <summary>
            判断两个 DateTimeX 结构是否表示相同的时刻。
            </summary>
            <param name="left">运算符左侧比较的 DateTimeX 结构。</param>
            <param name="right">运算符右侧比较的 DateTimeX 结构。</param>
            <returns>布尔值，表示两个 DateTimeX 结构是否表示相同的时刻。</returns>
        </member>
        <member name="M:Com.DateTimeX.op_Inequality(Com.DateTimeX,Com.DateTimeX)">
            <summary>
            判断两个 DateTimeX 结构是否表示不同的时刻。
            </summary>
            <param name="left">运算符左侧比较的 DateTimeX 结构。</param>
            <param name="right">运算符右侧比较的 DateTimeX 结构。</param>
            <returns>布尔值，表示两个 DateTimeX 结构是否表示不同的时刻。</returns>
        </member>
        <member name="M:Com.DateTimeX.op_LessThan(Com.DateTimeX,Com.DateTimeX)">
            <summary>
            判断两个 DateTimeX 结构表示的时刻是否前者早于后者。
            </summary>
            <param name="left">运算符左侧比较的 DateTimeX 结构。</param>
            <param name="right">运算符右侧比较的 DateTimeX 结构。</param>
            <returns>布尔值，表示两个 DateTimeX 结构表示的时刻是否前者早于后者。</returns>
        </member>
        <member name="M:Com.DateTimeX.op_GreaterThan(Com.DateTimeX,Com.DateTimeX)">
            <summary>
            判断两个 DateTimeX 结构表示的时刻是否前者晚于后者。
            </summary>
            <param name="left">运算符左侧比较的 DateTimeX 结构。</param>
            <param name="right">运算符右侧比较的 DateTimeX 结构。</param>
            <returns>布尔值，表示两个 DateTimeX 结构表示的时刻是否前者晚于后者。</returns>
        </member>
        <member name="M:Com.DateTimeX.op_LessThanOrEqual(Com.DateTimeX,Com.DateTimeX)">
            <summary>
            判断两个 DateTimeX 结构表示的时刻是否前者早于或等于后者。
            </summary>
            <param name="left">运算符左侧比较的 DateTimeX 结构。</param>
            <param name="right">运算符右侧比较的 DateTimeX 结构。</param>
            <returns>布尔值，表示两个 DateTimeX 结构表示的时刻是否前者早于或等于后者。</returns>
        </member>
        <member name="M:Com.DateTimeX.op_GreaterThanOrEqual(Com.DateTimeX,Com.DateTimeX)">
            <summary>
            判断两个 DateTimeX 结构表示的时刻是否前者晚于或等于后者。
            </summary>
            <param name="left">运算符左侧比较的 DateTimeX 结构。</param>
            <param name="right">运算符右侧比较的 DateTimeX 结构。</param>
            <returns>布尔值，表示两个 DateTimeX 结构表示的时刻是否前者晚于或等于后者。</returns>
        </member>
        <member name="M:Com.DateTimeX.op_Addition(Com.DateTimeX,Com.TimeSpanX)">
            <summary>
            返回将 DateTimeX 结构与 TimeSpanX 结构相加得到的 DateTimeX 结构的新实例。
            </summary>
            <param name="dateTime">DateTimeX 结构，表示被加数。</param>
            <param name="timeSpan">TimeSpanX 结构，表示加数。</param>
            <returns>DateTimeX 结构，表示将 DateTimeX 结构与 TimeSpanX 结构相加得到的结果。</returns>
        </member>
        <member name="M:Com.DateTimeX.op_Addition(Com.DateTimeX,System.TimeSpan)">
            <summary>
            返回将 DateTimeX 结构与 TimeSpan 结构相加得到的 DateTimeX 结构的新实例。
            </summary>
            <param name="dateTime">DateTimeX 结构，表示被加数。</param>
            <param name="timeSpan">TimeSpan 结构，表示加数。</param>
            <returns>DateTimeX 结构，表示将 DateTimeX 结构与 TimeSpan 结构相加得到的结果。</returns>
        </member>
        <member name="M:Com.DateTimeX.op_Subtraction(Com.DateTimeX,Com.TimeSpanX)">
            <summary>
            返回将 DateTimeX 结构与 TimeSpanX 结构相减得到的 DateTimeX 结构的新实例。
            </summary>
            <param name="dateTime">DateTimeX 结构，表示被减数。</param>
            <param name="timeSpan">TimeSpanX 结构，表示减数。</param>
            <returns>DateTimeX 结构，表示将 DateTimeX 结构与 TimeSpanX 结构相减得到的结果。</returns>
        </member>
        <member name="M:Com.DateTimeX.op_Subtraction(Com.DateTimeX,System.TimeSpan)">
            <summary>
            返回将 DateTimeX 结构与 TimeSpan 结构相减得到的 DateTimeX 结构的新实例。
            </summary>
            <param name="dateTime">DateTimeX 结构，表示被减数。</param>
            <param name="timeSpan">TimeSpan 结构，表示减数。</param>
            <returns>DateTimeX 结构，表示将 DateTimeX 结构与 TimeSpan 结构相减得到的结果。</returns>
        </member>
        <member name="M:Com.DateTimeX.op_Implicit(System.DateTime)~Com.DateTimeX">
            <summary>
            将指定的 DateTime 结构隐式转换为 DateTimeX 结构。
            </summary>
            <param name="dateTime">用于转换的 DateTime 结构。</param>
            <returns>DateTimeX 结构，表示隐式转换的结果。</returns>
        </member>
        <member name="T:Com.IO">
            <summary>
            为文件操作提供静态方法。
            </summary>
        </member>
        <member name="M:Com.IO.CopyFolder(System.String,System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            将源文件夹内的所有内容复制到目标文件夹内，并返回表示此操作是否成功的布尔值。
            </summary>
            <param name="sourceFolder">源文件夹。</param>
            <param name="destFolder">目标文件夹。</param>
            <param name="recursive">如果存在子文件夹，是否递归复制所有子文件夹内的内容。</param>
            <param name="merge">如果存在同名文件夹，是否合并文件夹内容。</param>
            <param name="overwrite">如果存在同名文件，是否覆盖目标文件。</param>
            <returns>布尔值，表示此操作是否成功。</returns>
        </member>
        <member name="M:Com.IO.CopyFolder(System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            将源文件夹内的所有内容复制到目标文件夹内，并返回表示此操作是否成功的布尔值。如果存在同名文件，将不覆盖目标文件。
            </summary>
            <param name="sourceFolder">源文件夹。</param>
            <param name="destFolder">目标文件夹。</param>
            <param name="recursive">如果存在子文件夹，是否递归复制所有子文件夹内的内容。</param>
            <param name="merge">如果存在同名文件夹，是否合并文件夹内容。</param>
            <returns>布尔值，表示此操作是否成功。</returns>
        </member>
        <member name="M:Com.IO.CopyFolder(System.String,System.String,System.Boolean)">
            <summary>
            将源文件夹内的所有内容复制到目标文件夹内，并返回表示此操作是否成功的布尔值。如果存在同名文件夹，将不合并文件夹内容。如果存在同名文件，将不覆盖目标文件。
            </summary>
            <param name="sourceFolder">源文件夹。</param>
            <param name="destFolder">目标文件夹。</param>
            <param name="recursive">如果存在子文件夹，是否递归复制所有子文件夹内的内容。</param>
            <returns>布尔值，表示此操作是否成功。</returns>
        </member>
        <member name="M:Com.IO.CopyFolder(System.String,System.String)">
            <summary>
            将源文件夹内的所有内容复制到目标文件夹内，并返回表示此操作是否成功的布尔值。如果存在子文件夹，将不递归复制子文件夹内的内容。如果存在同名文件夹，将不合并文件夹内容。如果存在同名文件，将不覆盖目标文件。
            </summary>
            <param name="sourceFolder">源文件夹。</param>
            <param name="destFolder">目标文件夹。</param>
            <returns>布尔值，表示此操作是否成功。</returns>
        </member>
        <member name="T:Com.Matrix">
            <summary>
            以双精度浮点数二维数组表示的矩阵。
            </summary>
        </member>
        <member name="M:Com.Matrix.#ctor(System.Drawing.Size)">
            <summary>
            使用指定的宽度（列数）与高度（行数）初始化 Matrix 的新实例。
            </summary>
            <param name="size">矩阵的宽度（列数）与高度（行数）。</param>
        </member>
        <member name="M:Com.Matrix.#ctor(System.Drawing.Size,System.Double)">
            <summary>
            使用指定的宽度（列数）、高度（行数）与所有元素的值初始化 Matrix 的新实例。
            </summary>
            <param name="size">矩阵的宽度（列数）与高度（行数）。</param>
            <param name="value">矩阵的所有元素的值。</param>
        </member>
        <member name="M:Com.Matrix.#ctor(System.Int32,System.Int32)">
            <summary>
            使用指定的宽度（列数）与高度（行数）初始化 Matrix 的新实例。
            </summary>
            <param name="width">矩阵的宽度（列数）。</param>
            <param name="height">矩阵的高度（行数）。</param>
        </member>
        <member name="M:Com.Matrix.#ctor(System.Int32,System.Int32,System.Double)">
            <summary>
            使用指定的宽度（列数）、高度（行数）与所有元素的值初始化 Matrix 的新实例。
            </summary>
            <param name="width">矩阵的宽度（列数）。</param>
            <param name="height">矩阵的高度（行数）。</param>
            <param name="value">矩阵的所有元素的值。</param>
        </member>
        <member name="M:Com.Matrix.#ctor(System.Double[0:,0:])">
            <summary>
            使用双精度浮点数二维数组表示的矩阵元素初始化 Matrix 的新实例。
            </summary>
            <param name="values">双精度浮点数二维数组表示的矩阵元素。</param>
        </member>
        <member name="P:Com.Matrix.Item(System.Int32,System.Int32)">
            <summary>
            获取或设置此 Matrix 的指定索引的元素。
            </summary>
            <param name="x">矩阵的宽度方向（列）的索引。</param>
            <param name="y">矩阵的高度方向（行）的索引。</param>
        </member>
        <member name="P:Com.Matrix.Item(System.Drawing.Point)">
            <summary>
            获取或设置此 Matrix 的指定索引的元素。
            </summary>
            <param name="index">矩阵的宽度方向（列）与高度方向（行）的索引。</param>
        </member>
        <member name="P:Com.Matrix.IsEmpty">
            <summary>
            获取表示此 Matrix 是否为空矩阵的布尔值。
            </summary>
        </member>
        <member name="P:Com.Matrix.Size">
            <summary>
            获取此 Matrix 的宽度（列数）与高度（行数）。
            </summary>
        </member>
        <member name="P:Com.Matrix.Width">
            <summary>
            获取此 Matrix 的宽度（列数）。
            </summary>
        </member>
        <member name="P:Com.Matrix.Column">
            <summary>
            获取此 Matrix 的列数（宽度）。
            </summary>
        </member>
        <member name="P:Com.Matrix.Height">
            <summary>
            获取此 Matrix 的高度（行数）。
            </summary>
        </member>
        <member name="P:Com.Matrix.Row">
            <summary>
            获取此 Matrix 的行数（高度）。
            </summary>
        </member>
        <member name="P:Com.Matrix.Count">
            <summary>
            获取此 Matrix 包含的元素数量。
            </summary>
        </member>
        <member name="P:Com.Matrix.Determinant">
            <summary>
            获取此 Matrix 的行列式值。
            </summary>
        </member>
        <member name="P:Com.Matrix.Rank">
            <summary>
            获取此 Matrix 的秩。
            </summary>
        </member>
        <member name="P:Com.Matrix.Transport">
            <summary>
            获取此 Matrix 的转置矩阵。
            </summary>
        </member>
        <member name="P:Com.Matrix.Adjoint">
            <summary>
            获取此 Matrix 的伴随矩阵。
            </summary>
        </member>
        <member name="P:Com.Matrix.Invert">
            <summary>
            获取此 Matrix 的逆矩阵。
            </summary>
        </member>
        <member name="P:Com.Matrix.Empty">
            <summary>
            获取表示空矩阵的 Matrix 的新实例。
            </summary>
        </member>
        <member name="M:Com.Matrix.Equals(System.Object)">
            <summary>
            判断此 Matrix 是否与指定的对象相等。
            </summary>
            <param name="obj">用于比较的对象。</param>
            <returns>布尔值，表示此 Matrix 是否与指定的对象相等。</returns>
        </member>
        <member name="M:Com.Matrix.GetHashCode">
            <summary>
            返回此 Matrix 的哈希代码。
            </summary>
            <returns>32 位整数，表示此 Matrix 的哈希代码。</returns>
        </member>
        <member name="M:Com.Matrix.ToString">
            <summary>
            将此 Matrix 转换为字符串。
            </summary>
            <returns>字符串，表示此 Matrix 的字符串形式。</returns>
        </member>
        <member name="M:Com.Matrix.Equals(Com.Matrix)">
            <summary>
            判断此 Matrix 是否与指定的 Matrix 对象相等。
            </summary>
            <param name="matrix">用于比较的 Matrix 对象。</param>
            <returns>布尔值，表示此 Matrix 是否与指定的 Matrix 对象相等。</returns>
        </member>
        <member name="M:Com.Matrix.Copy">
            <summary>
            获取此 Matrix 的副本。
            </summary>
            <returns>Matrix 对象，表示此 Matrix 的副本。</returns>
        </member>
        <member name="M:Com.Matrix.SubMatrix(System.Drawing.Point,System.Drawing.Size)">
            <summary>
            获取表示此 Matrix 的子矩阵的 Matrix 的新实例。
            </summary>
            <param name="index">子矩阵首列与首行在此 Matrix 的宽度方向（列）与高度方向（行）的索引。</param>
            <param name="size">子矩阵的宽度（列数）与高度（行数）。</param>
            <returns>Matrix 对象，表示此 Matrix 的子矩阵。</returns>
        </member>
        <member name="M:Com.Matrix.SubMatrix(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            获取表示此 Matrix 的子矩阵的 Matrix 的新实例。
            </summary>
            <param name="x">子矩阵首列在此 Matrix 的宽度方向（列）的索引。</param>
            <param name="y">子矩阵首行在此 Matrix 的高度方向（行）的索引。</param>
            <param name="width">子矩阵的宽度（列数）。</param>
            <param name="height">子矩阵的高度（行数）。</param>
            <returns>Matrix 对象，表示此 Matrix 的子矩阵。</returns>
        </member>
        <member name="M:Com.Matrix.GetColumn(System.Int32)">
            <summary>
            获取表示此 Matrix 的指定列的 Vector 的新实例。
            </summary>
            <param name="x">指定列在此 Matrix 的宽度方向（列）的索引。</param>
            <returns>Vector 对象，表示此 Matrix 的指定列。</returns>
        </member>
        <member name="M:Com.Matrix.SetColumn(System.Int32,Com.Vector)">
            <summary>
            按 Vector 对象表示的列向量设置表示此 Matrix 的指定列。
            </summary>
            <param name="x">指定列在此 Matrix 的宽度方向（列）的索引。</param>
            <param name="vector">Vector 对象，表示的列向量。</param>
        </member>
        <member name="M:Com.Matrix.GetRow(System.Int32)">
            <summary>
            获取表示此 Matrix 的指定行的 Vector 的新实例。
            </summary>
            <param name="y">指定行在此 Matrix 的高度方向（行）的索引。</param>
            <returns>Vector 对象，表示此 Matrix 的指定行。</returns>
        </member>
        <member name="M:Com.Matrix.SetRow(System.Int32,Com.Vector)">
            <summary>
            按 Vector 对象表示的行向量设置表示此 Matrix 的指定行。
            </summary>
            <param name="y">指定行在此 Matrix 的高度方向（行）的索引。</param>
            <param name="vector">Vector 对象，表示的行向量。</param>
        </member>
        <member name="M:Com.Matrix.ToArray">
            <summary>
            将此 Matrix 转换为双精度浮点数二维数组。
            </summary>
            <returns>双精度浮点数二维数组，表示转换的结果。</returns>
        </member>
        <member name="M:Com.Matrix.IsNullOrEmpty(Com.Matrix)">
            <summary>
            判断指定的 Matrix 是否为 null 或表示空矩阵。
            </summary>
            <param name="matrix">用于判断的 Matrix 对象。</param>
            <returns>布尔值，表示指定的 Matrix 是否为 null 或表示空矩阵。</returns>
        </member>
        <member name="M:Com.Matrix.Equals(Com.Matrix,Com.Matrix)">
            <summary>
            判断两个 Matrix 对象是否相等。
            </summary>
            <param name="left">用于比较的第一个 Matrix 对象。</param>
            <param name="right">用于比较的第二个 Matrix 对象。</param>
            <returns>布尔值，表示两个 Matrix 对象是否相等。</returns>
        </member>
        <member name="M:Com.Matrix.Identity(System.Int32)">
            <summary>
            返回表示单位矩阵的 Matrix 的新实例。
            </summary>
            <param name="order">矩阵的阶数。</param>
            <returns>Matrix 对象，表示单位矩阵。</returns>
        </member>
        <member name="M:Com.Matrix.Zeros(System.Drawing.Size)">
            <summary>
            返回表示全零矩阵的 Matrix 的新实例。
            </summary>
            <param name="size">矩阵的宽度（列数）与高度（行数）。</param>
            <returns>Matrix 对象，表示全零矩阵。</returns>
        </member>
        <member name="M:Com.Matrix.Zeros(System.Int32,System.Int32)">
            <summary>
            返回表示全零矩阵的 Matrix 的新实例。
            </summary>
            <param name="width">矩阵的宽度（列数）。</param>
            <param name="height">矩阵的高度（行数）。</param>
            <returns>Matrix 对象，表示全零矩阵。</returns>
        </member>
        <member name="M:Com.Matrix.Ones(System.Drawing.Size)">
            <summary>
            返回表示全一矩阵的 Matrix 的新实例。
            </summary>
            <param name="size">矩阵的宽度（列数）与高度（行数）。</param>
            <returns>Matrix 对象，表示全一矩阵。</returns>
        </member>
        <member name="M:Com.Matrix.Ones(System.Int32,System.Int32)">
            <summary>
            返回表示全一矩阵的 Matrix 的新实例。
            </summary>
            <param name="width">矩阵的宽度（列数）。</param>
            <param name="height">矩阵的高度（行数）。</param>
            <returns>Matrix 对象，表示全一矩阵。</returns>
        </member>
        <member name="M:Com.Matrix.Diagonal(System.Double[],System.Int32)">
            <summary>
            返回表示对角矩阵的 Matrix 的新实例。
            </summary>
            <param name="array">包含对角元素的双精度浮点数数组。</param>
            <param name="rowsUponMainDiag">对角元素在矩阵中位于主对角线上方的行数。</param>
            <returns>Matrix 对象，表示对角矩阵。</returns>
        </member>
        <member name="M:Com.Matrix.Diagonal(System.Double[])">
            <summary>
            返回表示对角矩阵的 Matrix 的新实例。
            </summary>
            <param name="array">包含对角元素的双精度浮点数数组。</param>
            <returns>Matrix 对象，表示对角矩阵。</returns>
        </member>
        <member name="M:Com.Matrix.Augment(Com.Matrix,Com.Matrix)">
            <summary>
            返回表示由 2 个 Matrix 对象组成的增广矩阵的 Matrix 的新实例。
            </summary>
            <param name="left">Matrix 对象，表示左侧的矩阵。</param>
            <param name="right">Matrix 对象，表示右侧的矩阵。</param>
            <returns>Matrix 对象，表示由 2 个 Matrix 对象组成的增广矩阵。</returns>
        </member>
        <member name="M:Com.Matrix.Add(Com.Matrix,System.Double)">
            <summary>
            返回将 Matrix 对象与双精度浮点数相加得到的 Matrix 的新实例。
            </summary>
            <param name="matrix">Matrix 对象，表示被加数。</param>
            <param name="n">双精度浮点数，表示加数。</param>
            <returns>Matrix 对象，表示将 Matrix 对象与双精度浮点数相加得到的结果。</returns>
        </member>
        <member name="M:Com.Matrix.Add(System.Double,Com.Matrix)">
            <summary>
            返回将双精度浮点数与 Matrix 对象相加得到的 Matrix 的新实例。
            </summary>
            <param name="n">双精度浮点数，表示被加数。</param>
            <param name="matrix">Matrix 对象，表示加数。</param>
            <returns>Matrix 对象，表示将双精度浮点数与 Matrix 对象相加得到的结果。</returns>
        </member>
        <member name="M:Com.Matrix.Add(Com.Matrix,Com.Matrix)">
            <summary>
            返回将 Matrix 对象与 Matrix 对象相加得到的 Matrix 的新实例。
            </summary>
            <param name="left">Matrix 对象，表示被加数。</param>
            <param name="right">Matrix 对象，表示加数。</param>
            <returns>Matrix 对象，表示将 Matrix 对象与 Matrix 对象相加得到的结果。</returns>
        </member>
        <member name="M:Com.Matrix.Subtract(Com.Matrix,System.Double)">
            <summary>
            返回将 Matrix 对象与双精度浮点数相减得到的 Matrix 的新实例。
            </summary>
            <param name="matrix">Matrix 对象，表示被减数。</param>
            <param name="n">双精度浮点数，表示减数。</param>
            <returns>Matrix 对象，表示将 Matrix 对象与双精度浮点数相减得到的结果。</returns>
        </member>
        <member name="M:Com.Matrix.Subtract(System.Double,Com.Matrix)">
            <summary>
            返回将双精度浮点数与 Matrix 对象相减得到的 Matrix 的新实例。
            </summary>
            <param name="n">双精度浮点数，表示被减数。</param>
            <param name="matrix">Matrix 对象，表示减数。</param>
            <returns>Matrix 对象，表示将双精度浮点数与 Matrix 对象相减得到的结果。</returns>
        </member>
        <member name="M:Com.Matrix.Subtract(Com.Matrix,Com.Matrix)">
            <summary>
            返回将 Matrix 对象与 Matrix 对象相减得到的 Matrix 的新实例。
            </summary>
            <param name="left">Matrix 对象，表示被减数。</param>
            <param name="right">Matrix 对象，表示减数。</param>
            <returns>Matrix 对象，表示将 Matrix 对象与 Matrix 对象相减得到的结果。</returns>
        </member>
        <member name="M:Com.Matrix.Multiply(Com.Matrix,System.Double)">
            <summary>
            返回将 Matrix 对象与双精度浮点数相乘得到的 Matrix 的新实例。
            </summary>
            <param name="matrix">Matrix 对象，表示被乘数。</param>
            <param name="n">双精度浮点数，表示乘数。</param>
            <returns>Matrix 对象，表示将 Matrix 对象与双精度浮点数相乘得到的结果。</returns>
        </member>
        <member name="M:Com.Matrix.Multiply(System.Double,Com.Matrix)">
            <summary>
            返回将双精度浮点数与 Matrix 对象相乘得到的 Matrix 的新实例。
            </summary>
            <param name="n">双精度浮点数，表示被乘数。</param>
            <param name="matrix">Matrix 对象，表示乘数。</param>
            <returns>Matrix 对象，表示将双精度浮点数与 Matrix 对象相乘得到的结果。</returns>
        </member>
        <member name="M:Com.Matrix.Multiply(Com.Matrix,Com.Matrix)">
            <summary>
            返回将 Matrix 对象与 Matrix 对象相乘得到的 Matrix 的新实例。
            </summary>
            <param name="left">Matrix 对象，表示被乘数。</param>
            <param name="right">Matrix 对象，表示乘数。</param>
            <returns>Matrix 对象，表示将 Matrix 对象与 Matrix 对象相乘得到的结果。</returns>
        </member>
        <member name="M:Com.Matrix.Multiply(Com.Matrix,Com.Vector)">
            <summary>
            返回将 Matrix 对象与 Vector 对象相乘得到的 Vector 的新实例。
            </summary>
            <param name="left">Matrix 对象，表示被乘数。</param>
            <param name="right">Vector 对象，表示乘数。</param>
            <returns>Vector 对象，表示将 Matrix 对象与 Vector 对象相乘得到的结果。</returns>
        </member>
        <member name="M:Com.Matrix.Multiply(Com.Vector,Com.Matrix)">
            <summary>
            返回将 Vector 对象与 Matrix 对象相乘得到的 Vector 的新实例。
            </summary>
            <param name="left">Vector 对象，表示被乘数。</param>
            <param name="right">Matrix 对象，表示乘数。</param>
            <returns>Vector 对象，表示将 Vector 对象与 Matrix 对象相乘得到的结果。</returns>
        </member>
        <member name="M:Com.Matrix.MultiplyLeft(Com.Matrix[])">
            <summary>
            返回将数组中所有 Matrix 对象依次左乘得到的 Matrix 的新实例。
            </summary>
            <param name="matrices">左矩阵数组。</param>
            <returns>Matrix 对象，表示将数组中所有 Matrix 对象依次左乘得到的结果。</returns>
        </member>
        <member name="M:Com.Matrix.MultiplyLeft(System.Collections.Generic.IEnumerable{Com.Matrix})">
            <summary>
            返回将枚举容器中所有 Matrix 对象依次左乘得到的 Matrix 的新实例。
            </summary>
            <param name="matrices">左矩阵枚举容器。</param>
            <returns>Matrix 对象，表示将枚举容器中所有 Matrix 对象依次左乘得到的结果。</returns>
        </member>
        <member name="M:Com.Matrix.MultiplyLeft(System.Collections.Generic.List{Com.Matrix})">
            <summary>
            返回将列表中所有 Matrix 对象依次左乘得到的 Matrix 的新实例。
            </summary>
            <param name="matrices">左矩阵列表。</param>
            <returns>Matrix 对象，表示将列表中所有 Matrix 对象依次左乘得到的结果。</returns>
        </member>
        <member name="M:Com.Matrix.MultiplyRight(Com.Matrix[])">
            <summary>
            返回将数组中所有 Matrix 对象依次右乘得到的 Matrix 的新实例。
            </summary>
            <param name="matrices">右矩阵数组。</param>
            <returns>Matrix 对象，表示将数组中所有 Matrix 对象依次右乘得到的结果。</returns>
        </member>
        <member name="M:Com.Matrix.MultiplyRight(System.Collections.Generic.IEnumerable{Com.Matrix})">
            <summary>
            返回将枚举容器中所有 Matrix 对象依次右乘得到的 Matrix 的新实例。
            </summary>
            <param name="matrices">右矩阵枚举容器。</param>
            <returns>Matrix 对象，表示将枚举容器中所有 Matrix 对象依次右乘得到的结果。</returns>
        </member>
        <member name="M:Com.Matrix.MultiplyRight(System.Collections.Generic.List{Com.Matrix})">
            <summary>
            返回将列表中所有 Matrix 对象依次右乘得到的 Matrix 的新实例。
            </summary>
            <param name="matrices">右矩阵列表。</param>
            <returns>Matrix 对象，表示将列表中所有 Matrix 对象依次右乘得到的结果。</returns>
        </member>
        <member name="M:Com.Matrix.Divide(Com.Matrix,System.Double)">
            <summary>
            返回将 Matrix 对象与双精度浮点数相除得到的 Matrix 的新实例。
            </summary>
            <param name="matrix">Matrix 对象，表示被除数。</param>
            <param name="n">双精度浮点数，表示除数。</param>
            <returns>Matrix 对象，表示将 Matrix 对象与双精度浮点数相除得到的结果。</returns>
        </member>
        <member name="M:Com.Matrix.Divide(System.Double,Com.Matrix)">
            <summary>
            返回将双精度浮点数与 Matrix 对象相除得到的 Matrix 的新实例。
            </summary>
            <param name="n">双精度浮点数，表示被除数。</param>
            <param name="matrix">Matrix 对象，表示除数。</param>
            <returns>Matrix 对象，表示将双精度浮点数与 Matrix 对象相除得到的结果。</returns>
        </member>
        <member name="M:Com.Matrix.DivideLeft(Com.Matrix,Com.Matrix)">
            <summary>
            返回将 Matrix 对象与 Matrix 对象左除得到的 Matrix 的新实例。
            </summary>
            <param name="left">Matrix 对象，表示被除数。</param>
            <param name="right">Matrix 对象，表示除数。</param>
            <returns>Matrix 对象，表示将 Matrix 对象与 Matrix 对象左除得到的结果。</returns>
        </member>
        <member name="M:Com.Matrix.DivideLeft(Com.Matrix,Com.Vector)">
            <summary>
            返回将 Matrix 对象与 Vector 对象左除得到的 Vector 的新实例。
            </summary>
            <param name="left">Matrix 对象，表示被除数。</param>
            <param name="right">Vector 对象，表示除数。</param>
            <returns>Vector 对象，表示将 Matrix 对象与 Vector 对象左除得到的结果。</returns>
        </member>
        <member name="M:Com.Matrix.DivideRight(Com.Matrix,Com.Matrix)">
            <summary>
            返回将 Matrix 对象与 Matrix 对象右除得到的 Matrix 的新实例。
            </summary>
            <param name="left">Matrix 对象，表示被除数。</param>
            <param name="right">Matrix 对象，表示除数。</param>
            <returns>Matrix 对象，表示将 Matrix 对象与 Matrix 对象右除得到的结果。</returns>
        </member>
        <member name="M:Com.Matrix.DivideRight(Com.Vector,Com.Matrix)">
            <summary>
            返回将 Vector 对象与 Matrix 对象右除得到的 Vector 的新实例。
            </summary>
            <param name="left">Vector 对象，表示被除数。</param>
            <param name="right">Matrix 对象，表示除数。</param>
            <returns>Vector 对象，表示将 Vector 对象与 Matrix 对象右除得到的结果。</returns>
        </member>
        <member name="M:Com.Matrix.SolveLinearEquation(Com.Matrix,Com.Vector)">
            <summary>
            返回由 Matrix 对象表示的系数矩阵与 Vector 对象表示的常数项指定的非齐次线性方程组的解向量。
            </summary>
            <param name="matrix">Matrix 对象，表示系数矩阵。</param>
            <param name="vector">Vector 对象，表示常数项。</param>
            <returns>Vector 对象，表示由 Matrix 对象与 Vector 对象指定的非齐次线性方程组的解向量。</returns>
        </member>
        <member name="M:Com.Matrix.op_Equality(Com.Matrix,Com.Matrix)">
            <summary>
            判断两个 Matrix 对象是否相等。
            </summary>
            <param name="left">运算符左侧比较的 Matrix 对象。</param>
            <param name="right">运算符右侧比较的 Matrix 对象。</param>
            <returns>布尔值，表示两个 Matrix 对象是否相等。</returns>
        </member>
        <member name="M:Com.Matrix.op_Inequality(Com.Matrix,Com.Matrix)">
            <summary>
            判断两个 Matrix 对象是否不相等。
            </summary>
            <param name="left">运算符左侧比较的 Matrix 对象。</param>
            <param name="right">运算符右侧比较的 Matrix 对象。</param>
            <returns>布尔值，表示两个 Matrix 对象是否不相等。</returns>
        </member>
        <member name="T:Com.Painting2D">
            <summary>
            为 2D 绘图提供静态方法。
            </summary>
        </member>
        <member name="M:Com.Painting2D.PaintLine(System.Drawing.Graphics,System.Drawing.Size,Com.PointD,Com.PointD,System.Drawing.Color,System.Single)">
            <summary>
            绘制一个直线段，并返回表示是否已经实际完成绘图的布尔值。
            </summary>
            <param name="graph">画布。</param>
            <param name="imageSize">图像大小。</param>
            <param name="pt1">直线段的第一个端点。</param>
            <param name="pt2">直线段的第二个端点。</param>
            <param name="color">线条颜色。</param>
            <param name="width">线条宽度。</param>
            <returns>布尔值，表示是否已经实际完成绘图。</returns>
        </member>
        <member name="M:Com.Painting2D.PaintLine(System.Drawing.Bitmap,Com.PointD,Com.PointD,System.Drawing.Color,System.Single,System.Boolean)">
            <summary>
            绘制一个直线段，并返回表示是否已经实际完成绘图的布尔值。
            </summary>
            <param name="bmp">用于绘制的位图。</param>
            <param name="pt1">直线段的第一个端点。</param>
            <param name="pt2">直线段的第二个端点。</param>
            <param name="color">线条颜色。</param>
            <param name="width">线条宽度。</param>
            <param name="antiAlias">是否使用抗锯齿模式绘图。</param>
            <returns>布尔值，表示是否已经实际完成绘图。</returns>
        </member>
        <member name="M:Com.Painting2D.PaintPolarGrid(System.Drawing.Bitmap,Com.PointD,System.Double,System.Double,System.Int32,System.Drawing.Color,System.Boolean)">
            <summary>
            绘制极坐标网格，并返回表示是否已经实际完成绘图的布尔值。
            </summary>
            <param name="bmp">用于绘制的位图。</param>
            <param name="offset">极坐标网格的中心。</param>
            <param name="radius">极坐标网格的半径。</param>
            <param name="deltaRadius">极坐标网格内部相邻同心圆的半径差。</param>
            <param name="normalIncreasePeriod">法线数量增加周期。</param>
            <param name="color">线条颜色。</param>
            <param name="antiAlias">是否使用抗锯齿模式绘图。</param>
            <returns>布尔值，表示是否已经实际完成绘图。</returns>
        </member>
        <member name="M:Com.Painting2D.PaintCircle(System.Drawing.Bitmap,Com.PointD,System.Double,System.Drawing.Color,System.Single,System.Boolean)">
            <summary>
            绘制一个圆，并返回表示是否已经实际完成绘图的布尔值。
            </summary>
            <param name="bmp">用于绘制的位图。</param>
            <param name="offset">圆的圆心。</param>
            <param name="radius">圆的半径。</param>
            <param name="color">线条颜色。</param>
            <param name="width">线条宽度，0 表示填充。</param>
            <param name="antiAlias">是否使用抗锯齿模式绘图。</param>
            <returns>布尔值，表示是否已经实际完成绘图。</returns>
        </member>
        <member name="M:Com.Painting2D.PaintLargeCircle(System.Drawing.Bitmap,Com.PointD,System.Double,System.Double,System.Drawing.Color,System.Single,System.Boolean,System.Int32,System.Int32,System.Double)">
            <summary>
            绘制一个大型圆，并返回表示是否已经实际完成绘图的布尔值。
            </summary>
            <param name="bmp">用于绘制的位图。</param>
            <param name="offset">圆的圆心。</param>
            <param name="radius">圆的半径。</param>
            <param name="refPhase">参考相位（弧度）（以 +X 轴为 0 弧度，从 +X 轴指向 +Y 轴的方向为正方向）。</param>
            <param name="color">线条颜色。</param>
            <param name="width">线条宽度，0 表示填充。</param>
            <param name="antiAlias">是否使用抗锯齿模式绘图。</param>
            <param name="minDiv">在用于绘制的位图的可见范围内将圆周按相位等分的最小数量。</param>
            <param name="maxDiv">在用于绘制的位图的可见范围内将圆周按相位等分的最大数量。</param>
            <param name="divArc">圆周的任何等分的近似长度（像素）。</param>
            <returns>布尔值，表示是否已经实际完成绘图。</returns>
        </member>
        <member name="M:Com.Painting2D.PaintLargeCircle(System.Drawing.Bitmap,Com.PointD,System.Double,System.Double,System.Drawing.Color,System.Single,System.Boolean)">
            <summary>
            绘制一个大型圆，并返回表示是否已经实际完成绘图的布尔值。
            </summary>
            <param name="bmp">用于绘制的位图。</param>
            <param name="offset">圆的圆心。</param>
            <param name="radius">圆的半径。</param>
            <param name="refPhase">参考相位（弧度）（以 +X 轴为 0 弧度，从 +X 轴指向 +Y 轴的方向为正方向）。</param>
            <param name="color">线条颜色。</param>
            <param name="width">线条宽度，0 表示填充。</param>
            <param name="antiAlias">是否使用抗锯齿模式绘图。</param>
            <returns>布尔值，表示是否已经实际完成绘图。</returns>
        </member>
        <member name="M:Com.Painting2D.PaintLargeEllipse(System.Drawing.Bitmap,Com.PointD,System.Double,System.Double,System.Double,System.Double,System.Drawing.Color,System.Single,System.Boolean,System.Int32,System.Int32,System.Double)">
            <summary>
            绘制一个大型椭圆，并返回表示是否已经实际完成绘图的布尔值。
            </summary>
            <param name="bmp">用于绘制的位图。</param>
            <param name="offset">椭圆的焦点。</param>
            <param name="semiMajorAxis">椭圆的半长轴。</param>
            <param name="eccentricity">椭圆的离心率。</param>
            <param name="rotateAngle">椭圆的旋转角（弧度）（以 +X 轴为 0 弧度，从 +X 轴指向 +Y 轴的方向为正方向，焦点到近焦点连线相对于 +X 轴的角度）。</param>
            <param name="refPhase">参考相位（弧度）（以 +X 轴为 0 弧度，从 +X 轴指向 +Y 轴的方向为正方向）。</param>
            <param name="color">线条颜色。</param>
            <param name="width">线条宽度，0 表示填充。</param>
            <param name="antiAlias">是否使用抗锯齿模式绘图。</param>
            <param name="minDiv">在用于绘制的位图的可见范围内将椭圆周按相位等分的最小数量。</param>
            <param name="maxDiv">在用于绘制的位图的可见范围内将椭圆周按相位等分的最大数量。</param>
            <param name="divArc">椭圆周的任何等分的近似长度（像素）。</param>
            <returns>布尔值，表示是否已经实际完成绘图。</returns>
        </member>
        <member name="M:Com.Painting2D.PaintLargeEllipse(System.Drawing.Bitmap,Com.PointD,System.Double,System.Double,System.Double,System.Double,System.Drawing.Color,System.Single,System.Boolean)">
            <summary>
            绘制一个大型椭圆，并返回表示是否已经实际完成绘图的布尔值。
            </summary>
            <param name="bmp">用于绘制的位图。</param>
            <param name="offset">椭圆的焦点。</param>
            <param name="semiMajorAxis">椭圆的半长轴。</param>
            <param name="eccentricity">椭圆的离心率。</param>
            <param name="rotateAngle">椭圆的旋转角（弧度）（以 +X 轴为 0 弧度，从 +X 轴指向 +Y 轴的方向为正方向，焦点到近焦点连线相对于 +X 轴的角度）。</param>
            <param name="refPhase">参考相位（弧度）（以 +X 轴为 0 弧度，从 +X 轴指向 +Y 轴的方向为正方向）。</param>
            <param name="color">线条颜色。</param>
            <param name="width">线条宽度，0 表示填充。</param>
            <param name="antiAlias">是否使用抗锯齿模式绘图。</param>
            <returns>布尔值，表示是否已经实际完成绘图。</returns>
        </member>
        <member name="M:Com.Painting2D.PaintTextWithShadow(System.Drawing.Bitmap,System.String,System.Drawing.Font,System.Drawing.Color,System.Drawing.Color,System.Drawing.PointF,System.Single,System.Boolean)">
            <summary>
            绘制一行带有阴影效果的文本，阴影位于文本右下方，并返回表示是否已经实际完成绘图的布尔值。
            </summary>
            <param name="bmp">用于绘制的位图。</param>
            <param name="text">文本内容。</param>
            <param name="font">文本字体。</param>
            <param name="frontColor">文本颜色。</param>
            <param name="backColor">阴影颜色，0 表示填充。</param>
            <param name="pt">文本左上角坐标。</param>
            <param name="offset">阴影偏移相对于文本字体大小的比例。</param>
            <param name="antiAlias">是否使用抗锯齿模式绘图。</param>
            <returns>布尔值，表示是否已经实际完成绘图。</returns>
        </member>
        <member name="M:Com.Painting2D.PaintImageOnTransparentForm(System.Windows.Forms.Form,System.Drawing.Bitmap,System.Double)">
            <summary>
            在透明窗口中绘制图像，并返回表示是否已经实际完成绘图的布尔值。
            </summary>
            <param name="form">用于绘制的窗口。</param>
            <param name="bmp">绘制的图像。</param>
            <param name="opacity">绘制图像的不透明度。</param>
            <returns>布尔值，表示是否已经实际完成绘图。</returns>
        </member>
        <member name="T:Com.Painting3D">
            <summary>
            为 3D 绘图提供静态方法。
            </summary>
        </member>
        <member name="M:Com.Painting3D.PaintCuboid(System.Drawing.Bitmap,Com.PointD3D,Com.PointD3D,System.Drawing.Color,System.Single,System.Collections.Generic.List{Com.Matrix},System.Double,Com.PointD3D,System.Boolean,System.Double,System.Boolean)">
            <summary>
            绘制一个长方体，并返回表示是否已经实际完成绘图的布尔值。
            </summary>
            <param name="bmp">用于绘制的位图。</param>
            <param name="center">长方体的中心坐标。</param>
            <param name="size">长方体的大小。</param>
            <param name="color">长方体的颜色。</param>
            <param name="edgeWidth">长方体的棱的宽度。</param>
            <param name="affineMatrices">仿射矩阵（左矩阵）列表。</param>
            <param name="focalLength">焦距。</param>
            <param name="illuminationDirection">光照方向。</param>
            <param name="illuminationDirectionIsAfterAffineTransform">光照方向是否基于仿射变换之后的坐标系。</param>
            <param name="exposure">曝光，取值范围为 [-100, 100]。</param>
            <param name="antiAlias">是否使用抗锯齿模式绘图。</param>
            <returns>布尔值，表示是否已经实际完成绘图。</returns>
        </member>
        <member name="M:Com.Painting3D.PaintCuboid(System.Drawing.Bitmap,Com.PointD3D,Com.PointD3D,System.Drawing.Color,System.Single,Com.Matrix,System.Double,Com.PointD3D,System.Boolean,System.Double,System.Boolean)">
            <summary>
            绘制一个长方体，并返回表示是否已经实际完成绘图的布尔值。
            </summary>
            <param name="bmp">用于绘制的位图。</param>
            <param name="center">长方体的中心坐标。</param>
            <param name="size">长方体的大小。</param>
            <param name="color">长方体的颜色。</param>
            <param name="edgeWidth">长方体的棱的宽度。</param>
            <param name="affineMatrix">仿射矩阵（左矩阵）。</param>
            <param name="focalLength">焦距。</param>
            <param name="illuminationDirection">光照方向。</param>
            <param name="illuminationDirectionIsAfterAffineTransform">光照方向是否基于仿射变换之后的坐标系。</param>
            <param name="exposure">曝光，取值范围为 [-100, 100]。</param>
            <param name="antiAlias">是否使用抗锯齿模式绘图。</param>
            <returns>布尔值，表示是否已经实际完成绘图。</returns>
        </member>
        <member name="M:Com.Painting3D.PaintCuboid(System.Drawing.Bitmap,Com.PointD3D,Com.PointD3D,System.Drawing.Color,System.Single,System.Collections.Generic.List{Com.Matrix},System.Double,System.Boolean)">
            <summary>
            绘制一个长方体，并返回表示是否已经实际完成绘图的布尔值。
            </summary>
            <param name="bmp">用于绘制的位图。</param>
            <param name="center">长方体的中心坐标。</param>
            <param name="size">长方体的大小。</param>
            <param name="color">长方体的颜色。</param>
            <param name="edgeWidth">长方体的棱的宽度。</param>
            <param name="affineMatrices">仿射矩阵（左矩阵）列表。</param>
            <param name="focalLength">焦距。</param>
            <param name="antiAlias">是否使用抗锯齿模式绘图。</param>
            <returns>布尔值，表示是否已经实际完成绘图。</returns>
        </member>
        <member name="M:Com.Painting3D.PaintCuboid(System.Drawing.Bitmap,Com.PointD3D,Com.PointD3D,System.Drawing.Color,System.Single,Com.Matrix,System.Double,System.Boolean)">
            <summary>
            绘制一个长方体，并返回表示是否已经实际完成绘图的布尔值。
            </summary>
            <param name="bmp">用于绘制的位图。</param>
            <param name="center">长方体的中心坐标。</param>
            <param name="size">长方体的大小。</param>
            <param name="color">长方体的颜色。</param>
            <param name="edgeWidth">长方体的棱的宽度。</param>
            <param name="affineMatrix">仿射矩阵（左矩阵）。</param>
            <param name="focalLength">焦距。</param>
            <param name="antiAlias">是否使用抗锯齿模式绘图。</param>
            <returns>布尔值，表示是否已经实际完成绘图。</returns>
        </member>
        <member name="T:Com.PointD">
            <summary>
            以一组有序的双精度浮点数表示的二维直角坐标系坐标。
            </summary>
        </member>
        <member name="M:Com.PointD.#ctor(System.Double,System.Double)">
            <summary>
            使用双精度浮点数表示的 X 坐标与 Y 坐标初始化 PointD 结构的新实例。
            </summary>
            <param name="x">双精度浮点数表示的 X 坐标。</param>
            <param name="y">双精度浮点数表示的 Y 坐标。</param>
        </member>
        <member name="M:Com.PointD.#ctor(System.Drawing.Point)">
            <summary>
            使用 Point 结构初始化 PointD 结构的新实例。
            </summary>
            <param name="pt">Point 结构。</param>
        </member>
        <member name="M:Com.PointD.#ctor(System.Drawing.PointF)">
            <summary>
            使用 PointF 结构初始化 PointD 结构的新实例。
            </summary>
            <param name="pt">PointF 结构。</param>
        </member>
        <member name="M:Com.PointD.#ctor(System.Drawing.Size)">
            <summary>
            使用 Size 结构初始化 PointD 结构的新实例。
            </summary>
            <param name="sz">Size 结构。</param>
        </member>
        <member name="M:Com.PointD.#ctor(System.Drawing.SizeF)">
            <summary>
            使用 SizeF 结构初始化 PointD 结构的新实例。
            </summary>
            <param name="sz">SizeF 结构。</param>
        </member>
        <member name="M:Com.PointD.#ctor(Com.Complex)">
            <summary>
            使用 Complex 结构初始化 PointD 结构的新实例。
            </summary>
            <param name="comp">Complex 结构。</param>
        </member>
        <member name="F:Com.PointD.Zero">
            <summary>
            表示零向量的 PointD 结构的实例。
            </summary>
        </member>
        <member name="F:Com.PointD.NaN">
            <summary>
            表示所有分量为非数字的 PointD 结构的实例。
            </summary>
        </member>
        <member name="F:Com.PointD.Ex">
            <summary>
            表示 X 基向量的 PointD 结构的实例。
            </summary>
        </member>
        <member name="F:Com.PointD.Ey">
            <summary>
            表示 Y 基向量的 PointD 结构的实例。
            </summary>
        </member>
        <member name="P:Com.PointD.Item(System.Int32)">
            <summary>
            获取或设置此 PointD 结构在指定的基向量方向的分量。
            </summary>
            <param name="index">索引。</param>
        </member>
        <member name="P:Com.PointD.X">
            <summary>
            获取或设置此 PointD 结构在 X 轴的分量。
            </summary>
        </member>
        <member name="P:Com.PointD.Y">
            <summary>
            获取或设置此 PointD 结构在 Y 轴的分量。
            </summary>
        </member>
        <member name="P:Com.PointD.Dimension">
            <summary>
            获取此 PointD 结构的维度。
            </summary>
        </member>
        <member name="P:Com.PointD.IsEmpty">
            <summary>
            获取表示此 PointD 结构是否为空向量的布尔值。
            </summary>
        </member>
        <member name="P:Com.PointD.IsZero">
            <summary>
            获取表示此 PointD 结构是否为零向量的布尔值。
            </summary>
        </member>
        <member name="P:Com.PointD.IsReadOnly">
            <summary>
            获取表示此 PointD 结构是否只读的布尔值。
            </summary>
        </member>
        <member name="P:Com.PointD.IsFixedSize">
            <summary>
            获取表示此 PointD 结构是否具有固定的维度的布尔值。
            </summary>
        </member>
        <member name="P:Com.PointD.IsNaN">
            <summary>
            获取表示此 PointD 结构是否包含非数字分量的布尔值。
            </summary>
        </member>
        <member name="P:Com.PointD.IsInfinity">
            <summary>
            获取表示此 PointD 结构是否包含无穷大分量的布尔值。
            </summary>
        </member>
        <member name="P:Com.PointD.IsNaNOrInfinity">
            <summary>
            获取表示此 PointD 结构是否包含非数字或无穷大分量的布尔值。
            </summary>
        </member>
        <member name="P:Com.PointD.Module">
            <summary>
            获取此 PointD 结构的模。
            </summary>
        </member>
        <member name="P:Com.PointD.ModuleSquared">
            <summary>
            获取此 PointD 结构的模的平方。
            </summary>
        </member>
        <member name="P:Com.PointD.Opposite">
            <summary>
            获取此 PointD 结构的相反向量。
            </summary>
        </member>
        <member name="P:Com.PointD.Normalize">
            <summary>
            获取此 PointD 结构的规范化向量。
            </summary>
        </member>
        <member name="P:Com.PointD.AngleFromX">
            <summary>
            获取此 PointD 结构与 X 轴之间的夹角（弧度）。
            </summary>
        </member>
        <member name="P:Com.PointD.AngleFromY">
            <summary>
            获取此 PointD 结构与 Y 轴之间的夹角（弧度）。
            </summary>
        </member>
        <member name="P:Com.PointD.Azimuth">
            <summary>
            获取此 PointD 结构的方位角。方位角是 PointD 结构与 +X 轴之间的夹角（弧度）（以 +X 轴为 0 弧度，从 +X 轴指向 +Y 轴的方向为正方向）。
            </summary>
        </member>
        <member name="M:Com.PointD.Equals(System.Object)">
            <summary>
            判断此 PointD 结构是否与指定的对象相等。
            </summary>
            <param name="obj">用于比较的对象。</param>
            <returns>布尔值，表示此 PointD 结构是否与指定的对象相等。</returns>
        </member>
        <member name="M:Com.PointD.GetHashCode">
            <summary>
            返回此 PointD 结构的哈希代码。
            </summary>
            <returns>32 位整数，表示此 PointD 结构的哈希代码。</returns>
        </member>
        <member name="M:Com.PointD.ToString">
            <summary>
            将此 PointD 结构转换为字符串。
            </summary>
            <returns>字符串，表示此 PointD 结构的字符串形式。</returns>
        </member>
        <member name="M:Com.PointD.Equals(Com.PointD)">
            <summary>
            判断此 PointD 结构是否与指定的 PointD 结构相等。
            </summary>
            <param name="pt">用于比较的 PointD 结构。</param>
            <returns>布尔值，表示此 PointD 结构是否与指定的 PointD 结构相等。</returns>
        </member>
        <member name="M:Com.PointD.CompareTo(System.Object)">
            <summary>
            将此 PointD 结构与指定的对象进行次序比较。
            </summary>
            <param name="obj">用于比较的对象。</param>
            <returns>32 位整数，表示将此 PointD 结构与指定的对象进行次序比较得到的结果。</returns>
        </member>
        <member name="M:Com.PointD.CompareTo(Com.PointD)">
            <summary>
            将此 PointD 结构与指定的 PointD 结构进行次序比较。
            </summary>
            <param name="pt">用于比较的 PointD 结构。</param>
            <returns>32 位整数，表示将此 PointD 结构与指定的 PointD 结构进行次序比较得到的结果。</returns>
        </member>
        <member name="M:Com.PointD.IndexOf(System.Double)">
            <summary>
            遍历此 PointD 结构的所有分量并返回第一个与指定值相等的分量的索引。
            </summary>
            <param name="item">用于检索的值。</param>
            <returns>32 位整数，表示第一个与指定值相等的分量的索引。</returns>
        </member>
        <member name="M:Com.PointD.IndexOf(System.Double,System.Int32)">
            <summary>
            从指定的索引开始遍历此 PointD 结构的所有分量并返回第一个与指定值相等的分量的索引。
            </summary>
            <param name="item">用于检索的值。</param>
            <param name="startIndex">起始索引。</param>
            <returns>32 位整数，表示第一个与指定值相等的分量的索引。</returns>
        </member>
        <member name="M:Com.PointD.IndexOf(System.Double,System.Int32,System.Int32)">
            <summary>
            从指定的索引开始遍历此 PointD 结构指定数量的分量并返回第一个与指定值相等的分量的索引。
            </summary>
            <param name="item">用于检索的值。</param>
            <param name="startIndex">起始索引。</param>
            <param name="count">遍历的分量数量。</param>
            <returns>32 位整数，表示第一个与指定值相等的分量的索引。</returns>
        </member>
        <member name="M:Com.PointD.LastIndexOf(System.Double)">
            <summary>
            逆序遍历此 PointD 结构的所有分量并返回第一个与指定值相等的分量的索引。
            </summary>
            <param name="item">用于检索的值。</param>
            <returns>32 位整数，表示第一个与指定值相等的分量的索引。</returns>
        </member>
        <member name="M:Com.PointD.LastIndexOf(System.Double,System.Int32)">
            <summary>
            从指定的索引开始逆序遍历此 PointD 结构的所有分量并返回第一个与指定值相等的分量的索引。
            </summary>
            <param name="item">用于检索的值。</param>
            <param name="startIndex">起始索引。</param>
            <returns>32 位整数，表示第一个与指定值相等的分量的索引。</returns>
        </member>
        <member name="M:Com.PointD.LastIndexOf(System.Double,System.Int32,System.Int32)">
            <summary>
            从指定的索引开始逆序遍历此 PointD 结构指定数量的分量并返回第一个与指定值相等的分量的索引。
            </summary>
            <param name="item">用于检索的值。</param>
            <param name="startIndex">起始索引。</param>
            <param name="count">遍历的分量数量。</param>
            <returns>32 位整数，表示第一个与指定值相等的分量的索引。</returns>
        </member>
        <member name="M:Com.PointD.Contains(System.Double)">
            <summary>
            遍历此 PointD 结构的所有分量并返回表示是否存在与指定值相等的分量的布尔值。
            </summary>
            <param name="item">用于检索的值。</param>
            <returns>布尔值，表示是否存在与指定值相等的分量。</returns>
        </member>
        <member name="M:Com.PointD.ToArray">
            <summary>
            将此 PointD 结构转换为双精度浮点数数组。
            </summary>
            <returns>双精度浮点数数组，数组元素表示此 PointD 结构的分量。</returns>
        </member>
        <member name="M:Com.PointD.ToList">
            <summary>
            将此 PointD 结构转换为双精度浮点数列表。
            </summary>
            <returns>双精度浮点数列表，列表元素表示此 PointD 结构的分量。</returns>
        </member>
        <member name="M:Com.PointD.CopyTo(System.Double[],System.Int32)">
            <summary>
            将此 PointD 结构的所有分量复制到双精度浮点数数组中。
            </summary>
            <param name="array">双精度浮点数数组。</param>
            <param name="index">双精度浮点数数组的起始索引。</param>
        </member>
        <member name="M:Com.PointD.ToSpherical">
            <summary>
            返回将此 PointD 结构表示的直角坐标系坐标转换为极坐标系坐标的 PointD 结构的新实例。
            </summary>
            <returns>PointD 结构，表示将此 PointD 结构表示的直角坐标系坐标转换为极坐标系坐标得到的结果。</returns>
        </member>
        <member name="M:Com.PointD.ToCartesian">
            <summary>
            返回将此 PointD 结构表示的极坐标系坐标转换为直角坐标系坐标的 PointD 结构的新实例。
            </summary>
            <returns>PointD 结构，表示将此 PointD 结构表示的极坐标系坐标转换为直角坐标系坐标得到的结果。</returns>
        </member>
        <member name="M:Com.PointD.DistanceFrom(Com.PointD)">
            <summary>
            返回此 PointD 结构与指定的 PointD 结构之间的距离。
            </summary>
            <param name="pt">PointD 结构，表示另一个向量。</param>
            <returns>双精度浮点数，表示此 PointD 结构与指定的 PointD 结构之间的距离。</returns>
        </member>
        <member name="M:Com.PointD.AngleFrom(Com.PointD)">
            <summary>
            返回此 PointD 结构与指定的 PointD 结构之间的夹角（弧度）。
            </summary>
            <param name="pt">PointD 结构，表示另一个向量。</param>
            <returns>双精度浮点数，表示此 PointD 结构与指定的 PointD 结构之间的夹角（弧度）。</returns>
        </member>
        <member name="M:Com.PointD.Offset(System.Int32,System.Double)">
            <summary>
            按双精度浮点数表示的位移将此 PointD 结构的指定的基向量方向的分量平移指定的量。
            </summary>
            <param name="index">索引，用于指定平移的分量所在方向的基向量。</param>
            <param name="d">双精度浮点数表示的位移。</param>
        </member>
        <member name="M:Com.PointD.Offset(System.Double)">
            <summary>
            按双精度浮点数表示的位移将此 PointD 结构的所有分量平移指定的量。
            </summary>
            <param name="d">双精度浮点数表示的位移。</param>
        </member>
        <member name="M:Com.PointD.Offset(Com.PointD)">
            <summary>
            按 PointD 结构表示的位移将此 PointD 结构平移指定的量。
            </summary>
            <param name="pt">PointD 结构表示的位移。</param>
        </member>
        <member name="M:Com.PointD.Offset(System.Double,System.Double)">
            <summary>
            按双精度浮点数表示的 X 坐标位移与 Y 坐标位移将此 PointD 结构平移指定的量。
            </summary>
            <param name="dx">双精度浮点数表示的 X 坐标位移。</param>
            <param name="dy">双精度浮点数表示的 Y 坐标位移。</param>
        </member>
        <member name="M:Com.PointD.OffsetX(System.Double)">
            <summary>
            按双精度浮点数表示的位移将此 PointD 结构在 X 轴的分量平移指定的量。
            </summary>
            <param name="d">双精度浮点数表示的位移。</param>
        </member>
        <member name="M:Com.PointD.OffsetY(System.Double)">
            <summary>
            按双精度浮点数表示的位移将此 PointD 结构在 Y 轴的分量平移指定的量。
            </summary>
            <param name="d">双精度浮点数表示的位移。</param>
        </member>
        <member name="M:Com.PointD.Offset(System.Drawing.Point)">
            <summary>
            按 Point 结构表示的位移将此 PointD 结构平移指定的量。
            </summary>
            <param name="pt">Point 结构表示的位移。</param>
        </member>
        <member name="M:Com.PointD.Offset(System.Drawing.PointF)">
            <summary>
            按 PointF 结构表示的位移将此 PointD 结构平移指定的量。
            </summary>
            <param name="pt">PointF 结构表示的位移。</param>
        </member>
        <member name="M:Com.PointD.Offset(System.Drawing.Size)">
            <summary>
            按 Size 结构表示的位移将此 PointD 结构平移指定的量。
            </summary>
            <param name="sz">Size 结构表示的位移。</param>
        </member>
        <member name="M:Com.PointD.Offset(System.Drawing.SizeF)">
            <summary>
            按 SizeF 结构表示的位移将此 PointD 结构平移指定的量。
            </summary>
            <param name="sz">SizeF 结构表示的位移。</param>
        </member>
        <member name="M:Com.PointD.OffsetCopy(System.Int32,System.Double)">
            <summary>
            返回按双精度浮点数表示的位移将此 PointD 结构的指定的基向量方向的分量平移指定的量的 PointD 结构的新实例。
            </summary>
            <param name="index">索引，用于指定平移的分量所在方向的基向量。</param>
            <param name="d">双精度浮点数表示的位移。</param>
            <returns>PointD 结构，表示按双精度浮点数表示的位移将此 PointD 结构的指定的基向量方向的分量平移指定的量得到的结果。</returns>
        </member>
        <member name="M:Com.PointD.OffsetCopy(System.Double)">
            <summary>
            返回按双精度浮点数表示的位移将此 PointD 结构的所有分量平移指定的量的 PointD 结构的新实例。
            </summary>
            <param name="d">双精度浮点数表示的位移。</param>
            <returns>PointD 结构，表示按双精度浮点数表示的位移将此 PointD 结构的所有分量平移指定的量得到的结果。</returns>
        </member>
        <member name="M:Com.PointD.OffsetCopy(Com.PointD)">
            <summary>
            返回按 PointD 结构表示的位移将此 PointD 结构平移指定的量的 PointD 结构的新实例。
            </summary>
            <param name="pt">PointD 结构表示的位移。</param>
            <returns>PointD 结构，表示按 PointD 结构表示的位移将此 PointD 结构平移指定的量得到的结果。</returns>
        </member>
        <member name="M:Com.PointD.OffsetCopy(System.Double,System.Double)">
            <summary>
            返回按双精度浮点数表示的 X 坐标位移与 Y 坐标位移将此 PointD 结构平移指定的量的 PointD 结构的新实例。
            </summary>
            <param name="dx">双精度浮点数表示的 X 坐标位移。</param>
            <param name="dy">双精度浮点数表示的 Y 坐标位移。</param>
            <returns>PointD 结构，表示按双精度浮点数表示的 X 坐标位移与 Y 坐标位移将此 PointD 结构平移指定的量得到的结果。</returns>
        </member>
        <member name="M:Com.PointD.OffsetXCopy(System.Double)">
            <summary>
            返回按双精度浮点数表示的位移将此 PointD 结构在 X 轴的分量平移指定的量的 PointD 结构的新实例。
            </summary>
            <param name="d">双精度浮点数表示的位移。</param>
            <returns>PointD 结构，表示按双精度浮点数表示的位移将此 PointD 结构在 X 轴的分量平移指定的量得到的结果。</returns>
        </member>
        <member name="M:Com.PointD.OffsetYCopy(System.Double)">
            <summary>
            返回按双精度浮点数表示的位移将此 PointD 结构在 Y 轴的分量平移指定的量的 PointD 结构的新实例。
            </summary>
            <param name="d">双精度浮点数表示的位移。</param>
            <returns>PointD 结构，表示按双精度浮点数表示的位移将此 PointD 结构在 Y 轴的分量平移指定的量得到的结果。</returns>
        </member>
        <member name="M:Com.PointD.OffsetCopy(System.Drawing.Point)">
            <summary>
            返回按 Point 结构表示的位移将此 PointD 结构平移指定的量的 PointD 结构的新实例。
            </summary>
            <param name="pt">Point 结构表示的位移。</param>
            <returns>PointD 结构，表示按 Point 结构表示的位移将此 PointD 结构平移指定的量得到的结果。</returns>
        </member>
        <member name="M:Com.PointD.OffsetCopy(System.Drawing.PointF)">
            <summary>
            返回按 PointF 结构表示的位移将此 PointD 结构平移指定的量的 PointD 结构的新实例。
            </summary>
            <param name="pt">PointF 结构表示的位移。</param>
            <returns>PointD 结构，表示按 PointF 结构表示的位移将此 PointD 结构平移指定的量得到的结果。</returns>
        </member>
        <member name="M:Com.PointD.OffsetCopy(System.Drawing.Size)">
            <summary>
            返回按 Size 结构表示的位移将此 PointD 结构平移指定的量的 PointD 结构的新实例。
            </summary>
            <param name="sz">Size 结构表示的位移。</param>
            <returns>PointD 结构，表示按 Size 结构表示的位移将此 PointD 结构平移指定的量得到的结果。</returns>
        </member>
        <member name="M:Com.PointD.OffsetCopy(System.Drawing.SizeF)">
            <summary>
            返回按 SizeF 结构表示的位移将此 PointD 结构平移指定的量的 PointD 结构的新实例。
            </summary>
            <param name="sz">SizeF 结构表示的位移。</param>
            <returns>PointD 结构，表示按 SizeF 结构表示的位移将此 PointD 结构平移指定的量得到的结果。</returns>
        </member>
        <member name="M:Com.PointD.Scale(System.Int32,System.Double)">
            <summary>
            按双精度浮点数表示的缩放因数将此 PointD 结构的指定的基向量方向的分量缩放指定的倍数。
            </summary>
            <param name="index">索引，用于指定缩放的分量所在方向的基向量。</param>
            <param name="s">双精度浮点数表示的缩放因数。</param>
        </member>
        <member name="M:Com.PointD.Scale(System.Double)">
            <summary>
            按双精度浮点数表示的缩放因数将此 PointD 结构的所有分量缩放指定的倍数。
            </summary>
            <param name="s">双精度浮点数表示的缩放因数。</param>
        </member>
        <member name="M:Com.PointD.Scale(Com.PointD)">
            <summary>
            按 PointD 结构表示的缩放因数将此 PointD 结构缩放指定的倍数。
            </summary>
            <param name="pt">PointD 结构表示的缩放因数。</param>
        </member>
        <member name="M:Com.PointD.Scale(System.Double,System.Double)">
            <summary>
            按双精度浮点数表示的 X 坐标缩放因数与 Y 坐标缩放因数将此 PointD 结构缩放指定的倍数。
            </summary>
            <param name="sx">双精度浮点数表示的 X 坐标缩放因数。</param>
            <param name="sy">双精度浮点数表示的 Y 坐标缩放因数。</param>
        </member>
        <member name="M:Com.PointD.ScaleX(System.Double)">
            <summary>
            按双精度浮点数表示的缩放因数将此 PointD 结构在 X 轴的分量缩放指定的倍数。
            </summary>
            <param name="s">双精度浮点数表示的缩放因数。</param>
        </member>
        <member name="M:Com.PointD.ScaleY(System.Double)">
            <summary>
            按双精度浮点数表示的缩放因数将此 PointD 结构在 Y 轴的分量缩放指定的倍数。
            </summary>
            <param name="s">双精度浮点数表示的缩放因数。</param>
        </member>
        <member name="M:Com.PointD.Scale(System.Drawing.Point)">
            <summary>
            按 Point 结构表示的缩放因数将此 PointD 结构缩放指定的倍数。
            </summary>
            <param name="pt">Point 结构表示的缩放因数。</param>
        </member>
        <member name="M:Com.PointD.Scale(System.Drawing.PointF)">
            <summary>
            按 PointF 结构表示的缩放因数将此 PointD 结构缩放指定的倍数。
            </summary>
            <param name="pt">PointF 结构表示的缩放因数。</param>
        </member>
        <member name="M:Com.PointD.Scale(System.Drawing.Size)">
            <summary>
            按 Size 结构表示的缩放因数将此 PointD 结构缩放指定的倍数。
            </summary>
            <param name="sz">Size 结构表示的缩放因数。</param>
        </member>
        <member name="M:Com.PointD.Scale(System.Drawing.SizeF)">
            <summary>
            按 SizeF 结构表示的缩放因数将此 PointD 结构缩放指定的倍数。
            </summary>
            <param name="sz">SizeF 结构表示的缩放因数。</param>
        </member>
        <member name="M:Com.PointD.ScaleCopy(System.Int32,System.Double)">
            <summary>
            返回按双精度浮点数表示的缩放因数将此 PointD 结构的指定的基向量方向的分量缩放指定的倍数的 PointD 结构的新实例。
            </summary>
            <param name="index">索引，用于指定缩放的分量所在方向的基向量。</param>
            <param name="s">双精度浮点数表示的缩放因数。</param>
            <returns>PointD 结构，表示按双精度浮点数表示的缩放因数将此 PointD 结构的指定的基向量方向的分量缩放指定的倍数得到的结果。</returns>
        </member>
        <member name="M:Com.PointD.ScaleCopy(System.Double)">
            <summary>
            返回按双精度浮点数表示的缩放因数将此 PointD 结构的所有分量缩放指定的倍数的 PointD 结构的新实例。
            </summary>
            <param name="s">双精度浮点数表示的缩放因数。</param>
            <returns>PointD 结构，表示按双精度浮点数表示的缩放因数将此 PointD 结构的所有分量缩放指定的倍数得到的结果。</returns>
        </member>
        <member name="M:Com.PointD.ScaleCopy(Com.PointD)">
            <summary>
            返回按 PointD 结构表示的缩放因数将此 PointD 结构缩放指定的倍数的 PointD 结构的新实例。
            </summary>
            <param name="pt">PointD 结构表示的缩放因数。</param>
            <returns>PointD 结构，表示按 PointD 结构表示的缩放因数将此 PointD 结构缩放指定的倍数得到的结果。</returns>
        </member>
        <member name="M:Com.PointD.ScaleCopy(System.Double,System.Double)">
            <summary>
            返回按双精度浮点数表示的 X 坐标缩放因数与 Y 坐标缩放因数将此 PointD 结构缩放指定的倍数的 PointD 结构的新实例。
            </summary>
            <param name="sx">双精度浮点数表示的 X 坐标缩放因数。</param>
            <param name="sy">双精度浮点数表示的 Y 坐标缩放因数。</param>
            <returns>PointD 结构，表示按双精度浮点数表示的 X 坐标缩放因数与 Y 坐标缩放因数将此 PointD 结构缩放指定的倍数得到的结果。</returns>
        </member>
        <member name="M:Com.PointD.ScaleXCopy(System.Double)">
            <summary>
            返回按双精度浮点数表示的缩放因数将此 PointD 结构在 X 轴的分量缩放指定的倍数的 PointD 结构的新实例。
            </summary>
            <param name="s">双精度浮点数表示的缩放因数。</param>
            <returns>PointD 结构，表示按双精度浮点数表示的缩放因数将此 PointD 结构在 X 轴的分量缩放指定的倍数得到的结果。</returns>
        </member>
        <member name="M:Com.PointD.ScaleYCopy(System.Double)">
            <summary>
            返回按双精度浮点数表示的缩放因数将此 PointD 结构在 Y 轴的分量缩放指定的倍数的 PointD 结构的新实例。
            </summary>
            <param name="s">双精度浮点数表示的缩放因数。</param>
            <returns>PointD 结构，表示按双精度浮点数表示的缩放因数将此 PointD 结构在 Y 轴的分量缩放指定的倍数得到的结果。</returns>
        </member>
        <member name="M:Com.PointD.ScaleCopy(System.Drawing.Point)">
            <summary>
            返回按 Point 结构表示的缩放因数将此 PointD 结构缩放指定的倍数的 PointD 结构的新实例。
            </summary>
            <param name="pt">Point 结构表示的缩放因数。</param>
            <returns>PointD 结构，表示按 Point 结构表示的缩放因数将此 PointD 结构缩放指定的倍数得到的结果。</returns>
        </member>
        <member name="M:Com.PointD.ScaleCopy(System.Drawing.PointF)">
            <summary>
            返回按 PointF 结构表示的缩放因数将此 PointD 结构缩放指定的倍数的 PointD 结构的新实例。
            </summary>
            <param name="pt">PointF 结构表示的缩放因数。</param>
            <returns>PointD 结构，表示按 PointF 结构表示的缩放因数将此 PointD 结构缩放指定的倍数得到的结果。</returns>
        </member>
        <member name="M:Com.PointD.ScaleCopy(System.Drawing.Size)">
            <summary>
            返回按 Size 结构表示的缩放因数将此 PointD 结构缩放指定的倍数的 PointD 结构的新实例。
            </summary>
            <param name="sz">Size 结构表示的缩放因数。</param>
            <returns>PointD 结构，表示按 Size 结构表示的缩放因数将此 PointD 结构缩放指定的倍数得到的结果。</returns>
        </member>
        <member name="M:Com.PointD.ScaleCopy(System.Drawing.SizeF)">
            <summary>
            返回按 SizeF 结构表示的缩放因数将此 PointD 结构缩放指定的倍数的 PointD 结构的新实例。
            </summary>
            <param name="sz">SizeF 结构表示的缩放因数。</param>
            <returns>PointD 结构，表示按 SizeF 结构表示的缩放因数将此 PointD 结构缩放指定的倍数得到的结果。</returns>
        </member>
        <member name="M:Com.PointD.Reflect(System.Int32)">
            <summary>
            将此 PointD 结构在指定的基向量方向的分量翻转。
            </summary>
            <param name="index">索引，用于指定翻转的分量所在方向的基向量。</param>
        </member>
        <member name="M:Com.PointD.ReflectX">
            <summary>
            将此 PointD 结构在 X 轴的分量翻转。
            </summary>
        </member>
        <member name="M:Com.PointD.ReflectY">
            <summary>
            将此 PointD 结构在 Y 轴的分量翻转。
            </summary>
        </member>
        <member name="M:Com.PointD.ReflectCopy(System.Int32)">
            <summary>
            返回将此 PointD 结构在指定的基向量方向的分量翻转的 PointD 结构的新实例。
            </summary>
            <param name="index">索引，用于指定翻转的分量所在方向的基向量。</param>
            <returns>PointD 结构，表示将此 PointD 结构在指定的基向量方向的分量翻转得到的结果。</returns>
        </member>
        <member name="M:Com.PointD.ReflectXCopy">
            <summary>
            返回将此 PointD 结构在 X 轴的分量翻转的 PointD 结构的新实例。
            </summary>
            <returns>PointD 结构，表示将此 PointD 结构在 X 轴的分量翻转得到的结果。</returns>
        </member>
        <member name="M:Com.PointD.ReflectYCopy">
            <summary>
            返回将此 PointD 结构在 Y 轴的分量翻转的 PointD 结构的新实例。
            </summary>
            <returns>PointD 结构，表示将此 PointD 结构在 Y 轴的分量翻转得到的结果。</returns>
        </member>
        <member name="M:Com.PointD.Shear(System.Int32,System.Int32,System.Double)">
            <summary>
            按双精度浮点数表示的弧度将此 PointD 结构错切指定的角度。
            </summary>
            <param name="index1">索引，用于指定与错切方向同向的基向量。</param>
            <param name="index2">索引，用于指定与错切方向共面正交的基向量。</param>
            <param name="angle">双精度浮点数，表示此 PointD 结构沿索引 index1 指定的基向量方向且共面正交于 index2 指定的基向量方向错切的角度（弧度）。</param>
        </member>
        <member name="M:Com.PointD.ShearX(System.Double)">
            <summary>
            按双精度浮点数表示的弧度将此 PointD 结构向 +X 轴错切指定的角度。
            </summary>
            <param name="angle">双精度浮点数，表示此 PointD 结构向 +X 轴错切的角度（弧度）。</param>
        </member>
        <member name="M:Com.PointD.ShearY(System.Double)">
            <summary>
            按双精度浮点数表示的弧度将此 PointD 结构向 +Y 轴错切指定的角度。
            </summary>
            <param name="angle">双精度浮点数，表示此 PointD 结构向 +Y 轴错切的角度（弧度）。</param>
        </member>
        <member name="M:Com.PointD.ShearCopy(System.Int32,System.Int32,System.Double)">
            <summary>
            返回按双精度浮点数表示的弧度将此 PointD 结构错切指定的角度的 PointD 结构的新实例。
            </summary>
            <param name="index1">索引，用于指定与错切方向同向的基向量。</param>
            <param name="index2">索引，用于指定与错切方向共面正交的基向量。</param>
            <param name="angle">双精度浮点数，表示此 PointD 结构沿索引 index1 指定的基向量方向且共面正交于 index2 指定的基向量方向错切的角度（弧度）。</param>
            <returns>PointD 结构，表示按双精度浮点数表示的弧度将此 PointD 结构错切指定的角度得到的结果。</returns>
        </member>
        <member name="M:Com.PointD.ShearXCopy(System.Double)">
            <summary>
            返回按双精度浮点数表示的弧度将此 PointD 结构向 +X 轴错切指定的角度的 PointD 结构的新实例。
            </summary>
            <param name="angle">双精度浮点数，表示此 PointD 结构向 +X 轴错切的角度（弧度）。</param>
            <returns>PointD 结构，表示按双精度浮点数表示的弧度将此 PointD 结构向 +X 轴错切指定的角度得到的结果。</returns>
        </member>
        <member name="M:Com.PointD.ShearYCopy(System.Double)">
            <summary>
            返回按双精度浮点数表示的弧度将此 PointD 结构向 +Y 轴错切指定的角度的 PointD 结构的新实例。
            </summary>
            <param name="angle">双精度浮点数，表示此 PointD 结构向 +Y 轴错切的角度（弧度）。</param>
            <returns>PointD 结构，表示按双精度浮点数表示的弧度将此 PointD 结构向 +Y 轴错切指定的角度得到的结果。</returns>
        </member>
        <member name="M:Com.PointD.Rotate(System.Int32,System.Int32,System.Double)">
            <summary>
            按双精度浮点数表示的弧度将此 PointD 结构旋转指定的角度。
            </summary>
            <param name="index1">索引，用于指定构成旋转轨迹所在平面的第一个基向量。</param>
            <param name="index2">索引，用于指定构成旋转轨迹所在平面的第二个基向量。</param>
            <param name="angle">双精度浮点数，表示此 PointD 结构绕索引 index1 与 index2 指定的基向量构成的平面的法向空间旋转的角度（弧度）（以索引 index1 指定的基向量为 0 弧度，从索引 index1 指定的基向量指向索引 index2 指定的基向量的方向为正方向）。</param>
        </member>
        <member name="M:Com.PointD.Rotate(System.Double)">
            <summary>
            按双精度浮点数表示的弧度将此 PointD 结构绕原点旋转指定的角度。
            </summary>
            <param name="angle">双精度浮点数，表示此 PointD 结构绕原点旋转的角度（弧度）（以 +X 轴为 0 弧度，从 +X 轴指向 +Y 轴的方向为正方向）。</param>
        </member>
        <member name="M:Com.PointD.Rotate(System.Double,Com.PointD)">
            <summary>
            按双精度浮点数表示的弧度将此 PointD 结构绕指定的 PointD 结构旋转指定的角度。
            </summary>
            <param name="angle">双精度浮点数，表示此 PointD 结构绕指定的 PointD 结构旋转的角度（弧度）（以 +X 轴为 0 弧度，从 +X 轴指向 +Y 轴的方向为正方向）。</param>
            <param name="pt">PointD 结构，表示旋转中心。</param>
        </member>
        <member name="M:Com.PointD.RotateCopy(System.Int32,System.Int32,System.Double)">
            <summary>
            返回按双精度浮点数表示的弧度将此 PointD 结构旋转指定的角度的 PointD 结构的新实例。
            </summary>
            <param name="index1">索引，用于指定构成旋转轨迹所在平面的第一个基向量。</param>
            <param name="index2">索引，用于指定构成旋转轨迹所在平面的第二个基向量。</param>
            <param name="angle">双精度浮点数，表示此 PointD 结构绕索引 index1 与 index2 指定的基向量构成的平面的法向空间旋转的角度（弧度）（以索引 index1 指定的基向量为 0 弧度，从索引 index1 指定的基向量指向索引 index2 指定的基向量的方向为正方向）。</param>
            <returns>PointD 结构，表示按双精度浮点数表示的弧度将此 PointD 结构旋转指定的角度得到的结果。</returns>
        </member>
        <member name="M:Com.PointD.RotateCopy(System.Double)">
            <summary>
            返回按双精度浮点数表示的弧度将此 PointD 结构绕原点旋转指定的角度的 PointD 结构的新实例。
            </summary>
            <param name="angle">双精度浮点数，表示此 PointD 结构绕原点旋转的角度（弧度）（以 +X 轴为 0 弧度，从 +X 轴指向 +Y 轴的方向为正方向）。</param>
            <returns>PointD 结构，表示按双精度浮点数表示的弧度将此 PointD 结构绕原点旋转指定的角度得到的结果。</returns>
        </member>
        <member name="M:Com.PointD.RotateCopy(System.Double,Com.PointD)">
            <summary>
            返回按双精度浮点数表示的弧度将此 PointD 结构绕指定的 PointD 结构旋转指定的角度的 PointD 结构的新实例。
            </summary>
            <param name="angle">双精度浮点数，表示此 PointD 结构绕指定的 PointD 结构旋转的角度（弧度）（以 +X 轴为 0 弧度，从 +X 轴指向 +Y 轴的方向为正方向）。</param>
            <param name="pt">PointD 结构，表示旋转中心。</param>
            <returns>PointD 结构，表示按双精度浮点数表示的弧度将此 PointD 结构绕指定的 PointD 结构旋转指定的角度得到的结果。</returns>
        </member>
        <member name="M:Com.PointD.MatrixTransform(Com.Matrix)">
            <summary>
            按 Matrix 对象表示的 3x3 仿射矩阵（左矩阵）将此 PointD 结构进行仿射变换。
            </summary>
            <param name="matrixLeft">Matrix 对象，表示 3x3 仿射矩阵（左矩阵）。</param>
        </member>
        <member name="M:Com.PointD.MatrixTransformCopy(Com.Matrix)">
            <summary>
            返回按 Matrix 对象表示的 3x3 仿射矩阵（左矩阵）将此 PointD 结构进行仿射变换的 PointD 结构的新实例。
            </summary>
            <param name="matrixLeft">Matrix 对象列表，表示 3x3 仿射矩阵（左矩阵）。</param>
            <returns>PointD 结构，表示按 Matrix 对象表示的 3x3 仿射矩阵（左矩阵）将此 PointD 结构进行仿射变换得到的结果。</returns>
        </member>
        <member name="M:Com.PointD.AffineTransform(Com.AffineTransformation)">
            <summary>
            按 AffineTransformation 对象将此 PointD 结构进行仿射变换。
            </summary>
            <param name="affineTransformation">AffineTransformation 对象。</param>
        </member>
        <member name="M:Com.PointD.AffineTransformCopy(Com.AffineTransformation)">
            <summary>
            返回按 AffineTransformation 对象将此 PointD 结构进行仿射变换得到的结果。
            </summary>
            <param name="affineTransformation">AffineTransformation 对象。</param>
            <returns>PointD 结构，表示按 AffineTransformation 对象将此 PointD 结构进行仿射变换得到的结果。</returns>
        </member>
        <member name="M:Com.PointD.AffineTransform(Com.PointD,Com.PointD,Com.PointD)">
            <summary>
            按 PointD 结构表示的 X 基向量、Y 基向量与偏移向量将此 PointD 结构进行仿射变换。
            </summary>
            <param name="ex">PointD 结构表示的 X 基向量。</param>
            <param name="ey">PointD 结构表示的 Y 基向量。</param>
            <param name="offset">PointD 结构表示的偏移向量。</param>
        </member>
        <member name="M:Com.PointD.AffineTransform(Com.Matrix)">
            <summary>
            按 Matrix 对象表示的 3x3 仿射矩阵（左矩阵）将此 PointD 结构进行仿射变换。
            </summary>
            <param name="matrixLeft">Matrix 对象，表示 3x3 仿射矩阵（左矩阵）。</param>
        </member>
        <member name="M:Com.PointD.AffineTransform(Com.Matrix[])">
            <summary>
            按 Matrix 对象数组表示的 3x3 仿射矩阵（左矩阵）数组将此 PointD 结构进行仿射变换。
            </summary>
            <param name="matricesLeft">Matrix 对象数组，表示 3x3 仿射矩阵（左矩阵）数组。</param>
        </member>
        <member name="M:Com.PointD.AffineTransform(System.Collections.Generic.List{Com.Matrix})">
            <summary>
            按 Matrix 对象列表表示的 3x3 仿射矩阵（左矩阵）列表将此 PointD 结构进行仿射变换。
            </summary>
            <param name="matricesLeft">Matrix 对象列表，表示 3x3 仿射矩阵（左矩阵）列表。</param>
        </member>
        <member name="M:Com.PointD.AffineTransformCopy(Com.PointD,Com.PointD,Com.PointD)">
            <summary>
            返回按 PointD 结构表示的 X 基向量、Y 基向量与偏移向量将此 PointD 结构进行仿射变换的 PointD 结构的新实例。
            </summary>
            <param name="ex">PointD 结构表示的 X 基向量。</param>
            <param name="ey">PointD 结构表示的 Y 基向量。</param>
            <param name="offset">PointD 结构表示的偏移向量。</param>
            <returns>PointD 结构，表示按 PointD 结构表示的 X 基向量、Y 基向量与偏移向量将此 PointD 结构进行仿射变换得到的结果。</returns>
        </member>
        <member name="M:Com.PointD.AffineTransformCopy(Com.Matrix)">
            <summary>
            返回按 Matrix 对象表示的 3x3 仿射矩阵（左矩阵）将此 PointD 结构进行仿射变换的 PointD 结构的新实例。
            </summary>
            <param name="matrixLeft">Matrix 对象列表，表示 3x3 仿射矩阵（左矩阵）。</param>
            <returns>PointD 结构，表示按 Matrix 对象表示的 3x3 仿射矩阵（左矩阵）将此 PointD 结构进行仿射变换得到的结果。</returns>
        </member>
        <member name="M:Com.PointD.AffineTransformCopy(Com.Matrix[])">
            <summary>
            返回按 Matrix 对象数组表示的 3x3 仿射矩阵（左矩阵）数组将此 PointD 结构进行仿射变换的 PointD 结构的新实例。
            </summary>
            <param name="matricesLeft">Matrix 对象数组，表示 3x3 仿射矩阵（左矩阵）数组。</param>
            <returns>PointD 结构，表示按 Matrix 对象数组表示的 3x3 仿射矩阵（左矩阵）数组将此 PointD 结构进行仿射变换得到的结果。</returns>
        </member>
        <member name="M:Com.PointD.AffineTransformCopy(System.Collections.Generic.List{Com.Matrix})">
            <summary>
            返回按 Matrix 对象列表表示的 3x3 仿射矩阵（左矩阵）列表将此 PointD 结构进行仿射变换的 PointD 结构的新实例。
            </summary>
            <param name="matricesLeft">Matrix 对象列表，表示 3x3 仿射矩阵（左矩阵）列表。</param>
            <returns>PointD 结构，表示按 Matrix 对象列表表示的 3x3 仿射矩阵（左矩阵）列表将此 PointD 结构进行仿射变换得到的结果。</returns>
        </member>
        <member name="M:Com.PointD.InverseAffineTransform(Com.PointD,Com.PointD,Com.PointD)">
            <summary>
            按 PointD 结构表示的 X 基向量、Y 基向量与偏移向量将此 PointD 结构进行逆仿射变换。
            </summary>
            <param name="ex">PointD 结构表示的 X 基向量。</param>
            <param name="ey">PointD 结构表示的 Y 基向量。</param>
            <param name="offset">PointD 结构表示的偏移向量。</param>
        </member>
        <member name="M:Com.PointD.InverseAffineTransform(Com.Matrix)">
            <summary>
            按 Matrix 对象表示的 3x3 仿射矩阵（左矩阵）将此 PointD 结构进行逆仿射变换。
            </summary>
            <param name="matrixLeft">Matrix 对象列表，表示 3x3 仿射矩阵（左矩阵）。</param>
        </member>
        <member name="M:Com.PointD.InverseAffineTransform(Com.Matrix[])">
            <summary>
            按 Matrix 对象数组表示的 3x3 仿射矩阵（左矩阵）数组将此 PointD 结构进行逆仿射变换。
            </summary>
            <param name="matricesLeft">Matrix 对象数组，表示 3x3 仿射矩阵（左矩阵）数组。</param>
        </member>
        <member name="M:Com.PointD.InverseAffineTransform(System.Collections.Generic.List{Com.Matrix})">
            <summary>
            按 Matrix 对象列表表示的 3x3 仿射矩阵（左矩阵）列表将此 PointD 结构进行逆仿射变换。
            </summary>
            <param name="matricesLeft">Matrix 对象列表，表示 3x3 仿射矩阵（左矩阵）列表。</param>
        </member>
        <member name="M:Com.PointD.InverseAffineTransformCopy(Com.PointD,Com.PointD,Com.PointD)">
            <summary>
            返回按 PointD 结构表示的 X 基向量、Y 基向量与偏移向量将此 PointD 结构进行逆仿射变换的 PointD 结构的新实例。
            </summary>
            <param name="ex">PointD 结构表示的 X 基向量。</param>
            <param name="ey">PointD 结构表示的 Y 基向量。</param>
            <param name="offset">PointD 结构表示的偏移向量。</param>
            <returns>PointD 结构，表示按 PointD 结构表示的 X 基向量、Y 基向量与偏移向量将此 PointD 结构进行逆仿射变换得到的结果。</returns>
        </member>
        <member name="M:Com.PointD.InverseAffineTransformCopy(Com.Matrix)">
            <summary>
            返回按 Matrix 对象表示的 3x3 仿射矩阵（左矩阵）将此 PointD 结构进行逆仿射变换的 PointD 结构的新实例。
            </summary>
            <param name="matrixLeft">Matrix 对象列表，表示 3x3 仿射矩阵（左矩阵）。</param>
            <returns>PointD 结构，表示按 Matrix 对象表示的 3x3 仿射矩阵（左矩阵）将此 PointD 结构进行逆仿射变换得到的结果。</returns>
        </member>
        <member name="M:Com.PointD.InverseAffineTransformCopy(Com.Matrix[])">
            <summary>
            返回按 Matrix 对象数组表示的 3x3 仿射矩阵（左矩阵）数组将此 PointD 结构进行逆仿射变换的 PointD 结构的新实例。
            </summary>
            <param name="matricesLeft">Matrix 对象数组，表示 3x3 仿射矩阵（左矩阵）数组。</param>
            <returns>PointD 结构，表示按 Matrix 对象数组表示的 3x3 仿射矩阵（左矩阵）数组将此 PointD 结构进行逆仿射变换得到的结果。</returns>
        </member>
        <member name="M:Com.PointD.InverseAffineTransformCopy(System.Collections.Generic.List{Com.Matrix})">
            <summary>
            返回按 Matrix 对象列表表示的 3x3 仿射矩阵（左矩阵）列表将此 PointD 结构进行逆仿射变换的 PointD 结构的新实例。
            </summary>
            <param name="matricesLeft">Matrix 对象列表，表示 3x3 仿射矩阵（左矩阵）列表。</param>
            <returns>PointD 结构，表示按 Matrix 对象列表表示的 3x3 仿射矩阵（左矩阵）列表将此 PointD 结构进行逆仿射变换得到的结果。</returns>
        </member>
        <member name="M:Com.PointD.ToColumnVector">
            <summary>
            返回将此 PointD 结构转换为列向量的 Vector 的新实例。
            </summary>
            <returns>Vector 对象，表示将此 PointD 结构转换为列向量得到的结果。</returns>
        </member>
        <member name="M:Com.PointD.ToRowVector">
            <summary>
            返回将此 PointD 结构转换为行向量的 Vector 的新实例。
            </summary>
            <returns>Vector 对象，表示将此 PointD 结构转换为行向量得到的结果。</returns>
        </member>
        <member name="M:Com.PointD.ToPoint">
            <summary>
            返回将此 PointD 结构转换为 Point 结构的新实例。
            </summary>
            <returns>Point 结构，表示转换的结果。</returns>
        </member>
        <member name="M:Com.PointD.ToPointF">
            <summary>
            返回将此 PointD 结构转换为 PointF 结构的新实例。
            </summary>
            <returns>PointF 结构，表示转换的结果。</returns>
        </member>
        <member name="M:Com.PointD.ToSize">
            <summary>
            返回将此 PointD 结构转换为 Size 结构的新实例。
            </summary>
            <returns>Size 结构，表示转换的结果。</returns>
        </member>
        <member name="M:Com.PointD.ToSizeF">
            <summary>
            返回将此 PointD 结构转换为 SizeF 结构的新实例。
            </summary>
            <returns>SizeF 结构，表示转换的结果。</returns>
        </member>
        <member name="M:Com.PointD.ToComplex">
            <summary>
            返回将此 PointD 结构转换为 Complex 结构的新实例。
            </summary>
            <returns>Complex 结构，表示转换的结果。</returns>
        </member>
        <member name="M:Com.PointD.Equals(Com.PointD,Com.PointD)">
            <summary>
            判断两个 PointD 结构是否相等。
            </summary>
            <param name="left">用于比较的第一个 PointD 结构。</param>
            <param name="right">用于比较的第二个 PointD 结构。</param>
            <returns>布尔值，表示两个 PointD 结构是否相等。</returns>
        </member>
        <member name="M:Com.PointD.Compare(Com.PointD,Com.PointD)">
            <summary>
            比较两个 PointD 结构的次序。
            </summary>
            <param name="left">用于比较的第一个 PointD 结构。</param>
            <param name="right">用于比较的第二个 PointD 结构。</param>
            <returns>32 位整数，表示将两个 PointD 结构进行次序比较得到的结果。</returns>
        </member>
        <member name="M:Com.PointD.FromVector(Com.Vector)">
            <summary>
            返回将 Vector 对象转换为 PointD 结构的新实例。
            </summary>
            <param name="vector">Vector 对象。</param>
            <returns>PointD 结构，表示转换的结果。</returns>
        </member>
        <member name="M:Com.PointD.FromPoint(System.Drawing.Point)">
            <summary>
            返回将 Point 结构转换为 PointD 结构的新实例。
            </summary>
            <param name="pt">Point 结构。</param>
            <returns>PointD 结构，表示转换的结果。</returns>
        </member>
        <member name="M:Com.PointD.FromPointF(System.Drawing.PointF)">
            <summary>
            返回将 PointF 结构转换为 PointD 结构的新实例。
            </summary>
            <param name="pt">PointF 结构。</param>
            <returns>PointD 结构，表示转换的结果。</returns>
        </member>
        <member name="M:Com.PointD.FromSize(System.Drawing.Size)">
            <summary>
            返回将 Size 结构转换为 PointD 结构的新实例。
            </summary>
            <param name="sz">Size 结构。</param>
            <returns>PointD 结构，表示转换的结果。</returns>
        </member>
        <member name="M:Com.PointD.FromSizeF(System.Drawing.SizeF)">
            <summary>
            返回将 SizeF 结构转换为 PointD 结构的新实例。
            </summary>
            <param name="sz">SizeF 结构。</param>
            <returns>PointD 结构，表示转换的结果。</returns>
        </member>
        <member name="M:Com.PointD.FromComplex(Com.Complex)">
            <summary>
            返回将 Complex 结构转换为 PointD 结构的新实例。
            </summary>
            <param name="comp">Complex 结构。</param>
            <returns>PointD 结构，表示转换的结果。</returns>
        </member>
        <member name="M:Com.PointD.IdentityMatrix">
            <summary>
            返回单位矩阵，表示不对 PointD 结构进行仿射变换的 3x3 仿射矩阵（左矩阵）的 Matrix 的新实例。
            </summary>
            <returns>Matrix 对象，表示不对 PointD 结构进行仿射变换的 3x3 仿射矩阵（左矩阵）。</returns>
        </member>
        <member name="M:Com.PointD.OffsetMatrix(System.Int32,System.Double)">
            <summary>
            返回表示按双精度浮点数表示的位移将 PointD 结构在指定的基向量方向的分量平移指定的量的 3x3 仿射矩阵（左矩阵）的 Matrix 的新实例。
            </summary>
            <param name="index">索引，用于指定平移的分量所在方向的基向量。</param>
            <param name="d">双精度浮点数表示的位移。</param>
            <returns>Matrix 对象，表示按双精度浮点数表示的位移将 PointD 结构在指定的基向量方向的分量平移指定的量的 3x3 仿射矩阵（左矩阵）。</returns>
        </member>
        <member name="M:Com.PointD.OffsetMatrix(System.Double)">
            <summary>
            返回表示按双精度浮点数表示的位移将 PointD 结构的所有分量平移指定的量的 3x3 仿射矩阵（左矩阵）的 Matrix 的新实例。
            </summary>
            <param name="d">双精度浮点数表示的位移。</param>
            <returns>Matrix 对象，表示按双精度浮点数表示的位移将 PointD 结构的所有分量平移指定的量的 3x3 仿射矩阵（左矩阵）。</returns>
        </member>
        <member name="M:Com.PointD.OffsetMatrix(Com.PointD)">
            <summary>
            返回表示按 PointD 结构表示的位移将 PointD 结构平移指定的量的 3x3 仿射矩阵（左矩阵）的 Matrix 的新实例。
            </summary>
            <param name="pt">PointD 结构表示的位移。</param>
            <returns>Matrix 对象，表示按 PointD 结构表示的位移将 PointD 结构平移指定的量的 3x3 仿射矩阵（左矩阵）。</returns>
        </member>
        <member name="M:Com.PointD.OffsetMatrix(System.Double,System.Double)">
            <summary>
            返回表示按双精度浮点数表示的 X 坐标位移与 Y 坐标位移将 PointD 结构平移指定的量的 3x3 仿射矩阵（左矩阵）的 Matrix 的新实例。
            </summary>
            <param name="dx">双精度浮点数表示的 X 坐标位移。</param>
            <param name="dy">双精度浮点数表示的 Y 坐标位移。</param>
            <returns>Matrix 对象，表示按双精度浮点数表示的 X 坐标位移与 Y 坐标位移将 PointD 结构平移指定的量的 3x3 仿射矩阵（左矩阵）。</returns>
        </member>
        <member name="M:Com.PointD.OffsetXMatrix(System.Double)">
            <summary>
            返回表示按双精度浮点数表示的位移将 PointD 结构在 X 轴的分量平移指定的量的 4x4 仿射矩阵（左矩阵）的 Matrix 的新实例。
            </summary>
            <param name="d">双精度浮点数表示的位移。</param>
            <returns>Matrix 对象，表示按双精度浮点数表示的位移将 PointD 结构在 X 轴的分量平移指定的量的 4x4 仿射矩阵（左矩阵）。</returns>
        </member>
        <member name="M:Com.PointD.OffsetYMatrix(System.Double)">
            <summary>
            返回表示按双精度浮点数表示的位移将 PointD 结构在 Y 轴的分量平移指定的量的 4x4 仿射矩阵（左矩阵）的 Matrix 的新实例。
            </summary>
            <param name="d">双精度浮点数表示的位移。</param>
            <returns>Matrix 对象，表示按双精度浮点数表示的位移将 PointD 结构在 Y 轴的分量平移指定的量的 4x4 仿射矩阵（左矩阵）。</returns>
        </member>
        <member name="M:Com.PointD.OffsetMatrix(System.Drawing.Point)">
            <summary>
            返回表示按 Point 结构表示的位移将 PointD 结构平移指定的量的 3x3 仿射矩阵（左矩阵）的 Matrix 的新实例。
            </summary>
            <param name="pt">Point 结构表示的位移。</param>
            <returns>Matrix 对象，表示按 Point 结构表示的位移将 PointD 结构平移指定的量的 3x3 仿射矩阵（左矩阵）。</returns>
        </member>
        <member name="M:Com.PointD.OffsetMatrix(System.Drawing.PointF)">
            <summary>
            返回表示按 PointF 结构表示的位移将 PointD 结构平移指定的量的 3x3 仿射矩阵（左矩阵）的 Matrix 的新实例。
            </summary>
            <param name="pt">PointF 结构表示的位移。</param>
            <returns>Matrix 对象，表示按 PointF 结构表示的位移将 PointD 结构平移指定的量的 3x3 仿射矩阵（左矩阵）。</returns>
        </member>
        <member name="M:Com.PointD.OffsetMatrix(System.Drawing.Size)">
            <summary>
            返回表示按 Size 结构表示的位移将 PointD 结构平移指定的量的 3x3 仿射矩阵（左矩阵）的 Matrix 的新实例。
            </summary>
            <param name="sz">Size 结构表示的位移。</param>
            <returns>Matrix 对象，表示按 Size 结构表示的位移将 PointD 结构平移指定的量的 3x3 仿射矩阵（左矩阵）。</returns>
        </member>
        <member name="M:Com.PointD.OffsetMatrix(System.Drawing.SizeF)">
            <summary>
            返回表示按 SizeF 结构表示的位移将 PointD 结构平移指定的量的 3x3 仿射矩阵（左矩阵）的 Matrix 的新实例。
            </summary>
            <param name="sz">SizeF 结构表示的位移。</param>
            <returns>Matrix 对象，表示按 SizeF 结构表示的位移将 PointD 结构平移指定的量的 3x3 仿射矩阵（左矩阵）。</returns>
        </member>
        <member name="M:Com.PointD.ScaleMatrix(System.Int32,System.Double)">
            <summary>
            返回表示按双精度浮点数表示的缩放因数将 PointD 结构在指定的基向量方向的分量缩放指定的倍数的 3x3 仿射矩阵（左矩阵）的 Matrix 的新实例。
            </summary>
            <param name="index">索引，用于指定平移的分量所在方向的基向量。</param>
            <param name="s">双精度浮点数表示的缩放因数。</param>
            <returns>Matrix 对象，表示按双精度浮点数表示的缩放因数将 PointD 结构在指定的基向量方向的分量缩放指定的倍数的 3x3 仿射矩阵（左矩阵）。</returns>
        </member>
        <member name="M:Com.PointD.ScaleMatrix(System.Double)">
            <summary>
            返回表示按双精度浮点数表示的缩放因数将 PointD 结构的所有分量缩放指定的倍数的 3x3 仿射矩阵（左矩阵）的 Matrix 的新实例。
            </summary>
            <param name="s">双精度浮点数表示的缩放因数。</param>
            <returns>Matrix 对象，表示按双精度浮点数表示的缩放因数将 PointD 结构的所有分量缩放指定的倍数的 3x3 仿射矩阵（左矩阵）。</returns>
        </member>
        <member name="M:Com.PointD.ScaleMatrix(Com.PointD)">
            <summary>
            返回表示按 PointD 结构表示的缩放因数将 PointD 结构缩放指定的倍数的 3x3 仿射矩阵（左矩阵）的 Matrix 的新实例。
            </summary>
            <param name="pt">PointD 结构表示的缩放因数。</param>
            <returns>Matrix 对象，表示按 PointD 结构表示的缩放因数将 PointD 结构缩放指定的倍数的 3x3 仿射矩阵（左矩阵）。</returns>
        </member>
        <member name="M:Com.PointD.ScaleMatrix(System.Double,System.Double)">
            <summary>
            返回表示按双精度浮点数表示的 X 坐标缩放因数与 Y 坐标缩放因数将 PointD 结构缩放指定的倍数的 3x3 仿射矩阵（左矩阵）的 Matrix 的新实例。
            </summary>
            <param name="sx">双精度浮点数表示的 X 坐标缩放因数。</param>
            <param name="sy">双精度浮点数表示的 Y 坐标缩放因数。</param>
            <returns>Matrix 对象，表示按双精度浮点数表示的 X 坐标缩放因数与 Y 坐标缩放因数将 PointD 结构缩放指定的倍数的 3x3 仿射矩阵（左矩阵）。</returns>
        </member>
        <member name="M:Com.PointD.ScaleXMatrix(System.Double)">
            <summary>
            返回表示按双精度浮点数表示的缩放因数将 PointD 结构在 X 轴的分量缩放指定的倍数的 4x4 仿射矩阵（左矩阵）的 Matrix 的新实例。
            </summary>
            <param name="s">双精度浮点数表示的缩放因数。</param>
            <returns>Matrix 对象，表示按双精度浮点数表示的缩放因数将 PointD 结构在 X 轴的分量缩放指定的倍数的 4x4 仿射矩阵（左矩阵）。</returns>
        </member>
        <member name="M:Com.PointD.ScaleYMatrix(System.Double)">
            <summary>
            返回表示按双精度浮点数表示的缩放因数将 PointD 结构在 Y 轴的分量缩放指定的倍数的 4x4 仿射矩阵（左矩阵）的 Matrix 的新实例。
            </summary>
            <param name="s">双精度浮点数表示的缩放因数。</param>
            <returns>Matrix 对象，表示按双精度浮点数表示的缩放因数将 PointD 结构在 Y 轴的分量缩放指定的倍数的 4x4 仿射矩阵（左矩阵）。</returns>
        </member>
        <member name="M:Com.PointD.ScaleMatrix(System.Drawing.Point)">
            <summary>
            返回表示按 Point 结构表示的缩放因数将 PointD 结构缩放指定的倍数的 3x3 仿射矩阵（左矩阵）的 Matrix 的新实例。
            </summary>
            <param name="pt">Point 结构表示的缩放因数。</param>
            <returns>Matrix 对象，表示按 Point 结构表示的缩放因数将 PointD 结构缩放指定的倍数的 3x3 仿射矩阵（左矩阵）。</returns>
        </member>
        <member name="M:Com.PointD.ScaleMatrix(System.Drawing.PointF)">
            <summary>
            返回表示按 PointF 结构表示的缩放因数将 PointD 结构缩放指定的倍数的 3x3 仿射矩阵（左矩阵）的 Matrix 的新实例。
            </summary>
            <param name="pt">PointF 结构表示的缩放因数。</param>
            <returns>Matrix 对象，表示按 PointF 结构表示的缩放因数将 PointD 结构缩放指定的倍数的 3x3 仿射矩阵（左矩阵）。</returns>
        </member>
        <member name="M:Com.PointD.ScaleMatrix(System.Drawing.Size)">
            <summary>
            返回表示按 Size 结构表示的缩放因数将 PointD 结构缩放指定的倍数的 3x3 仿射矩阵（左矩阵）的 Matrix 的新实例。
            </summary>
            <param name="sz">Size 结构表示的缩放因数。</param>
            <returns>Matrix 对象，表示按 Size 结构表示的缩放因数将 PointD 结构缩放指定的倍数的 3x3 仿射矩阵（左矩阵）。</returns>
        </member>
        <member name="M:Com.PointD.ScaleMatrix(System.Drawing.SizeF)">
            <summary>
            返回表示按 SizeF 结构表示的缩放因数将 PointD 结构缩放指定的倍数的 3x3 仿射矩阵（左矩阵）的 Matrix 的新实例。
            </summary>
            <param name="sz">SizeF 结构表示的缩放因数。</param>
            <returns>Matrix 对象，表示按 SizeF 结构表示的缩放因数将 PointD 结构缩放指定的倍数的 3x3 仿射矩阵（左矩阵）。</returns>
        </member>
        <member name="M:Com.PointD.ReflectMatrix(System.Int32)">
            <summary>
            返回表示将 PointD 结构在指定的基向量方向的分量翻转的 3x3 仿射矩阵（左矩阵）的 Matrix 的新实例。
            </summary>
            <param name="index">索引，用于指定翻转的分量所在方向的基向量。</param>
            <returns>Matrix 对象，表示将 PointD 结构在指定的基向量方向的分量翻转的 3x3 仿射矩阵（左矩阵）。</returns>
        </member>
        <member name="M:Com.PointD.ReflectXMatrix">
            <summary>
            返回表示将 PointD 结构在 X 轴的分量翻转的 3x3 仿射矩阵（左矩阵）的 Matrix 的新实例。
            </summary>
            <returns>Matrix 对象，表示将 PointD 结构在 X 轴的分量翻转的 3x3 仿射矩阵（左矩阵）。</returns>
        </member>
        <member name="M:Com.PointD.ReflectYMatrix">
            <summary>
            返回表示将 PointD 结构在 Y 轴的分量翻转的 3x3 仿射矩阵（左矩阵）的 Matrix 的新实例。
            </summary>
            <returns>Matrix 对象，表示将 PointD 结构在 Y 轴的分量翻转的 3x3 仿射矩阵（左矩阵）。</returns>
        </member>
        <member name="M:Com.PointD.ShearMatrix(System.Int32,System.Int32,System.Double)">
            <summary>
            返回表示用于错切 PointD 结构的 3x3 仿射矩阵（左矩阵）的 Matrix 的新实例。
            </summary>
            <param name="index1">索引，用于指定与错切方向同向的基向量。</param>
            <param name="index2">索引，用于指定与错切方向共面正交的基向量。</param>
            <param name="angle">双精度浮点数，表示此 PointD 结构沿索引 index1 指定的基向量方向且共面正交于 index2 指定的基向量方向错切的角度（弧度）。</param>
            <returns>Matrix 对象，表示用于错切 PointD 结构的 3x3 仿射矩阵（左矩阵）。</returns>
        </member>
        <member name="M:Com.PointD.ShearXMatrix(System.Double)">
            <summary>
            返回表示按双精度浮点数表示的弧度将 PointD 结构向 +X 轴错切指定的角度的 3x3 仿射矩阵（左矩阵）的 Matrix 的新实例。
            </summary>
            <param name="angle">双精度浮点数，表示此 PointD 结构向 +X 轴错切的角度（弧度）。</param>
            <returns>Matrix 对象，表示按双精度浮点数表示的弧度将 PointD 结构向 +X 轴错切指定的角度的 3x3 仿射矩阵（左矩阵）。</returns>
        </member>
        <member name="M:Com.PointD.ShearYMatrix(System.Double)">
            <summary>
            返回表示按双精度浮点数表示的弧度将 PointD 结构向 +Y 轴错切指定的角度的 3x3 仿射矩阵（左矩阵）的 Matrix 的新实例。
            </summary>
            <param name="angle">双精度浮点数，表示此 PointD 结构向 +Y 轴错切的角度（弧度）。</param>
            <returns>Matrix 对象，表示按双精度浮点数表示的弧度将 PointD 结构向 +Y 轴错切指定的角度的 3x3 仿射矩阵（左矩阵）。</returns>
        </member>
        <member name="M:Com.PointD.RotateMatrix(System.Int32,System.Int32,System.Double)">
            <summary>
            返回表示用于旋转 PointD 结构的 3x3 仿射矩阵（左矩阵）的 Matrix 的新实例。
            </summary>
            <param name="index1">索引，用于指定构成旋转轨迹所在平面的第一个基向量。</param>
            <param name="index2">索引，用于指定构成旋转轨迹所在平面的第二个基向量。</param>
            <param name="angle">双精度浮点数，表示 PointD 结构绕索引 index1 与 index2 指定的基向量构成的平面的法向空间旋转的角度（弧度）（以索引 index1 指定的基向量为 0 弧度，从索引 index1 指定的基向量指向索引 index2 指定的基向量的方向为正方向）。</param>
            <returns>Matrix 对象，表示用于旋转 PointD 结构的 3x3 仿射矩阵（左矩阵）。</returns>
        </member>
        <member name="M:Com.PointD.RotateMatrix(System.Double)">
            <summary>
            返回表示按双精度浮点数表示的弧度将 PointD 结构绕原点旋转指定的角度的 3x3 仿射矩阵（左矩阵）的 Matrix 的新实例。
            </summary>
            <param name="angle">双精度浮点数，表示 PointD 结构绕原点旋转的角度（弧度）（以 +X 轴为 0 弧度，从 +X 轴指向 +Y 轴的方向为正方向）。</param>
            <returns>Matrix 对象，表示按双精度浮点数表示的弧度将 PointD 结构绕原点旋转指定的角度的 3x3 仿射矩阵（左矩阵）。</returns>
        </member>
        <member name="M:Com.PointD.RotateMatrix(System.Double,Com.PointD)">
            <summary>
            返回表示按双精度浮点数表示的弧度将 PointD 结构绕指定的 PointD 结构旋转指定的角度的 3x3 仿射矩阵（左矩阵）的 Matrix 的新实例。
            </summary>
            <param name="angle">双精度浮点数，表示 PointD 结构绕指定的 PointD 结构旋转的角度（弧度）（以 +X 轴为 0 弧度，从 +X 轴指向 +Y 轴的方向为正方向）。</param>
            <param name="pt">PointD 结构，表示旋转中心。</param>
            <returns>Matrix 对象，表示按双精度浮点数表示的弧度将 PointD 结构绕指定的 PointD 结构旋转指定的角度的 3x3 仿射矩阵（左矩阵）。</returns>
        </member>
        <member name="M:Com.PointD.DistanceBetween(Com.PointD,Com.PointD)">
            <summary>
            返回两个 PointD 结构之间的距离。
            </summary>
            <param name="left">第一个 PointD 结构。</param>
            <param name="right">第二个 PointD 结构。</param>
            <returns>双精度浮点数，表示两个 PointD 结构之间的距离。</returns>
        </member>
        <member name="M:Com.PointD.AngleBetween(Com.PointD,Com.PointD)">
            <summary>
            返回两个 PointD 结构之间的夹角（弧度）。
            </summary>
            <param name="left">第一个 PointD 结构。</param>
            <param name="right">第二个 PointD 结构。</param>
            <returns>双精度浮点数，表示两个 PointD 结构之间的夹角（弧度）。</returns>
        </member>
        <member name="M:Com.PointD.DotProduct(Com.PointD,Com.PointD)">
            <summary>
            返回两个 PointD 结构的内积。
            </summary>
            <param name="left">第一个 PointD 结构。</param>
            <param name="right">第二个 PointD 结构。</param>
            <returns>双精度浮点数，表示两个 PointD 结构的内积。</returns>
        </member>
        <member name="M:Com.PointD.CrossProduct(Com.PointD,Com.PointD)">
            <summary>
            返回两个 PointD 结构的外积。
            </summary>
            <param name="left">第一个 PointD 结构。</param>
            <param name="right">第二个 PointD 结构。</param>
            <returns>双精度浮点数，表示两个 PointD 结构的外积。</returns>
        </member>
        <member name="M:Com.PointD.Sign(Com.PointD)">
            <summary>
            返回将 PointD 结构的所有分量取符号数得到的 PointD 结构的新实例。
            </summary>
            <param name="pt">PointD 结构，用于转换的结构。</param>
            <returns>PointD 结构，表示将 PointD 结构的所有分量取符号数得到的结果</returns>
        </member>
        <member name="M:Com.PointD.Abs(Com.PointD)">
            <summary>
            返回将 PointD 结构的所有分量取绝对值得到的 PointD 结构的新实例。
            </summary>
            <param name="pt">PointD 结构，用于转换的结构。</param>
            <returns>PointD 结构，表示将 PointD 结构的所有分量取绝对值得到的结果</returns>
        </member>
        <member name="M:Com.PointD.Ceiling(Com.PointD)">
            <summary>
            返回将 PointD 结构的所有分量舍入到较大的整数值得到的 PointD 结构的新实例。
            </summary>
            <param name="pt">PointD 结构，用于转换的结构。</param>
            <returns>PointD 结构，表示将 PointD 结构的所有分量舍入到较大的整数值得到的结果</returns>
        </member>
        <member name="M:Com.PointD.Floor(Com.PointD)">
            <summary>
            返回将 PointD 结构的所有分量舍入到较小的整数值得到的 PointD 结构的新实例。
            </summary>
            <param name="pt">PointD 结构，用于转换的结构。</param>
            <returns>PointD 结构，表示将 PointD 结构的所有分量舍入到较小的整数值得到的结果</returns>
        </member>
        <member name="M:Com.PointD.Round(Com.PointD)">
            <summary>
            返回将 PointD 结构的所有分量舍入到最接近的整数值得到的 PointD 结构的新实例。
            </summary>
            <param name="pt">PointD 结构，用于转换的结构。</param>
            <returns>PointD 结构，表示将 PointD 结构的所有分量舍入到最接近的整数值得到的结果</returns>
        </member>
        <member name="M:Com.PointD.Truncate(Com.PointD)">
            <summary>
            返回将 PointD 结构的所有分量截断小数部分取整得到的 PointD 结构的新实例。
            </summary>
            <param name="pt">PointD 结构，用于转换的结构。</param>
            <returns>PointD 结构，表示将 PointD 结构的所有分量截断小数部分取整得到的结果</returns>
        </member>
        <member name="M:Com.PointD.Max(Com.PointD,Com.PointD)">
            <summary>
            返回将两个 PointD 结构的所有分量分别取最大值得到的 PointD 结构的新实例。
            </summary>
            <param name="left">PointD 结构，用于比较的第一个结构。</param>
            <param name="right">PointD 结构，用于比较的第二个结构。</param>
            <returns>PointD 结构，表示将两个 PointD 结构的所有分量分别取最大值得到的结果</returns>
        </member>
        <member name="M:Com.PointD.Min(Com.PointD,Com.PointD)">
            <summary>
            返回将两个 PointD 结构的所有分量分别取最小值得到的 PointD 结构的新实例。
            </summary>
            <param name="left">PointD 结构，用于比较的第一个结构。</param>
            <param name="right">PointD 结构，用于比较的第二个结构。</param>
            <returns>PointD 结构，表示将两个 PointD 结构的所有分量分别取最小值得到的结果</returns>
        </member>
        <member name="M:Com.PointD.op_Equality(Com.PointD,Com.PointD)">
            <summary>
            判断两个 PointD 结构是否相等。
            </summary>
            <param name="left">运算符左侧比较的 PointD 结构。</param>
            <param name="right">运算符右侧比较的 PointD 结构。</param>
            <returns>布尔值，表示两个 PointD 结构是否相等。</returns>
        </member>
        <member name="M:Com.PointD.op_Inequality(Com.PointD,Com.PointD)">
            <summary>
            判断两个 PointD 结构是否不相等。
            </summary>
            <param name="left">运算符左侧比较的 PointD 结构。</param>
            <param name="right">运算符右侧比较的 PointD 结构。</param>
            <returns>布尔值，表示两个 PointD 结构是否不相等。</returns>
        </member>
        <member name="M:Com.PointD.op_LessThan(Com.PointD,Com.PointD)">
            <summary>
            判断两个 PointD 结构的字典序是否前者小于后者。
            </summary>
            <param name="left">运算符左侧比较的 PointD 结构。</param>
            <param name="right">运算符右侧比较的 PointD 结构。</param>
            <returns>布尔值，表示两个 PointD 结构的字典序是否前者小于后者。</returns>
        </member>
        <member name="M:Com.PointD.op_GreaterThan(Com.PointD,Com.PointD)">
            <summary>
            判断两个 PointD 结构的字典序是否前者大于后者。
            </summary>
            <param name="left">运算符左侧比较的 PointD 结构。</param>
            <param name="right">运算符右侧比较的 PointD 结构。</param>
            <returns>布尔值，表示两个 PointD 结构的字典序是否前者大于后者。</returns>
        </member>
        <member name="M:Com.PointD.op_LessThanOrEqual(Com.PointD,Com.PointD)">
            <summary>
            判断两个 PointD 结构的字典序是否前者小于或等于后者。
            </summary>
            <param name="left">运算符左侧比较的 PointD 结构。</param>
            <param name="right">运算符右侧比较的 PointD 结构。</param>
            <returns>布尔值，表示两个 PointD 结构的字典序是否前者小于或等于后者。</returns>
        </member>
        <member name="M:Com.PointD.op_GreaterThanOrEqual(Com.PointD,Com.PointD)">
            <summary>
            判断两个 PointD 结构的字典序是否前者大于或等于后者。
            </summary>
            <param name="left">运算符左侧比较的 PointD 结构。</param>
            <param name="right">运算符右侧比较的 PointD 结构。</param>
            <returns>布尔值，表示两个 PointD 结构的字典序是否前者大于或等于后者。</returns>
        </member>
        <member name="M:Com.PointD.op_UnaryPlus(Com.PointD)">
            <summary>
            返回在 PointD 结构的所有分量前添加正号得到的 PointD 结构的新实例。
            </summary>
            <param name="pt">运算符右侧的 PointD 结构。</param>
            <returns>PointD 结构，表示在 PointD 结构的所有分量前添加正号得到的结果。</returns>
        </member>
        <member name="M:Com.PointD.op_UnaryNegation(Com.PointD)">
            <summary>
            返回在 PointD 结构的所有分量前添加负号得到的 PointD 结构的新实例。
            </summary>
            <param name="pt">运算符右侧的 PointD 结构。</param>
            <returns>PointD 结构，表示在 PointD 结构的所有分量前添加负号得到的结果。</returns>
        </member>
        <member name="M:Com.PointD.op_Addition(Com.PointD,System.Double)">
            <summary>
            返回将 PointD 结构的所有分量与双精度浮点数相加得到的 PointD 结构的新实例。
            </summary>
            <param name="pt">PointD 结构，表示被加数。</param>
            <param name="n">双精度浮点数，表示加数。</param>
            <returns>PointD 结构，表示将 PointD 结构的所有分量与双精度浮点数相加得到的结果。</returns>
        </member>
        <member name="M:Com.PointD.op_Addition(System.Double,Com.PointD)">
            <summary>
            返回将双精度浮点数与 PointD 结构的所有分量相加得到的 PointD 结构的新实例。
            </summary>
            <param name="n">双精度浮点数，表示被加数。</param>
            <param name="pt">PointD 结构，表示加数。</param>
            <returns>PointD 结构，表示将双精度浮点数与 PointD 结构的所有分量相加得到的结果。</returns>
        </member>
        <member name="M:Com.PointD.op_Addition(Com.PointD,Com.PointD)">
            <summary>
            返回将 PointD 结构与 PointD 结构的所有分量对应相加得到的 PointD 结构的新实例。
            </summary>
            <param name="left">PointD 结构，表示被加数。</param>
            <param name="right">PointD 结构，表示加数。</param>
            <returns>PointD 结构，表示将 PointD 结构与 PointD 结构的所有分量对应相加得到的结果。</returns>
        </member>
        <member name="M:Com.PointD.op_Addition(Com.PointD,System.Drawing.Point)">
            <summary>
            返回将 PointD 结构与 Point 结构的所有分量对应相加得到的 PointD 结构的新实例。
            </summary>
            <param name="left">PointD 结构，表示被加数。</param>
            <param name="right">Point 结构，表示加数。</param>
            <returns>PointD 结构，表示将 PointD 结构与 Point 结构的所有分量对应相加得到的结果。</returns>
        </member>
        <member name="M:Com.PointD.op_Addition(System.Drawing.Point,Com.PointD)">
            <summary>
            返回将 Point 结构与 PointD 结构的所有分量对应相加得到的 PointD 结构的新实例。
            </summary>
            <param name="left">Point 结构，表示被加数。</param>
            <param name="right">PointD 结构，表示加数。</param>
            <returns>PointD 结构，表示将 Point 结构与 PointD 结构的所有分量对应相加得到的结果。</returns>
        </member>
        <member name="M:Com.PointD.op_Addition(Com.PointD,System.Drawing.PointF)">
            <summary>
            返回将 PointD 结构与 PointF 结构的所有分量对应相加得到的 PointD 结构的新实例。
            </summary>
            <param name="left">PointD 结构，表示被加数。</param>
            <param name="right">PointF 结构，表示加数。</param>
            <returns>PointD 结构，表示将 PointD 结构与 PointF 结构的所有分量对应相加得到的结果。</returns>
        </member>
        <member name="M:Com.PointD.op_Addition(System.Drawing.PointF,Com.PointD)">
            <summary>
            返回将 PointF 结构与 PointD 结构的所有分量对应相加得到的 PointD 结构的新实例。
            </summary>
            <param name="left">PointF 结构，表示被加数。</param>
            <param name="right">PointD 结构，表示加数。</param>
            <returns>PointD 结构，表示将 PointF 结构与 PointD 结构的所有分量对应相加得到的结果。</returns>
        </member>
        <member name="M:Com.PointD.op_Addition(Com.PointD,System.Drawing.Size)">
            <summary>
            返回将 PointD 结构与 Size 结构的所有分量对应相加得到的 PointD 结构的新实例。
            </summary>
            <param name="pt">PointD 结构，表示被加数。</param>
            <param name="sz">Size 结构，表示加数。</param>
            <returns>PointD 结构，表示将 PointD 结构与 Size 结构的所有分量对应相加得到的结果。</returns>
        </member>
        <member name="M:Com.PointD.op_Addition(System.Drawing.Size,Com.PointD)">
            <summary>
            返回将 Size 结构与 PointD 结构的所有分量对应相加得到的 PointD 结构的新实例。
            </summary>
            <param name="sz">Size 结构，表示被加数。</param>
            <param name="pt">PointD 结构，表示加数。</param>
            <returns>PointD 结构，表示将 Size 结构与 PointD 结构的所有分量对应相加得到的结果。</returns>
        </member>
        <member name="M:Com.PointD.op_Addition(Com.PointD,System.Drawing.SizeF)">
            <summary>
            返回将 PointD 结构与 SizeF 结构的所有分量对应相加得到的 PointD 结构的新实例。
            </summary>
            <param name="pt">PointD 结构，表示被加数。</param>
            <param name="sz">SizeF 结构，表示加数。</param>
            <returns>PointD 结构，表示将 PointD 结构与 SizeF 结构的所有分量对应相加得到的结果。</returns>
        </member>
        <member name="M:Com.PointD.op_Addition(System.Drawing.SizeF,Com.PointD)">
            <summary>
            返回将 SizeF 结构与 PointD 结构的所有分量对应相加得到的 PointD 结构的新实例。
            </summary>
            <param name="sz">SizeF 结构，表示被加数。</param>
            <param name="pt">PointD 结构，表示加数。</param>
            <returns>PointD 结构，表示将 SizeF 结构与 PointD 结构的所有分量对应相加得到的结果。</returns>
        </member>
        <member name="M:Com.PointD.op_Subtraction(Com.PointD,System.Double)">
            <summary>
            返回将 PointD 结构的所有分量与双精度浮点数相减得到的 PointD 结构的新实例。
            </summary>
            <param name="pt">PointD 结构，表示被减数。</param>
            <param name="n">双精度浮点数，表示减数。</param>
            <returns>PointD 结构，表示将 PointD 结构的所有分量与双精度浮点数相减得到的结果。</returns>
        </member>
        <member name="M:Com.PointD.op_Subtraction(System.Double,Com.PointD)">
            <summary>
            返回将双精度浮点数与 PointD 结构的所有分量相减得到的 PointD 结构的新实例。
            </summary>
            <param name="n">双精度浮点数，表示被减数。</param>
            <param name="pt">PointD 结构，表示减数。</param>
            <returns>PointD 结构，表示将双精度浮点数与 PointD 结构的所有分量相减得到的结果。</returns>
        </member>
        <member name="M:Com.PointD.op_Subtraction(Com.PointD,Com.PointD)">
            <summary>
            返回将 PointD 结构与 PointD 结构的所有分量对应相减得到的 PointD 结构的新实例。
            </summary>
            <param name="left">PointD 结构，表示被减数。</param>
            <param name="right">PointD 结构，表示减数。</param>
            <returns>PointD 结构，表示将 PointD 结构与 PointD 结构的所有分量对应相减得到的结果。</returns>
        </member>
        <member name="M:Com.PointD.op_Subtraction(Com.PointD,System.Drawing.Point)">
            <summary>
            返回将 PointD 结构与 Point 结构的所有分量对应相减得到的 PointD 结构的新实例。
            </summary>
            <param name="left">PointD 结构，表示被减数。</param>
            <param name="right">Point 结构，表示减数。</param>
            <returns>PointD 结构，表示将 PointD 结构与 Point 结构的所有分量对应相减得到的结果。</returns>
        </member>
        <member name="M:Com.PointD.op_Subtraction(System.Drawing.Point,Com.PointD)">
            <summary>
            返回将 Point 结构与 PointD 结构的所有分量对应相减得到的 PointD 结构的新实例。
            </summary>
            <param name="left">Point 结构，表示被减数。</param>
            <param name="right">PointD 结构，表示减数。</param>
            <returns>PointD 结构，表示将 Point 结构与 PointD 结构的所有分量对应相减得到的结果。</returns>
        </member>
        <member name="M:Com.PointD.op_Subtraction(Com.PointD,System.Drawing.PointF)">
            <summary>
            返回将 PointD 结构与 PointF 结构的所有分量对应相减得到的 PointD 结构的新实例。
            </summary>
            <param name="left">PointD 结构，表示被减数。</param>
            <param name="right">PointF 结构，表示减数。</param>
            <returns>PointD 结构，表示将 PointD 结构与 PointF 结构的所有分量对应相减得到的结果。</returns>
        </member>
        <member name="M:Com.PointD.op_Subtraction(System.Drawing.PointF,Com.PointD)">
            <summary>
            返回将 PointF 结构与 PointD 结构的所有分量对应相减得到的 PointD 结构的新实例。
            </summary>
            <param name="left">PointF 结构，表示被减数。</param>
            <param name="right">PointD 结构，表示减数。</param>
            <returns>PointD 结构，表示将 PointF 结构与 PointD 结构的所有分量对应相减得到的结果。</returns>
        </member>
        <member name="M:Com.PointD.op_Subtraction(Com.PointD,System.Drawing.Size)">
            <summary>
            返回将 PointD 结构与 Size 结构的所有分量对应相减得到的 PointD 结构的新实例。
            </summary>
            <param name="pt">PointD 结构，表示被减数。</param>
            <param name="sz">Size 结构，表示减数。</param>
            <returns>PointD 结构，表示将 PointD 结构与 Size 结构的所有分量对应相减得到的结果。</returns>
        </member>
        <member name="M:Com.PointD.op_Subtraction(System.Drawing.Size,Com.PointD)">
            <summary>
            返回将 Size 结构与 PointD 结构的所有分量对应相减得到的 PointD 结构的新实例。
            </summary>
            <param name="sz">Size 结构，表示被减数。</param>
            <param name="pt">PointD 结构，表示减数。</param>
            <returns>PointD 结构，表示将 Size 结构与 PointD 结构的所有分量对应相减得到的结果。</returns>
        </member>
        <member name="M:Com.PointD.op_Subtraction(Com.PointD,System.Drawing.SizeF)">
            <summary>
            返回将 PointD 结构与 SizeF 结构的所有分量对应相减得到的 PointD 结构的新实例。
            </summary>
            <param name="pt">PointD 结构，表示被减数。</param>
            <param name="sz">SizeF 结构，表示减数。</param>
            <returns>PointD 结构，表示将 PointD 结构与 SizeF 结构的所有分量对应相减得到的结果。</returns>
        </member>
        <member name="M:Com.PointD.op_Subtraction(System.Drawing.SizeF,Com.PointD)">
            <summary>
            返回将 SizeF 结构与 PointD 结构的所有分量对应相减得到的 PointD 结构的新实例。
            </summary>
            <param name="sz">SizeF 结构，表示被减数。</param>
            <param name="pt">PointD 结构，表示减数。</param>
            <returns>PointD 结构，表示将 SizeF 结构与 PointD 结构的所有分量对应相减得到的结果。</returns>
        </member>
        <member name="M:Com.PointD.op_Multiply(Com.PointD,System.Double)">
            <summary>
            返回将 PointD 结构的所有分量与双精度浮点数相乘得到的 PointD 结构的新实例。
            </summary>
            <param name="pt">PointD 结构，表示被乘数。</param>
            <param name="n">双精度浮点数，表示乘数。</param>
            <returns>PointD 结构，表示将 PointD 结构的所有分量与双精度浮点数相乘得到的结果。</returns>
        </member>
        <member name="M:Com.PointD.op_Multiply(System.Double,Com.PointD)">
            <summary>
            返回将双精度浮点数与 PointD 结构的所有分量相乘得到的 PointD 结构的新实例。
            </summary>
            <param name="n">双精度浮点数，表示被乘数。</param>
            <param name="pt">PointD 结构，表示乘数。</param>
            <returns>PointD 结构，表示将双精度浮点数与 PointD 结构的所有分量相乘得到的结果。</returns>
        </member>
        <member name="M:Com.PointD.op_Multiply(Com.PointD,Com.PointD)">
            <summary>
            返回将 PointD 结构与 PointD 结构的所有分量对应相乘得到的 PointD 结构的新实例。
            </summary>
            <param name="left">PointD 结构，表示被乘数。</param>
            <param name="right">PointD 结构，表示乘数。</param>
            <returns>PointD 结构，表示将 PointD 结构与 PointD 结构的所有分量对应相乘得到的结果。</returns>
        </member>
        <member name="M:Com.PointD.op_Multiply(Com.PointD,System.Drawing.Point)">
            <summary>
            返回将 PointD 结构与 Point 结构的所有分量对应相乘得到的 PointD 结构的新实例。
            </summary>
            <param name="left">PointD 结构，表示被乘数。</param>
            <param name="right">Point 结构，表示乘数。</param>
            <returns>PointD 结构，表示将 PointD 结构与 Point 结构的所有分量对应相乘得到的结果。</returns>
        </member>
        <member name="M:Com.PointD.op_Multiply(System.Drawing.Point,Com.PointD)">
            <summary>
            返回将 Point 结构与 PointD 结构的所有分量对应相乘得到的 PointD 结构的新实例。
            </summary>
            <param name="left">Point 结构，表示被乘数。</param>
            <param name="right">PointD 结构，表示乘数。</param>
            <returns>PointD 结构，表示将 Point 结构与 PointD 结构的所有分量对应相乘得到的结果。</returns>
        </member>
        <member name="M:Com.PointD.op_Multiply(Com.PointD,System.Drawing.PointF)">
            <summary>
            返回将 PointD 结构与 PointF 结构的所有分量对应相乘得到的 PointD 结构的新实例。
            </summary>
            <param name="left">PointD 结构，表示被乘数。</param>
            <param name="right">PointF 结构，表示乘数。</param>
            <returns>PointD 结构，表示将 PointD 结构与 PointF 结构的所有分量对应相乘得到的结果。</returns>
        </member>
        <member name="M:Com.PointD.op_Multiply(System.Drawing.PointF,Com.PointD)">
            <summary>
            返回将 PointF 结构与 PointD 结构的所有分量对应相乘得到的 PointD 结构的新实例。
            </summary>
            <param name="left">PointF 结构，表示被乘数。</param>
            <param name="right">PointD 结构，表示乘数。</param>
            <returns>PointD 结构，表示将 PointF 结构与 PointD 结构的所有分量对应相乘得到的结果。</returns>
        </member>
        <member name="M:Com.PointD.op_Multiply(Com.PointD,System.Drawing.Size)">
            <summary>
            返回将 PointD 结构与 Size 结构的所有分量对应相乘得到的 PointD 结构的新实例。
            </summary>
            <param name="pt">PointD 结构，表示被乘数。</param>
            <param name="sz">Size 结构，表示乘数。</param>
            <returns>PointD 结构，表示将 PointD 结构与 Size 结构的所有分量对应相乘得到的结果。</returns>
        </member>
        <member name="M:Com.PointD.op_Multiply(System.Drawing.Size,Com.PointD)">
            <summary>
            返回将 Size 结构与 PointD 结构的所有分量对应相乘得到的 PointD 结构的新实例。
            </summary>
            <param name="sz">Size 结构，表示被乘数。</param>
            <param name="pt">PointD 结构，表示乘数。</param>
            <returns>PointD 结构，表示将 Size 结构与 PointD 结构的所有分量对应相乘得到的结果。</returns>
        </member>
        <member name="M:Com.PointD.op_Multiply(Com.PointD,System.Drawing.SizeF)">
            <summary>
            返回将 PointD 结构与 SizeF 结构的所有分量对应相乘得到的 PointD 结构的新实例。
            </summary>
            <param name="pt">PointD 结构，表示被乘数。</param>
            <param name="sz">SizeF 结构，表示乘数。</param>
            <returns>PointD 结构，表示将 PointD 结构与 SizeF 结构的所有分量对应相乘得到的结果。</returns>
        </member>
        <member name="M:Com.PointD.op_Multiply(System.Drawing.SizeF,Com.PointD)">
            <summary>
            返回将 SizeF 结构与 PointD 结构的所有分量对应相乘得到的 PointD 结构的新实例。
            </summary>
            <param name="sz">SizeF 结构，表示被乘数。</param>
            <param name="pt">PointD 结构，表示乘数。</param>
            <returns>PointD 结构，表示将 SizeF 结构与 PointD 结构的所有分量对应相乘得到的结果。</returns>
        </member>
        <member name="M:Com.PointD.op_Division(Com.PointD,System.Double)">
            <summary>
            返回将 PointD 结构的所有分量与双精度浮点数相除得到的 PointD 结构的新实例。
            </summary>
            <param name="pt">PointD 结构，表示被除数。</param>
            <param name="n">双精度浮点数，表示除数。</param>
            <returns>PointD 结构，表示将 PointD 结构的所有分量与双精度浮点数相除得到的结果。</returns>
        </member>
        <member name="M:Com.PointD.op_Division(System.Double,Com.PointD)">
            <summary>
            返回将双精度浮点数与 PointD 结构的所有分量相除得到的 PointD 结构的新实例。
            </summary>
            <param name="n">双精度浮点数，表示被除数。</param>
            <param name="pt">PointD 结构，表示除数。</param>
            <returns>PointD 结构，表示将双精度浮点数与 PointD 结构的所有分量相除得到的结果。</returns>
        </member>
        <member name="M:Com.PointD.op_Division(Com.PointD,Com.PointD)">
            <summary>
            返回将 PointD 结构与 PointD 结构的所有分量对应相除得到的 PointD 结构的新实例。
            </summary>
            <param name="left">PointD 结构，表示被除数。</param>
            <param name="right">PointD 结构，表示除数。</param>
            <returns>PointD 结构，表示将 PointD 结构与 PointD 结构的所有分量对应相除得到的结果。</returns>
        </member>
        <member name="M:Com.PointD.op_Division(Com.PointD,System.Drawing.Point)">
            <summary>
            返回将 PointD 结构与 Point 结构的所有分量对应相除得到的 PointD 结构的新实例。
            </summary>
            <param name="left">PointD 结构，表示被除数。</param>
            <param name="right">Point 结构，表示除数。</param>
            <returns>PointD 结构，表示将 PointD 结构与 Point 结构的所有分量对应相除得到的结果。</returns>
        </member>
        <member name="M:Com.PointD.op_Division(System.Drawing.Point,Com.PointD)">
            <summary>
            返回将 Point 结构与 PointD 结构的所有分量对应相除得到的 PointD 结构的新实例。
            </summary>
            <param name="left">Point 结构，表示被除数。</param>
            <param name="right">PointD 结构，表示除数。</param>
            <returns>PointD 结构，表示将 Point 结构与 PointD 结构的所有分量对应相除得到的结果。</returns>
        </member>
        <member name="M:Com.PointD.op_Division(Com.PointD,System.Drawing.PointF)">
            <summary>
            返回将 PointD 结构与 PointF 结构的所有分量对应相除得到的 PointD 结构的新实例。
            </summary>
            <param name="left">PointD 结构，表示被除数。</param>
            <param name="right">PointF 结构，表示除数。</param>
            <returns>PointD 结构，表示将 PointD 结构与 PointF 结构的所有分量对应相除得到的结果。</returns>
        </member>
        <member name="M:Com.PointD.op_Division(System.Drawing.PointF,Com.PointD)">
            <summary>
            返回将 PointF 结构与 PointD 结构的所有分量对应相除得到的 PointD 结构的新实例。
            </summary>
            <param name="left">PointF 结构，表示被除数。</param>
            <param name="right">PointD 结构，表示除数。</param>
            <returns>PointD 结构，表示将 PointF 结构与 PointD 结构的所有分量对应相除得到的结果。</returns>
        </member>
        <member name="M:Com.PointD.op_Division(Com.PointD,System.Drawing.Size)">
            <summary>
            返回将 PointD 结构与 Size 结构的所有分量对应相除得到的 PointD 结构的新实例。
            </summary>
            <param name="pt">PointD 结构，表示被除数。</param>
            <param name="sz">Size 结构，表示除数。</param>
            <returns>PointD 结构，表示将 PointD 结构与 Size 结构的所有分量对应相除得到的结果。</returns>
        </member>
        <member name="M:Com.PointD.op_Division(System.Drawing.Size,Com.PointD)">
            <summary>
            返回将 Size 结构与 PointD 结构的所有分量对应相除得到的 PointD 结构的新实例。
            </summary>
            <param name="sz">Size 结构，表示被除数。</param>
            <param name="pt">PointD 结构，表示除数。</param>
            <returns>PointD 结构，表示将 Size 结构与 PointD 结构的所有分量对应相除得到的结果。</returns>
        </member>
        <member name="M:Com.PointD.op_Division(Com.PointD,System.Drawing.SizeF)">
            <summary>
            返回将 PointD 结构与 SizeF 结构的所有分量对应相除得到的 PointD 结构的新实例。
            </summary>
            <param name="pt">PointD 结构，表示被除数。</param>
            <param name="sz">SizeF 结构，表示除数。</param>
            <returns>PointD 结构，表示将 PointD 结构与 SizeF 结构的所有分量对应相除得到的结果。</returns>
        </member>
        <member name="M:Com.PointD.op_Division(System.Drawing.SizeF,Com.PointD)">
            <summary>
            返回将 SizeF 结构与 PointD 结构的所有分量对应相除得到的 PointD 结构的新实例。
            </summary>
            <param name="sz">SizeF 结构，表示被除数。</param>
            <param name="pt">PointD 结构，表示除数。</param>
            <returns>PointD 结构，表示将 SizeF 结构与 PointD 结构的所有分量对应相除得到的结果。</returns>
        </member>
        <member name="M:Com.PointD.op_Explicit(Com.PointD)~System.Drawing.Point">
            <summary>
            将指定的 PointD 结构显式转换为 Point 结构。
            </summary>
            <param name="pt">用于转换的 PointD 结构。</param>
            <returns>Point 结构，表示显式转换的结果。</returns>
        </member>
        <member name="M:Com.PointD.op_Explicit(Com.PointD)~System.Drawing.PointF">
            <summary>
            将指定的 PointD 结构显式转换为 PointF 结构。
            </summary>
            <param name="pt">用于转换的 PointD 结构。</param>
            <returns>PointF 结构，表示显式转换的结果。</returns>
        </member>
        <member name="M:Com.PointD.op_Explicit(Com.PointD)~System.Drawing.Size">
            <summary>
            将指定的 PointD 结构显式转换为 Size 结构。
            </summary>
            <param name="pt">用于转换的 PointD 结构。</param>
            <returns>Size 结构，表示显式转换的结果。</returns>
        </member>
        <member name="M:Com.PointD.op_Explicit(Com.PointD)~System.Drawing.SizeF">
            <summary>
            将指定的 PointD 结构显式转换为 SizeF 结构。
            </summary>
            <param name="pt">用于转换的 PointD 结构。</param>
            <returns>SizeF 结构，表示显式转换的结果。</returns>
        </member>
        <member name="M:Com.PointD.op_Explicit(Com.PointD)~Com.Complex">
            <summary>
            将指定的 PointD 结构显式转换为 Complex 结构。
            </summary>
            <param name="pt">用于转换的 PointD 结构。</param>
            <returns>Complex 结构，表示显式转换的结果。</returns>
        </member>
        <member name="M:Com.PointD.op_Implicit(System.Drawing.Point)~Com.PointD">
            <summary>
            将指定的 Point 结构隐式转换为 PointD 结构。
            </summary>
            <param name="pt">用于转换的 Point 结构。</param>
            <returns>PointD 结构，表示隐式转换的结果。</returns>
        </member>
        <member name="M:Com.PointD.op_Implicit(System.Drawing.PointF)~Com.PointD">
            <summary>
            将指定的 PointF 结构隐式转换为 PointD 结构。
            </summary>
            <param name="pt">用于转换的 PointF 结构。</param>
            <returns>PointD 结构，表示隐式转换的结果。</returns>
        </member>
        <member name="M:Com.PointD.op_Explicit(System.Drawing.Size)~Com.PointD">
            <summary>
            将指定的 Size 结构显式转换为 PointD 结构。
            </summary>
            <param name="sz">用于转换的 Size 结构。</param>
            <returns>PointD 结构，表示显式转换的结果。</returns>
        </member>
        <member name="M:Com.PointD.op_Explicit(System.Drawing.SizeF)~Com.PointD">
            <summary>
            将指定的 SizeF 结构显式转换为 PointD 结构。
            </summary>
            <param name="sz">用于转换的 SizeF 结构。</param>
            <returns>PointD 结构，表示显式转换的结果。</returns>
        </member>
        <member name="M:Com.PointD.op_Implicit(System.ValueTuple{System.Double,System.Double})~Com.PointD">
            <summary>
            将指定的值元组隐式转换为 PointD 结构。
            </summary>
            <param name="tuple">用于转换的值元组。</param>
            <returns>PointD 结构，表示隐式转换的结果。</returns>
        </member>
        <member name="M:Com.PointD.op_Implicit(Com.PointD)~System.ValueTuple{System.Double,System.Double}">
            <summary>
            将指定的 PointD 结构隐式转换为值元组。
            </summary>
            <param name="pt">用于转换的 PointD 结构。</param>
            <returns>值元组，表示隐式转换的结果。</returns>
        </member>
        <member name="T:Com.PointD3D">
            <summary>
            以一组有序的双精度浮点数表示的三维直角坐标系坐标。
            </summary>
        </member>
        <member name="M:Com.PointD3D.#ctor(System.Double,System.Double,System.Double)">
            <summary>
            使用双精度浮点数表示的 X 坐标、Y 坐标与 Z 坐标初始化 PointD3D 结构的新实例。
            </summary>
            <param name="x">双精度浮点数表示的 X 坐标。</param>
            <param name="y">双精度浮点数表示的 Y 坐标。</param>
            <param name="z">双精度浮点数表示的 Z 坐标。</param>
        </member>
        <member name="F:Com.PointD3D.Zero">
            <summary>
            表示零向量的 PointD3D 结构的实例。
            </summary>
        </member>
        <member name="F:Com.PointD3D.NaN">
            <summary>
            表示所有分量为非数字的 PointD3D 结构的实例。
            </summary>
        </member>
        <member name="F:Com.PointD3D.Ex">
            <summary>
            表示 X 基向量的 PointD3D 结构的实例。
            </summary>
        </member>
        <member name="F:Com.PointD3D.Ey">
            <summary>
            表示 Y 基向量的 PointD3D 结构的实例。
            </summary>
        </member>
        <member name="F:Com.PointD3D.Ez">
            <summary>
            表示 Z 基向量的 PointD3D 结构的实例。
            </summary>
        </member>
        <member name="P:Com.PointD3D.Item(System.Int32)">
            <summary>
            获取或设置此 PointD3D 结构在指定的基向量方向的分量。
            </summary>
            <param name="index">索引。</param>
        </member>
        <member name="P:Com.PointD3D.X">
            <summary>
            获取或设置此 PointD3D 结构在 X 轴的分量。
            </summary>
        </member>
        <member name="P:Com.PointD3D.Y">
            <summary>
            获取或设置此 PointD3D 结构在 Y 轴的分量。
            </summary>
        </member>
        <member name="P:Com.PointD3D.Z">
            <summary>
            获取或设置此 PointD3D 结构在 Z 轴的分量。
            </summary>
        </member>
        <member name="P:Com.PointD3D.Dimension">
            <summary>
            获取此 PointD3D 结构的维度。
            </summary>
        </member>
        <member name="P:Com.PointD3D.IsEmpty">
            <summary>
            获取表示此 PointD3D 结构是否为空向量的布尔值。
            </summary>
        </member>
        <member name="P:Com.PointD3D.IsZero">
            <summary>
            获取表示此 PointD3D 结构是否为零向量的布尔值。
            </summary>
        </member>
        <member name="P:Com.PointD3D.IsReadOnly">
            <summary>
            获取表示此 PointD3D 结构是否只读的布尔值。
            </summary>
        </member>
        <member name="P:Com.PointD3D.IsFixedSize">
            <summary>
            获取表示此 PointD3D 结构是否具有固定的维度的布尔值。
            </summary>
        </member>
        <member name="P:Com.PointD3D.IsNaN">
            <summary>
            获取表示此 PointD3D 结构是否包含非数字分量的布尔值。
            </summary>
        </member>
        <member name="P:Com.PointD3D.IsInfinity">
            <summary>
            获取表示此 PointD3D 结构是否包含无穷大分量的布尔值。
            </summary>
        </member>
        <member name="P:Com.PointD3D.IsNaNOrInfinity">
            <summary>
            获取表示此 PointD3D 结构是否包含非数字或无穷大分量的布尔值。
            </summary>
        </member>
        <member name="P:Com.PointD3D.Module">
            <summary>
            获取此 PointD3D 结构的模。
            </summary>
        </member>
        <member name="P:Com.PointD3D.ModuleSquared">
            <summary>
            获取此 PointD3D 结构的模的平方。
            </summary>
        </member>
        <member name="P:Com.PointD3D.Opposite">
            <summary>
            获取此 PointD3D 结构的相反向量。
            </summary>
        </member>
        <member name="P:Com.PointD3D.Normalize">
            <summary>
            获取此 PointD3D 结构的规范化向量。
            </summary>
        </member>
        <member name="P:Com.PointD3D.XY">
            <summary>
            获取或设置此 PointD3D 结构在 XY 平面的分量。
            </summary>
        </member>
        <member name="P:Com.PointD3D.YZ">
            <summary>
            获取或设置此 PointD3D 结构在 YZ 平面的分量。
            </summary>
        </member>
        <member name="P:Com.PointD3D.ZX">
            <summary>
            获取或设置此 PointD3D 结构在 ZX 平面的分量。
            </summary>
        </member>
        <member name="P:Com.PointD3D.AngleFromX">
            <summary>
            获取此 PointD3D 结构与 X 轴之间的夹角（弧度）。
            </summary>
        </member>
        <member name="P:Com.PointD3D.AngleFromY">
            <summary>
            获取此 PointD3D 结构与 Y 轴之间的夹角（弧度）。
            </summary>
        </member>
        <member name="P:Com.PointD3D.AngleFromZ">
            <summary>
            获取此 PointD3D 结构与 Z 轴之间的夹角（弧度）。
            </summary>
        </member>
        <member name="P:Com.PointD3D.AngleFromXY">
            <summary>
            获取此 PointD3D 结构与 XY 平面之间的夹角（弧度）。
            </summary>
        </member>
        <member name="P:Com.PointD3D.AngleFromYZ">
            <summary>
            获取此 PointD3D 结构与 YZ 平面之间的夹角（弧度）。
            </summary>
        </member>
        <member name="P:Com.PointD3D.AngleFromZX">
            <summary>
            获取此 PointD3D 结构与 ZX 平面之间的夹角（弧度）。
            </summary>
        </member>
        <member name="P:Com.PointD3D.Zenith">
            <summary>
            获取此 PointD3D 结构的仰角。仰角是 PointD3D 结构与 +Z 轴之间的夹角（弧度）（以 +Z 轴为 0 弧度，远离 +Z 轴的方向为正方向）。
            </summary>
        </member>
        <member name="P:Com.PointD3D.Azimuth">
            <summary>
            获取此 PointD3D 结构的方位角。方位角是 PointD3D 结构在 XY 平面内的投影与 +X 轴之间的夹角（弧度）（以 +X 轴为 0 弧度，从 +X 轴指向 +Y 轴的方向为正方向）。
            </summary>
        </member>
        <member name="M:Com.PointD3D.Equals(System.Object)">
            <summary>
            判断此 PointD3D 结构是否与指定的对象相等。
            </summary>
            <param name="obj">用于比较的对象。</param>
            <returns>布尔值，表示此 PointD3D 结构是否与指定的对象相等。</returns>
        </member>
        <member name="M:Com.PointD3D.GetHashCode">
            <summary>
            返回此 PointD3D 结构的哈希代码。
            </summary>
            <returns>32 位整数，表示此 PointD3D 结构的哈希代码。</returns>
        </member>
        <member name="M:Com.PointD3D.ToString">
            <summary>
            将此 PointD3D 结构转换为字符串。
            </summary>
            <returns>字符串，表示此 PointD3D 结构的字符串形式。</returns>
        </member>
        <member name="M:Com.PointD3D.Equals(Com.PointD3D)">
            <summary>
            判断此 PointD3D 结构是否与指定的 PointD3D 结构相等。
            </summary>
            <param name="pt">用于比较的 PointD3D 结构。</param>
            <returns>布尔值，表示此 PointD3D 结构是否与指定的 PointD3D 结构相等。</returns>
        </member>
        <member name="M:Com.PointD3D.CompareTo(System.Object)">
            <summary>
            将此 PointD3D 结构与指定的对象进行次序比较。
            </summary>
            <param name="obj">用于比较的对象。</param>
            <returns>32 位整数，表示将此 PointD3D 结构与指定的对象进行次序比较得到的结果。</returns>
        </member>
        <member name="M:Com.PointD3D.CompareTo(Com.PointD3D)">
            <summary>
            将此 PointD3D 结构与指定的 PointD3D 结构进行次序比较。
            </summary>
            <param name="pt">用于比较的 PointD3D 结构。</param>
            <returns>32 位整数，表示将此 PointD3D 结构与指定的 PointD3D 结构进行次序比较得到的结果。</returns>
        </member>
        <member name="M:Com.PointD3D.IndexOf(System.Double)">
            <summary>
            遍历此 PointD3D 结构的所有分量并返回第一个与指定值相等的分量的索引。
            </summary>
            <param name="item">用于检索的值。</param>
            <returns>32 位整数，表示第一个与指定值相等的分量的索引。</returns>
        </member>
        <member name="M:Com.PointD3D.IndexOf(System.Double,System.Int32)">
            <summary>
            从指定的索引开始遍历此 PointD3D 结构的所有分量并返回第一个与指定值相等的分量的索引。
            </summary>
            <param name="item">用于检索的值。</param>
            <param name="startIndex">起始索引。</param>
            <returns>32 位整数，表示第一个与指定值相等的分量的索引。</returns>
        </member>
        <member name="M:Com.PointD3D.IndexOf(System.Double,System.Int32,System.Int32)">
            <summary>
            从指定的索引开始遍历此 PointD3D 结构指定数量的分量并返回第一个与指定值相等的分量的索引。
            </summary>
            <param name="item">用于检索的值。</param>
            <param name="startIndex">起始索引。</param>
            <param name="count">遍历的分量数量。</param>
            <returns>32 位整数，表示第一个与指定值相等的分量的索引。</returns>
        </member>
        <member name="M:Com.PointD3D.LastIndexOf(System.Double)">
            <summary>
            逆序遍历此 PointD3D 结构的所有分量并返回第一个与指定值相等的分量的索引。
            </summary>
            <param name="item">用于检索的值。</param>
            <returns>32 位整数，表示第一个与指定值相等的分量的索引。</returns>
        </member>
        <member name="M:Com.PointD3D.LastIndexOf(System.Double,System.Int32)">
            <summary>
            从指定的索引开始逆序遍历此 PointD3D 结构的所有分量并返回第一个与指定值相等的分量的索引。
            </summary>
            <param name="item">用于检索的值。</param>
            <param name="startIndex">起始索引。</param>
            <returns>32 位整数，表示第一个与指定值相等的分量的索引。</returns>
        </member>
        <member name="M:Com.PointD3D.LastIndexOf(System.Double,System.Int32,System.Int32)">
            <summary>
            从指定的索引开始逆序遍历此 PointD3D 结构指定数量的分量并返回第一个与指定值相等的分量的索引。
            </summary>
            <param name="item">用于检索的值。</param>
            <param name="startIndex">起始索引。</param>
            <param name="count">遍历的分量数量。</param>
            <returns>32 位整数，表示第一个与指定值相等的分量的索引。</returns>
        </member>
        <member name="M:Com.PointD3D.Contains(System.Double)">
            <summary>
            遍历此 PointD3D 结构的所有分量并返回表示是否存在与指定值相等的分量的布尔值。
            </summary>
            <param name="item">用于检索的值。</param>
            <returns>布尔值，表示是否存在与指定值相等的分量。</returns>
        </member>
        <member name="M:Com.PointD3D.ToArray">
            <summary>
            将此 PointD3D 结构转换为双精度浮点数数组。
            </summary>
            <returns>双精度浮点数数组，数组元素表示此 PointD3D 结构的分量。</returns>
        </member>
        <member name="M:Com.PointD3D.ToList">
            <summary>
            将此 PointD3D 结构转换为双精度浮点数列表。
            </summary>
            <returns>双精度浮点数列表，列表元素表示此 PointD3D 结构的分量。</returns>
        </member>
        <member name="M:Com.PointD3D.CopyTo(System.Double[],System.Int32)">
            <summary>
            将此 PointD3D 结构的所有分量复制到双精度浮点数数组中。
            </summary>
            <param name="array">双精度浮点数数组。</param>
            <param name="index">双精度浮点数数组的起始索引。</param>
        </member>
        <member name="M:Com.PointD3D.ToSpherical">
            <summary>
            返回将此 PointD3D 结构表示的直角坐标系坐标转换为球坐标系坐标的 PointD3D 结构的新实例。
            </summary>
            <returns>PointD3D 结构，表示将此 PointD3D 结构表示的直角坐标系坐标转换为球坐标系坐标得到的结果。</returns>
        </member>
        <member name="M:Com.PointD3D.ToCartesian">
            <summary>
            返回将此 PointD3D 结构表示的球坐标系坐标转换为直角坐标系坐标的 PointD3D 结构的新实例。
            </summary>
            <returns>PointD3D 结构，表示将此 PointD3D 结构表示的球坐标系坐标转换为直角坐标系坐标得到的结果。</returns>
        </member>
        <member name="M:Com.PointD3D.DistanceFrom(Com.PointD3D)">
            <summary>
            返回此 PointD3D 结构与指定的 PointD3D 结构之间的距离。
            </summary>
            <param name="pt">PointD3D 结构，表示另一个向量。</param>
            <returns>双精度浮点数，表示此 PointD3D 结构与指定的 PointD3D 结构之间的距离。</returns>
        </member>
        <member name="M:Com.PointD3D.AngleFrom(Com.PointD3D)">
            <summary>
            返回此 PointD3D 结构与指定的 PointD3D 结构之间的夹角（弧度）。
            </summary>
            <param name="pt">PointD3D 结构，表示另一个向量。</param>
            <returns>双精度浮点数，表示此 PointD3D 结构与指定的 PointD3D 结构之间的夹角（弧度）。</returns>
        </member>
        <member name="M:Com.PointD3D.Offset(System.Int32,System.Double)">
            <summary>
            按双精度浮点数表示的位移将此 PointD3D 结构在指定的基向量方向的分量平移指定的量。
            </summary>
            <param name="index">索引，用于指定平移的分量所在方向的基向量。</param>
            <param name="d">双精度浮点数表示的位移。</param>
        </member>
        <member name="M:Com.PointD3D.Offset(System.Double)">
            <summary>
            按双精度浮点数表示的位移将此 PointD3D 结构的所有分量平移指定的量。
            </summary>
            <param name="d">双精度浮点数表示的位移。</param>
        </member>
        <member name="M:Com.PointD3D.Offset(Com.PointD3D)">
            <summary>
            按 PointD3D 结构表示的位移将此 PointD3D 结构平移指定的量。
            </summary>
            <param name="pt">PointD3D 结构表示的位移。</param>
        </member>
        <member name="M:Com.PointD3D.Offset(System.Double,System.Double,System.Double)">
            <summary>
            按双精度浮点数表示的 X 坐标位移、Y 坐标位移与 Z 坐标位移将此 PointD3D 结构平移指定的量。
            </summary>
            <param name="dx">双精度浮点数表示的 X 坐标位移。</param>
            <param name="dy">双精度浮点数表示的 Y 坐标位移。</param>
            <param name="dz">双精度浮点数表示的 Z 坐标位移。</param>
        </member>
        <member name="M:Com.PointD3D.OffsetX(System.Double)">
            <summary>
            按双精度浮点数表示的位移将此 PointD3D 结构在 X 轴的分量平移指定的量。
            </summary>
            <param name="d">双精度浮点数表示的位移。</param>
        </member>
        <member name="M:Com.PointD3D.OffsetY(System.Double)">
            <summary>
            按双精度浮点数表示的位移将此 PointD3D 结构在 Y 轴的分量平移指定的量。
            </summary>
            <param name="d">双精度浮点数表示的位移。</param>
        </member>
        <member name="M:Com.PointD3D.OffsetZ(System.Double)">
            <summary>
            按双精度浮点数表示的位移将此 PointD3D 结构在 Z 轴的分量平移指定的量。
            </summary>
            <param name="d">双精度浮点数表示的位移。</param>
        </member>
        <member name="M:Com.PointD3D.OffsetCopy(System.Int32,System.Double)">
            <summary>
            返回按双精度浮点数表示的位移将此 PointD3D 结构在指定的基向量方向的分量平移指定的量的 PointD3D 结构的新实例。
            </summary>
            <param name="index">索引，用于指定平移的分量所在方向的基向量。</param>
            <param name="d">双精度浮点数表示的位移。</param>
            <returns>PointD3D 结构，表示按双精度浮点数表示的位移将此 PointD3D 结构在指定的基向量方向的分量平移指定的量得到的结果。</returns>
        </member>
        <member name="M:Com.PointD3D.OffsetCopy(System.Double)">
            <summary>
            返回按双精度浮点数表示的位移将此 PointD3D 结构的所有分量平移指定的量的 PointD3D 结构的新实例。
            </summary>
            <param name="d">双精度浮点数表示的位移。</param>
            <returns>PointD3D 结构，表示按双精度浮点数表示的位移将此 PointD3D 结构的所有分量平移指定的量得到的结果。</returns>
        </member>
        <member name="M:Com.PointD3D.OffsetCopy(Com.PointD3D)">
            <summary>
            返回按 PointD3D 结构表示的位移将此 PointD3D 结构平移指定的量的 PointD3D 结构的新实例。
            </summary>
            <param name="pt">PointD3D 结构表示的位移。</param>
            <returns>PointD3D 结构，表示按 PointD3D 结构表示的位移将此 PointD3D 结构平移指定的量得到的结果。</returns>
        </member>
        <member name="M:Com.PointD3D.OffsetCopy(System.Double,System.Double,System.Double)">
            <summary>
            返回按双精度浮点数表示的 X 坐标位移、Y 坐标位移与 Z 坐标位移将此 PointD3D 结构平移指定的量的 PointD3D 结构的新实例。
            </summary>
            <param name="dx">双精度浮点数表示的 X 坐标位移。</param>
            <param name="dy">双精度浮点数表示的 Y 坐标位移。</param>
            <param name="dz">双精度浮点数表示的 Z 坐标位移。</param>
            <returns>PointD3D 结构，表示按双精度浮点数表示的 X 坐标位移、Y 坐标位移与 Z 坐标位移将此 PointD3D 结构平移指定的量得到的结果。</returns>
        </member>
        <member name="M:Com.PointD3D.OffsetXCopy(System.Double)">
            <summary>
            返回按双精度浮点数表示的位移将此 PointD3D 结构在 X 轴的分量平移指定的量的 PointD3D 结构的新实例。
            </summary>
            <param name="d">双精度浮点数表示的位移。</param>
            <returns>PointD3D 结构，表示按双精度浮点数表示的位移将此 PointD3D 结构在 X 轴的分量平移指定的量得到的结果。</returns>
        </member>
        <member name="M:Com.PointD3D.OffsetYCopy(System.Double)">
            <summary>
            返回按双精度浮点数表示的位移将此 PointD3D 结构在 Y 轴的分量平移指定的量的 PointD3D 结构的新实例。
            </summary>
            <param name="d">双精度浮点数表示的位移。</param>
            <returns>PointD3D 结构，表示按双精度浮点数表示的位移将此 PointD3D 结构在 Y 轴的分量平移指定的量得到的结果。</returns>
        </member>
        <member name="M:Com.PointD3D.OffsetZCopy(System.Double)">
            <summary>
            返回按双精度浮点数表示的位移将此 PointD3D 结构在 Z 轴的分量平移指定的量的 PointD3D 结构的新实例。
            </summary>
            <param name="d">双精度浮点数表示的位移。</param>
            <returns>PointD3D 结构，表示按双精度浮点数表示的位移将此 PointD3D 结构在 Z 轴的分量平移指定的量得到的结果。</returns>
        </member>
        <member name="M:Com.PointD3D.Scale(System.Int32,System.Double)">
            <summary>
            按双精度浮点数表示的缩放因数将此 PointD3D 结构在指定的基向量方向的分量缩放指定的倍数。
            </summary>
            <param name="index">索引，用于指定缩放的分量所在方向的基向量。</param>
            <param name="s">双精度浮点数表示的缩放因数。</param>
        </member>
        <member name="M:Com.PointD3D.Scale(System.Double)">
            <summary>
            按双精度浮点数表示的缩放因数将此 PointD3D 结构的所有分量缩放指定的倍数。
            </summary>
            <param name="s">双精度浮点数表示的缩放因数。</param>
        </member>
        <member name="M:Com.PointD3D.Scale(Com.PointD3D)">
            <summary>
            按 PointD3D 结构表示的缩放因数将此 PointD3D 结构缩放指定的倍数。
            </summary>
            <param name="pt">PointD3D 结构表示的缩放因数。</param>
        </member>
        <member name="M:Com.PointD3D.Scale(System.Double,System.Double,System.Double)">
            <summary>
            按双精度浮点数表示的 X 坐标缩放因数、Y 坐标缩放因数与 Z 坐标缩放因数将此 PointD3D 结构缩放指定的倍数。
            </summary>
            <param name="sx">双精度浮点数表示的 X 坐标缩放因数。</param>
            <param name="sy">双精度浮点数表示的 Y 坐标缩放因数。</param>
            <param name="sz">双精度浮点数表示的 Z 坐标缩放因数。</param>
        </member>
        <member name="M:Com.PointD3D.ScaleX(System.Double)">
            <summary>
            按双精度浮点数表示的缩放因数将此 PointD3D 结构在 X 轴的分量缩放指定的倍数。
            </summary>
            <param name="s">双精度浮点数表示的缩放因数。</param>
        </member>
        <member name="M:Com.PointD3D.ScaleY(System.Double)">
            <summary>
            按双精度浮点数表示的缩放因数将此 PointD3D 结构在 Y 轴的分量缩放指定的倍数。
            </summary>
            <param name="s">双精度浮点数表示的缩放因数。</param>
        </member>
        <member name="M:Com.PointD3D.ScaleZ(System.Double)">
            <summary>
            按双精度浮点数表示的缩放因数将此 PointD3D 结构在 Z 轴的分量缩放指定的倍数。
            </summary>
            <param name="s">双精度浮点数表示的缩放因数。</param>
        </member>
        <member name="M:Com.PointD3D.ScaleCopy(System.Int32,System.Double)">
            <summary>
            返回按双精度浮点数表示的缩放因数将此 PointD3D 结构在指定的基向量方向的分量缩放指定的倍数的 PointD3D 结构的新实例。
            </summary>
            <param name="index">索引，用于指定缩放的分量所在方向的基向量。</param>
            <param name="s">双精度浮点数表示的缩放因数。</param>
            <returns>PointD3D 结构，表示按双精度浮点数表示的缩放因数将此 PointD3D 结构在指定的基向量方向的分量缩放指定的倍数得到的结果。</returns>
        </member>
        <member name="M:Com.PointD3D.ScaleCopy(System.Double)">
            <summary>
            返回按双精度浮点数表示的缩放因数将此 PointD3D 结构的所有分量缩放指定的倍数的 PointD3D 结构的新实例。
            </summary>
            <param name="s">双精度浮点数表示的缩放因数。</param>
            <returns>PointD3D 结构，表示按双精度浮点数表示的缩放因数将此 PointD3D 结构的所有分量缩放指定的倍数得到的结果。</returns>
        </member>
        <member name="M:Com.PointD3D.ScaleCopy(Com.PointD3D)">
            <summary>
            返回按 PointD3D 结构表示的缩放因数将此 PointD3D 结构缩放指定的倍数的 PointD3D 结构的新实例。
            </summary>
            <param name="pt">PointD3D 结构表示的缩放因数。</param>
            <returns>PointD3D 结构，表示按 PointD3D 结构表示的缩放因数将此 PointD3D 结构缩放指定的倍数得到的结果。</returns>
        </member>
        <member name="M:Com.PointD3D.ScaleCopy(System.Double,System.Double,System.Double)">
            <summary>
            返回按双精度浮点数表示的 X 坐标缩放因数、Y 坐标缩放因数与 Z 坐标缩放因数将此 PointD3D 结构缩放指定的倍数的 PointD3D 结构的新实例。
            </summary>
            <param name="sx">双精度浮点数表示的 X 坐标缩放因数。</param>
            <param name="sy">双精度浮点数表示的 Y 坐标缩放因数。</param>
            <param name="sz">双精度浮点数表示的 Z 坐标缩放因数。</param>
            <returns>PointD3D 结构，表示按双精度浮点数表示的 X 坐标缩放因数、Y 坐标缩放因数与 Z 坐标缩放因数将此 PointD3D 结构缩放指定的倍数得到的结果。</returns>
        </member>
        <member name="M:Com.PointD3D.ScaleXCopy(System.Double)">
            <summary>
            返回按双精度浮点数表示的缩放因数将此 PointD3D 结构在 X 轴的分量缩放指定的倍数的 PointD3D 结构的新实例。
            </summary>
            <param name="s">双精度浮点数表示的缩放因数。</param>
            <returns>PointD3D 结构，表示按双精度浮点数表示的缩放因数将此 PointD3D 结构在 X 轴的分量缩放指定的倍数得到的结果。</returns>
        </member>
        <member name="M:Com.PointD3D.ScaleYCopy(System.Double)">
            <summary>
            返回按双精度浮点数表示的缩放因数将此 PointD3D 结构在 Y 轴的分量缩放指定的倍数的 PointD3D 结构的新实例。
            </summary>
            <param name="s">双精度浮点数表示的缩放因数。</param>
            <returns>PointD3D 结构，表示按双精度浮点数表示的缩放因数将此 PointD3D 结构在 Y 轴的分量缩放指定的倍数得到的结果。</returns>
        </member>
        <member name="M:Com.PointD3D.ScaleZCopy(System.Double)">
            <summary>
            返回按双精度浮点数表示的缩放因数将此 PointD3D 结构在 Z 轴的分量缩放指定的倍数的 PointD3D 结构的新实例。
            </summary>
            <param name="s">双精度浮点数表示的缩放因数。</param>
            <returns>PointD3D 结构，表示按双精度浮点数表示的缩放因数将此 PointD3D 结构在 Z 轴的分量缩放指定的倍数得到的结果。</returns>
        </member>
        <member name="M:Com.PointD3D.Reflect(System.Int32)">
            <summary>
            将此 PointD3D 结构在指定的基向量方向的分量翻转。
            </summary>
            <param name="index">索引，用于指定翻转的分量所在方向的基向量。</param>
        </member>
        <member name="M:Com.PointD3D.ReflectX">
            <summary>
            将此 PointD3D 结构在 X 轴的分量翻转。
            </summary>
        </member>
        <member name="M:Com.PointD3D.ReflectY">
            <summary>
            将此 PointD3D 结构在 Y 轴的分量翻转。
            </summary>
        </member>
        <member name="M:Com.PointD3D.ReflectZ">
            <summary>
            将此 PointD3D 结构在 Z 轴的分量翻转。
            </summary>
        </member>
        <member name="M:Com.PointD3D.ReflectCopy(System.Int32)">
            <summary>
            返回将此 PointD3D 结构在指定的基向量方向的分量翻转的 PointD3D 结构的新实例。
            </summary>
            <param name="index">索引，用于指定翻转的分量所在方向的基向量。</param>
            <returns>PointD3D 结构，表示将此 PointD3D 结构在指定的基向量方向的分量翻转得到的结果。</returns>
        </member>
        <member name="M:Com.PointD3D.ReflectXCopy">
            <summary>
            返回将此 PointD3D 结构在 X 轴的分量翻转的 PointD3D 结构的新实例。
            </summary>
            <returns>PointD3D 结构，表示将此 PointD3D 结构在 X 轴的分量翻转得到的结果。</returns>
        </member>
        <member name="M:Com.PointD3D.ReflectYCopy">
            <summary>
            返回将此 PointD3D 结构在 Y 轴的分量翻转的 PointD3D 结构的新实例。
            </summary>
            <returns>PointD3D 结构，表示将此 PointD3D 结构在 Y 轴的分量翻转得到的结果。</returns>
        </member>
        <member name="M:Com.PointD3D.ReflectZCopy">
            <summary>
            返回将此 PointD3D 结构在 Z 轴的分量翻转的 PointD3D 结构的新实例。
            </summary>
            <returns>PointD3D 结构，表示将此 PointD3D 结构在 Z 轴的分量翻转得到的结果。</returns>
        </member>
        <member name="M:Com.PointD3D.Shear(System.Int32,System.Int32,System.Double)">
            <summary>
            按双精度浮点数表示的弧度将此 PointD3D 结构错切指定的角度。
            </summary>
            <param name="index1">索引，用于指定与错切方向同向的基向量。</param>
            <param name="index2">索引，用于指定与错切方向共面正交的基向量。</param>
            <param name="angle">双精度浮点数，表示此 PointD3D 结构沿索引 index1 指定的基向量方向且共面正交于 index2 指定的基向量方向错切的角度（弧度）。</param>
        </member>
        <member name="M:Com.PointD3D.ShearXY(System.Double)">
            <summary>
            按双精度浮点数表示的弧度将此 PointD3D 结构在 XY 平面向 +X 轴错切指定的角度。
            </summary>
            <param name="angle">双精度浮点数，表示此 PointD3D 结构在 XY 平面向 +X 轴错切的角度（弧度）。</param>
        </member>
        <member name="M:Com.PointD3D.ShearYX(System.Double)">
            <summary>
            按双精度浮点数表示的弧度将此 PointD3D 结构在 XY 平面向 +Y 轴错切指定的角度。
            </summary>
            <param name="angle">双精度浮点数，表示此 PointD3D 结构在 XY 平面向 +Y 轴错切的角度（弧度）。</param>
        </member>
        <member name="M:Com.PointD3D.ShearYZ(System.Double)">
            <summary>
            按双精度浮点数表示的弧度将此 PointD3D 结构在 YZ 平面向 +Y 轴错切指定的角度。
            </summary>
            <param name="angle">双精度浮点数，表示此 PointD3D 结构在 YZ 平面向 +Y 轴错切的角度（弧度）。</param>
        </member>
        <member name="M:Com.PointD3D.ShearZY(System.Double)">
            <summary>
            按双精度浮点数表示的弧度将此 PointD3D 结构在 YZ 平面向 +Z 轴错切指定的角度。
            </summary>
            <param name="angle">双精度浮点数，表示此 PointD3D 结构在 YZ 平面向 +Z 轴错切的角度（弧度）。</param>
        </member>
        <member name="M:Com.PointD3D.ShearZX(System.Double)">
            <summary>
            按双精度浮点数表示的弧度将此 PointD3D 结构在 ZX 平面向 +Z 轴错切指定的角度。
            </summary>
            <param name="angle">双精度浮点数，表示此 PointD3D 结构在 ZX 平面向 +Z 轴错切的角度（弧度）。</param>
        </member>
        <member name="M:Com.PointD3D.ShearXZ(System.Double)">
            <summary>
            按双精度浮点数表示的弧度将此 PointD3D 结构在 ZX 平面向 +X 轴错切指定的角度。
            </summary>
            <param name="angle">双精度浮点数，表示此 PointD3D 结构在 ZX 平面向 +X 轴错切的角度（弧度）。</param>
        </member>
        <member name="M:Com.PointD3D.ShearCopy(System.Int32,System.Int32,System.Double)">
            <summary>
            返回按双精度浮点数表示的弧度将此 PointD3D 结构错切指定的角度的 PointD3D 结构的新实例。
            </summary>
            <param name="index1">索引，用于指定与错切方向同向的基向量。</param>
            <param name="index2">索引，用于指定与错切方向共面正交的基向量。</param>
            <param name="angle">双精度浮点数，表示此 PointD3D 结构沿索引 index1 指定的基向量方向且共面正交于 index2 指定的基向量方向错切的角度（弧度）。</param>
            <returns>PointD3D 结构，表示按双精度浮点数表示的弧度将此 PointD3D 结构错切指定的角度得到的结果。</returns>
        </member>
        <member name="M:Com.PointD3D.ShearXYCopy(System.Double)">
            <summary>
            返回按双精度浮点数表示的弧度将此 PointD3D 结构在 XY 平面向 +X 轴错切指定的角度的 PointD3D 结构的新实例。
            </summary>
            <param name="angle">双精度浮点数，表示此 PointD3D 结构在 XY 平面向 +X 轴错切的角度（弧度）。</param>
            <returns>PointD3D 结构，表示按双精度浮点数表示的弧度将此 PointD3D 结构在 XY 平面向 +X 轴错切指定的角度得到的结果。</returns>
        </member>
        <member name="M:Com.PointD3D.ShearYXCopy(System.Double)">
            <summary>
            返回按双精度浮点数表示的弧度将此 PointD3D 结构在 XY 平面向 +Y 轴错切指定的角度的 PointD3D 结构的新实例。
            </summary>
            <param name="angle">双精度浮点数，表示此 PointD3D 结构在 XY 平面向 +Y 轴错切的角度（弧度）。</param>
            <returns>PointD3D 结构，表示按双精度浮点数表示的弧度将此 PointD3D 结构在 XY 平面向 +Y 轴错切指定的角度得到的结果。</returns>
        </member>
        <member name="M:Com.PointD3D.ShearYZCopy(System.Double)">
            <summary>
            返回按双精度浮点数表示的弧度将此 PointD3D 结构在 YZ 平面向 +Y 轴错切指定的角度的 PointD3D 结构的新实例。
            </summary>
            <param name="angle">双精度浮点数，表示此 PointD3D 结构在 YZ 平面向 +Y 轴错切的角度（弧度）。</param>
            <returns>PointD3D 结构，表示按双精度浮点数表示的弧度将此 PointD3D 结构在 YZ 平面向 +Y 轴错切指定的角度得到的结果。</returns>
        </member>
        <member name="M:Com.PointD3D.ShearZYCopy(System.Double)">
            <summary>
            返回按双精度浮点数表示的弧度将此 PointD3D 结构在 YZ 平面向 +Z 轴错切指定的角度的 PointD3D 结构的新实例。
            </summary>
            <param name="angle">双精度浮点数，表示此 PointD3D 结构在 YZ 平面向 +Z 轴错切的角度（弧度）。</param>
            <returns>PointD3D 结构，表示按双精度浮点数表示的弧度将此 PointD3D 结构在 YZ 平面向 +Z 轴错切指定的角度得到的结果。</returns>
        </member>
        <member name="M:Com.PointD3D.ShearZXCopy(System.Double)">
            <summary>
            返回按双精度浮点数表示的弧度将此 PointD3D 结构在 ZX 平面向 +Z 轴错切指定的角度的 PointD3D 结构的新实例。
            </summary>
            <param name="angle">双精度浮点数，表示此 PointD3D 结构在 ZX 平面向 +Z 轴错切的角度（弧度）。</param>
            <returns>PointD3D 结构，表示按双精度浮点数表示的弧度将此 PointD3D 结构在 ZX 平面向 +Z 轴错切指定的角度得到的结果。</returns>
        </member>
        <member name="M:Com.PointD3D.ShearXZCopy(System.Double)">
            <summary>
            返回按双精度浮点数表示的弧度将此 PointD3D 结构在 ZX 平面向 +X 轴错切指定的角度的 PointD3D 结构的新实例。
            </summary>
            <param name="angle">双精度浮点数，表示此 PointD3D 结构在 ZX 平面向 +X 轴错切的角度（弧度）。</param>
            <returns>PointD3D 结构，表示按双精度浮点数表示的弧度将此 PointD3D 结构在 ZX 平面向 +X 轴错切指定的角度得到的结果。</returns>
        </member>
        <member name="M:Com.PointD3D.Rotate(System.Int32,System.Int32,System.Double)">
            <summary>
            按双精度浮点数表示的弧度将此 PointD3D 结构旋转指定的角度。
            </summary>
            <param name="index1">索引，用于指定构成旋转轨迹所在平面的第一个基向量。</param>
            <param name="index2">索引，用于指定构成旋转轨迹所在平面的第二个基向量。</param>
            <param name="angle">双精度浮点数，表示此 PointD3D 结构绕索引 index1 与 index2 指定的基向量构成的平面的法向空间旋转的角度（弧度）（以索引 index1 指定的基向量为 0 弧度，从索引 index1 指定的基向量指向索引 index2 指定的基向量的方向为正方向）。</param>
        </member>
        <member name="M:Com.PointD3D.RotateX(System.Double)">
            <summary>
            按双精度浮点数表示的弧度将此 PointD3D 结构绕 X 轴旋转指定的角度。
            </summary>
            <param name="angle">双精度浮点数，表示此 PointD3D 结构绕 X 轴旋转的角度（弧度）（以 +Y 轴为 0 弧度，从 +Y 轴指向 +Z 轴的方向为正方向）。</param>
        </member>
        <member name="M:Com.PointD3D.RotateY(System.Double)">
            <summary>
            按双精度浮点数表示的弧度将此 PointD3D 结构绕 Y 轴旋转指定的角度。
            </summary>
            <param name="angle">双精度浮点数，表示此 PointD3D 结构绕 Y 轴旋转的角度（弧度）（以 +Z 轴为 0 弧度，从 +Z 轴指向 +X 轴的方向为正方向）。</param>
        </member>
        <member name="M:Com.PointD3D.RotateZ(System.Double)">
            <summary>
            按双精度浮点数表示的弧度将此 PointD3D 结构绕 Z 轴旋转指定的角度。
            </summary>
            <param name="angle">双精度浮点数，表示此 PointD3D 结构绕 Z 轴旋转的角度（弧度）（以 +X 轴为 0 弧度，从 +X 轴指向 +Y 轴的方向为正方向）。</param>
        </member>
        <member name="M:Com.PointD3D.RotateCopy(System.Int32,System.Int32,System.Double)">
            <summary>
            返回按双精度浮点数表示的弧度将此 PointD3D 结构旋转指定的角度的 PointD3D 结构的新实例。
            </summary>
            <param name="index1">索引，用于指定构成旋转轨迹所在平面的第一个基向量。</param>
            <param name="index2">索引，用于指定构成旋转轨迹所在平面的第二个基向量。</param>
            <param name="angle">双精度浮点数，表示此 PointD3D 结构绕索引 index1 与 index2 指定的基向量构成的平面的法向空间旋转的角度（弧度）（以索引 index1 指定的基向量为 0 弧度，从索引 index1 指定的基向量指向索引 index2 指定的基向量的方向为正方向）。</param>
            <returns>PointD3D 结构，表示按双精度浮点数表示的弧度将此 PointD3D 结构旋转指定的角度得到的结果。</returns>
        </member>
        <member name="M:Com.PointD3D.RotateXCopy(System.Double)">
            <summary>
            返回按双精度浮点数表示的弧度将此 PointD3D 结构绕 X 轴旋转指定的角度的 PointD3D 结构的新实例。
            </summary>
            <param name="angle">双精度浮点数，表示此 PointD3D 结构绕 X 轴旋转的角度（弧度）（以 +Y 轴为 0 弧度，从 +Y 轴指向 +Z 轴的方向为正方向）。</param>
            <returns>PointD3D 结构，表示按双精度浮点数表示的弧度将此 PointD3D 结构绕 X 轴旋转指定的角度得到的结果。</returns>
        </member>
        <member name="M:Com.PointD3D.RotateYCopy(System.Double)">
            <summary>
            返回按双精度浮点数表示的弧度将此 PointD3D 结构绕 Y 轴旋转指定的角度的 PointD3D 结构的新实例。
            </summary>
            <param name="angle">双精度浮点数，表示此 PointD3D 结构绕 Y 轴旋转的角度（弧度）（以 +Z 轴为 0 弧度，从 +Z 轴指向 +X 轴的方向为正方向）。</param>
            <returns>PointD3D 结构，表示按双精度浮点数表示的弧度将此 PointD3D 结构绕 Y 轴旋转指定的角度得到的结果。</returns>
        </member>
        <member name="M:Com.PointD3D.RotateZCopy(System.Double)">
            <summary>
            返回按双精度浮点数表示的弧度将此 PointD3D 结构绕 Z 轴旋转指定的角度的 PointD3D 结构的新实例。
            </summary>
            <param name="angle">双精度浮点数，表示此 PointD3D 结构绕 Z 轴旋转的角度（弧度）（以 +X 轴为 0 弧度，从 +X 轴指向 +Y 轴的方向为正方向）。</param>
            <returns>PointD3D 结构，表示按双精度浮点数表示的弧度将此 PointD3D 结构绕 Z 轴旋转指定的角度得到的结果。</returns>
        </member>
        <member name="M:Com.PointD3D.MatrixTransform(Com.Matrix)">
            <summary>
            按 Matrix 对象表示的 4x4 仿射矩阵（左矩阵）将此 PointD3D 结构进行仿射变换。
            </summary>
            <param name="matrixLeft">Matrix 对象，表示 4x4 仿射矩阵（左矩阵）。</param>
        </member>
        <member name="M:Com.PointD3D.MatrixTransformCopy(Com.Matrix)">
            <summary>
            返回按 Matrix 对象表示的 4x4 仿射矩阵（左矩阵）将此 PointD3D 结构进行仿射变换的 PointD3D 结构的新实例。
            </summary>
            <param name="matrixLeft">Matrix 对象列表，表示 4x4 仿射矩阵（左矩阵）。</param>
            <returns>PointD3D 结构，表示按 Matrix 对象表示的 4x4 仿射矩阵（左矩阵）将此 PointD3D 结构进行仿射变换得到的结果。</returns>
        </member>
        <member name="M:Com.PointD3D.AffineTransform(Com.AffineTransformation)">
            <summary>
            按 AffineTransformation 对象将此 PointD3D 结构进行仿射变换。
            </summary>
            <param name="affineTransformation">AffineTransformation 对象。</param>
        </member>
        <member name="M:Com.PointD3D.AffineTransformCopy(Com.AffineTransformation)">
            <summary>
            返回按 AffineTransformation 对象将此 PointD3D 结构进行仿射变换得到的结果。
            </summary>
            <param name="affineTransformation">AffineTransformation 对象。</param>
            <returns>PointD3D 结构，表示按 AffineTransformation 对象将此 PointD3D 结构进行仿射变换得到的结果。</returns>
        </member>
        <member name="M:Com.PointD3D.AffineTransform(Com.PointD3D,Com.PointD3D,Com.PointD3D,Com.PointD3D)">
            <summary>
            按 PointD3D 结构表示的 X 基向量、Y 基向量、Z 基向量与偏移向量将此 PointD3D 结构进行仿射变换。
            </summary>
            <param name="ex">PointD3D 结构表示的 X 基向量。</param>
            <param name="ey">PointD3D 结构表示的 Y 基向量。</param>
            <param name="ez">PointD3D 结构表示的 Z 基向量。</param>
            <param name="offset">PointD3D 结构表示的偏移向量。</param>
        </member>
        <member name="M:Com.PointD3D.AffineTransform(Com.Matrix)">
            <summary>
            按 Matrix 对象表示的 4x4 仿射矩阵（左矩阵）将此 PointD3D 结构进行仿射变换。
            </summary>
            <param name="matrixLeft">Matrix 对象，表示 4x4 仿射矩阵（左矩阵）。</param>
        </member>
        <member name="M:Com.PointD3D.AffineTransform(Com.Matrix[])">
            <summary>
            按 Matrix 对象数组表示的 4x4 仿射矩阵（左矩阵）数组将此 PointD3D 结构进行仿射变换。
            </summary>
            <param name="matricesLeft">Matrix 对象数组，表示 4x4 仿射矩阵（左矩阵）数组。</param>
        </member>
        <member name="M:Com.PointD3D.AffineTransform(System.Collections.Generic.List{Com.Matrix})">
            <summary>
            按 Matrix 对象列表表示的 4x4 仿射矩阵（左矩阵）列表将此 PointD3D 结构进行仿射变换。
            </summary>
            <param name="matricesLeft">Matrix 对象列表，表示 4x4 仿射矩阵（左矩阵）列表。</param>
        </member>
        <member name="M:Com.PointD3D.AffineTransformCopy(Com.PointD3D,Com.PointD3D,Com.PointD3D,Com.PointD3D)">
            <summary>
            返回按 PointD3D 结构表示的 X 基向量、Y 基向量、Z 基向量与偏移向量将此 PointD3D 结构进行仿射变换的 PointD3D 结构的新实例。
            </summary>
            <param name="ex">PointD3D 结构表示的 X 基向量。</param>
            <param name="ey">PointD3D 结构表示的 Y 基向量。</param>
            <param name="ez">PointD3D 结构表示的 Z 基向量。</param>
            <param name="offset">PointD3D 结构表示的偏移向量。</param>
            <returns>PointD3D 结构，表示按 PointD3D 结构表示的 X 基向量、Y 基向量、Z 基向量与偏移向量将此 PointD3D 结构进行仿射变换得到的结果。</returns>
        </member>
        <member name="M:Com.PointD3D.AffineTransformCopy(Com.Matrix)">
            <summary>
            返回按 Matrix 对象表示的 4x4 仿射矩阵（左矩阵）将此 PointD3D 结构进行仿射变换的 PointD3D 结构的新实例。
            </summary>
            <param name="matrixLeft">Matrix 对象，表示 4x4 仿射矩阵（左矩阵）。</param>
            <returns>PointD3D 结构，表示按 Matrix 对象表示的 4x4 仿射矩阵（左矩阵）将此 PointD3D 结构进行仿射变换得到的结果。</returns>
        </member>
        <member name="M:Com.PointD3D.AffineTransformCopy(Com.Matrix[])">
            <summary>
            返回按 Matrix 对象数组表示的 4x4 仿射矩阵（左矩阵）数组将此 PointD3D 结构进行仿射变换的 PointD3D 结构的新实例。
            </summary>
            <param name="matricesLeft">Matrix 对象数组，表示 4x4 仿射矩阵（左矩阵）数组。</param>
            <returns>PointD3D 结构，表示按 Matrix 对象数组表示的 4x4 仿射矩阵（左矩阵）数组将此 PointD3D 结构进行仿射变换得到的结果。</returns>
        </member>
        <member name="M:Com.PointD3D.AffineTransformCopy(System.Collections.Generic.List{Com.Matrix})">
            <summary>
            返回按 Matrix 对象列表表示的 4x4 仿射矩阵（左矩阵）列表将此 PointD3D 结构进行仿射变换的 PointD3D 结构的新实例。
            </summary>
            <param name="matricesLeft">Matrix 对象列表，表示 4x4 仿射矩阵（左矩阵）列表。</param>
            <returns>PointD3D 结构，表示按 Matrix 对象列表表示的 4x4 仿射矩阵（左矩阵）列表将此 PointD3D 结构进行仿射变换得到的结果。</returns>
        </member>
        <member name="M:Com.PointD3D.InverseAffineTransform(Com.PointD3D,Com.PointD3D,Com.PointD3D,Com.PointD3D)">
            <summary>
            按 PointD3D 结构表示的 X 基向量、Y 基向量、Z 基向量与偏移向量将此 PointD3D 结构进行逆仿射变换。
            </summary>
            <param name="ex">PointD3D 结构表示的 X 基向量。</param>
            <param name="ey">PointD3D 结构表示的 Y 基向量。</param>
            <param name="ez">PointD3D 结构表示的 Z 基向量。</param>
            <param name="offset">PointD3D 结构表示的偏移向量。</param>
        </member>
        <member name="M:Com.PointD3D.InverseAffineTransform(Com.Matrix)">
            <summary>
            按 Matrix 对象表示的 4x4 仿射矩阵（左矩阵）将此 PointD3D 结构进行逆仿射变换。
            </summary>
            <param name="matrixLeft">Matrix 对象，表示 4x4 仿射矩阵（左矩阵）。</param>
        </member>
        <member name="M:Com.PointD3D.InverseAffineTransform(Com.Matrix[])">
            <summary>
            按 Matrix 对象数组表示的 4x4 仿射矩阵（左矩阵）数组将此 PointD3D 结构进行逆仿射变换。
            </summary>
            <param name="matricesLeft">Matrix 对象数组，表示 4x4 仿射矩阵（左矩阵）数组。</param>
        </member>
        <member name="M:Com.PointD3D.InverseAffineTransform(System.Collections.Generic.List{Com.Matrix})">
            <summary>
            按 Matrix 对象列表表示的 4x4 仿射矩阵（左矩阵）列表将此 PointD3D 结构进行逆仿射变换。
            </summary>
            <param name="matricesLeft">Matrix 对象列表，表示 4x4 仿射矩阵（左矩阵）列表。</param>
        </member>
        <member name="M:Com.PointD3D.InverseAffineTransformCopy(Com.PointD3D,Com.PointD3D,Com.PointD3D,Com.PointD3D)">
            <summary>
            返回按 PointD3D 结构表示的 X 基向量、Y 基向量、Z 基向量与偏移向量将此 PointD3D 结构进行逆仿射变换的 PointD3D 结构的新实例。
            </summary>
            <param name="ex">PointD3D 结构表示的 X 基向量。</param>
            <param name="ey">PointD3D 结构表示的 Y 基向量。</param>
            <param name="ez">PointD3D 结构表示的 Z 基向量。</param>
            <param name="offset">PointD3D 结构表示的偏移向量。</param>
            <returns>PointD3D 结构，表示按 PointD3D 结构表示的 X 基向量、Y 基向量、Z 基向量与偏移向量将此 PointD3D 结构进行逆仿射变换得到的结果。</returns>
        </member>
        <member name="M:Com.PointD3D.InverseAffineTransformCopy(Com.Matrix)">
            <summary>
            返回按 Matrix 对象表示的 4x4 仿射矩阵（左矩阵）将此 PointD3D 结构进行逆仿射变换的 PointD3D 结构的新实例。
            </summary>
            <param name="matrixLeft">Matrix 对象，表示 4x4 仿射矩阵（左矩阵）。</param>
            <returns>PointD3D 结构，表示按 Matrix 对象表示的 4x4 仿射矩阵（左矩阵）将此 PointD3D 结构进行逆仿射变换得到的结果。</returns>
        </member>
        <member name="M:Com.PointD3D.InverseAffineTransformCopy(Com.Matrix[])">
            <summary>
            返回按 Matrix 对象数组表示的 4x4 仿射矩阵（左矩阵）数组将此 PointD3D 结构进行逆仿射变换的 PointD3D 结构的新实例。
            </summary>
            <param name="matricesLeft">Matrix 对象数组，表示 4x4 仿射矩阵（左矩阵）数组。</param>
            <returns>PointD3D 结构，表示按 Matrix 对象数组表示的 4x4 仿射矩阵（左矩阵）数组将此 PointD3D 结构进行逆仿射变换得到的结果。</returns>
        </member>
        <member name="M:Com.PointD3D.InverseAffineTransformCopy(System.Collections.Generic.List{Com.Matrix})">
            <summary>
            返回按 Matrix 对象列表表示的 4x4 仿射矩阵（左矩阵）列表将此 PointD3D 结构进行逆仿射变换的 PointD3D 结构的新实例。
            </summary>
            <param name="matricesLeft">Matrix 对象列表，表示 4x4 仿射矩阵（左矩阵）列表。</param>
            <returns>PointD3D 结构，表示按 Matrix 对象列表表示的 4x4 仿射矩阵（左矩阵）列表将此 PointD3D 结构进行逆仿射变换得到的结果。</returns>
        </member>
        <member name="M:Com.PointD3D.ProjectToXY(Com.PointD3D,System.Double)">
            <summary>
            返回将此 PointD3D 结构投影至平行于 XY 平面的投影面的 PointD 结构的新实例。
            </summary>
            <param name="prjCenter">PointD3D 结构，表示投影中心在投影面的正投影在原坐标系的坐标。</param>
            <param name="focalLength">双精度浮点数表示的焦距，平行于投影面的一维测度其真实大小与投影大小的比值等于其到投影面的距离与焦距的比值。</param>
            <returns>PointD 结构，表示将此 PointD3D 结构投影至平行于 XY 平面的投影面得到的结果。</returns>
        </member>
        <member name="M:Com.PointD3D.ProjectToYZ(Com.PointD3D,System.Double)">
            <summary>
            返回将此 PointD3D 结构投影至平行于 YZ 平面的投影面的 PointD 结构的新实例。
            </summary>
            <param name="prjCenter">PointD3D 结构，表示投影中心在投影面的正投影在原坐标系的坐标。</param>
            <param name="focalLength">双精度浮点数表示的焦距，平行于投影面的一维测度其真实大小与投影大小的比值等于其到投影面的距离与焦距的比值。</param>
            <returns>PointD 结构，表示将此 PointD3D 结构投影至平行于 YZ 平面的投影面得到的结果。</returns>
        </member>
        <member name="M:Com.PointD3D.ProjectToZX(Com.PointD3D,System.Double)">
            <summary>
            返回将此 PointD3D 结构投影至平行于 ZX 平面的投影面的 PointD 结构的新实例。
            </summary>
            <param name="prjCenter">PointD3D 结构，表示投影中心在投影面的正投影在原坐标系的坐标。</param>
            <param name="focalLength">双精度浮点数表示的焦距，平行于投影面的一维测度其真实大小与投影大小的比值等于其到投影面的距离与焦距的比值。</param>
            <returns>PointD 结构，表示将此 PointD3D 结构投影至平行于 ZX 平面的投影面得到的结果。</returns>
        </member>
        <member name="M:Com.PointD3D.ToColumnVector">
            <summary>
            返回将此 PointD3D 结构转换为列向量的 Vector 的新实例。
            </summary>
            <returns>Vector 对象，表示将此 PointD3D 结构转换为列向量得到的结果。</returns>
        </member>
        <member name="M:Com.PointD3D.ToRowVector">
            <summary>
            返回将此 PointD3D 结构转换为行向量的 Vector 的新实例。
            </summary>
            <returns>Vector 对象，表示将此 PointD3D 结构转换为行向量得到的结果。</returns>
        </member>
        <member name="M:Com.PointD3D.Equals(Com.PointD3D,Com.PointD3D)">
            <summary>
            判断两个 PointD3D 结构是否相等。
            </summary>
            <param name="left">用于比较的第一个 PointD3D 结构。</param>
            <param name="right">用于比较的第二个 PointD3D 结构。</param>
            <returns>布尔值，表示两个 PointD3D 结构是否相等。</returns>
        </member>
        <member name="M:Com.PointD3D.Compare(Com.PointD3D,Com.PointD3D)">
            <summary>
            比较两个 PointD3D 结构的次序。
            </summary>
            <param name="left">用于比较的第一个 PointD3D 结构。</param>
            <param name="right">用于比较的第二个 PointD3D 结构。</param>
            <returns>32 位整数，表示将两个 PointD3D 结构进行次序比较得到的结果。</returns>
        </member>
        <member name="M:Com.PointD3D.FromVector(Com.Vector)">
            <summary>
            返回将 Vector 对象转换为 PointD3D 结构的新实例。
            </summary>
            <param name="vector">Vector 对象。</param>
            <returns>PointD3D 结构，表示转换的结果。</returns>
        </member>
        <member name="M:Com.PointD3D.IdentityMatrix">
            <summary>
            返回单位矩阵，表示不对 PointD3D 结构进行仿射变换的 4x4 仿射矩阵（左矩阵）的 Matrix 的新实例。
            </summary>
            <returns>Matrix 对象，表示不对 PointD3D 结构进行仿射变换的 4x4 仿射矩阵（左矩阵）。</returns>
        </member>
        <member name="M:Com.PointD3D.OffsetMatrix(System.Int32,System.Double)">
            <summary>
            返回表示按双精度浮点数表示的位移将 PointD3D 结构在指定的基向量方向的分量平移指定的量的 4x4 仿射矩阵（左矩阵）的 Matrix 的新实例。
            </summary>
            <param name="index">索引，用于指定平移的分量所在方向的基向量。</param>
            <param name="d">双精度浮点数表示的位移。</param>
            <returns>Matrix 对象，表示按双精度浮点数表示的位移将 PointD3D 结构在指定的基向量方向的分量平移指定的量的 4x4 仿射矩阵（左矩阵）。</returns>
        </member>
        <member name="M:Com.PointD3D.OffsetMatrix(System.Double)">
            <summary>
            返回表示按双精度浮点数表示的位移将 PointD3D 结构的所有分量平移指定的量的 4x4 仿射矩阵（左矩阵）的 Matrix 的新实例。
            </summary>
            <param name="d">双精度浮点数表示的位移。</param>
            <returns>Matrix 对象，表示按双精度浮点数表示的位移将 PointD3D 结构的所有分量平移指定的量的 4x4 仿射矩阵（左矩阵）。</returns>
        </member>
        <member name="M:Com.PointD3D.OffsetMatrix(Com.PointD3D)">
            <summary>
            返回表示按 PointD3D 结构表示的位移将此 PointD3D 结构平移指定的量的 4x4 仿射矩阵（左矩阵）的 Matrix 的新实例。
            </summary>
            <param name="pt">PointD3D 结构表示的位移。</param>
            <returns>Matrix 对象，表示按 PointD3D 结构表示的位移将此 PointD3D 结构平移指定的量的 4x4 仿射矩阵（左矩阵）。</returns>
        </member>
        <member name="M:Com.PointD3D.OffsetMatrix(System.Double,System.Double,System.Double)">
            <summary>
            返回表示按双精度浮点数表示的 X 坐标位移、Y 坐标位移与 Z 坐标位移将 PointD3D 结构平移指定的量的 4x4 仿射矩阵（左矩阵）的 Matrix 的新实例。
            </summary>
            <param name="dx">双精度浮点数表示的 X 坐标位移。</param>
            <param name="dy">双精度浮点数表示的 Y 坐标位移。</param>
            <param name="dz">双精度浮点数表示的 Z 坐标位移。</param>
            <returns>Matrix 对象，表示按双精度浮点数表示的 X 坐标位移、Y 坐标位移与 Z 坐标位移将 PointD3D 结构平移指定的量的 4x4 仿射矩阵（左矩阵）。</returns>
        </member>
        <member name="M:Com.PointD3D.OffsetXMatrix(System.Double)">
            <summary>
            返回表示按双精度浮点数表示的位移将 PointD3D 结构在 X 轴的分量平移指定的量的 4x4 仿射矩阵（左矩阵）的 Matrix 的新实例。
            </summary>
            <param name="d">双精度浮点数表示的位移。</param>
            <returns>Matrix 对象，表示按双精度浮点数表示的位移将 PointD3D 结构在 X 轴的分量平移指定的量的 4x4 仿射矩阵（左矩阵）。</returns>
        </member>
        <member name="M:Com.PointD3D.OffsetYMatrix(System.Double)">
            <summary>
            返回表示按双精度浮点数表示的位移将 PointD3D 结构在 Y 轴的分量平移指定的量的 4x4 仿射矩阵（左矩阵）的 Matrix 的新实例。
            </summary>
            <param name="d">双精度浮点数表示的位移。</param>
            <returns>Matrix 对象，表示按双精度浮点数表示的位移将 PointD3D 结构在 Y 轴的分量平移指定的量的 4x4 仿射矩阵（左矩阵）。</returns>
        </member>
        <member name="M:Com.PointD3D.OffsetZMatrix(System.Double)">
            <summary>
            返回表示按双精度浮点数表示的位移将 PointD3D 结构在 Z 轴的分量平移指定的量的 4x4 仿射矩阵（左矩阵）的 Matrix 的新实例。
            </summary>
            <param name="d">双精度浮点数表示的位移。</param>
            <returns>Matrix 对象，表示按双精度浮点数表示的位移将 PointD3D 结构在 Z 轴的分量平移指定的量的 4x4 仿射矩阵（左矩阵）。</returns>
        </member>
        <member name="M:Com.PointD3D.ScaleMatrix(System.Int32,System.Double)">
            <summary>
            返回表示按双精度浮点数表示的缩放因数将 PointD3D 结构在指定的基向量方向的分量缩放指定的倍数的 4x4 仿射矩阵（左矩阵）的 Matrix 的新实例。
            </summary>
            <param name="index">索引，用于指定平移的分量所在方向的基向量。</param>
            <param name="s">双精度浮点数表示的缩放因数。</param>
            <returns>Matrix 对象，表示按双精度浮点数表示的缩放因数将 PointD3D 结构在指定的基向量方向的分量缩放指定的倍数的 4x4 仿射矩阵（左矩阵）。</returns>
        </member>
        <member name="M:Com.PointD3D.ScaleMatrix(System.Double)">
            <summary>
            返回表示按双精度浮点数表示的缩放因数将 PointD3D 结构的所有分量缩放指定的倍数的 4x4 仿射矩阵（左矩阵）的 Matrix 的新实例。
            </summary>
            <param name="s">双精度浮点数表示的缩放因数。</param>
            <returns>Matrix 对象，表示按双精度浮点数表示的缩放因数将 PointD3D 结构的所有分量缩放指定的倍数的 4x4 仿射矩阵（左矩阵）。</returns>
        </member>
        <member name="M:Com.PointD3D.ScaleMatrix(Com.PointD3D)">
            <summary>
            返回表示按 PointD3D 结构表示的缩放因数将 PointD3D 结构缩放指定的倍数的 4x4 仿射矩阵（左矩阵）的 Matrix 的新实例。
            </summary>
            <param name="pt">PointD3D 结构表示的缩放因数。</param>
            <returns>Matrix 对象，表示按 PointD3D 结构表示的缩放因数将 PointD3D 结构缩放指定的倍数的 4x4 仿射矩阵（左矩阵）。</returns>
        </member>
        <member name="M:Com.PointD3D.ScaleMatrix(System.Double,System.Double,System.Double)">
            <summary>
            返回表示按双精度浮点数表示的 X 坐标缩放因数、Y 坐标缩放因数与 Z 坐标缩放因数将 PointD3D 结构缩放指定的倍数的 4x4 仿射矩阵（左矩阵）的 Matrix 的新实例。
            </summary>
            <param name="sx">双精度浮点数表示的 X 坐标缩放因数。</param>
            <param name="sy">双精度浮点数表示的 Y 坐标缩放因数。</param>
            <param name="sz">双精度浮点数表示的 Z 坐标缩放因数。</param>
            <returns>Matrix 对象，表示按双精度浮点数表示的 X 坐标缩放因数、Y 坐标缩放因数与 Z 坐标缩放因数将 PointD3D 结构缩放指定的倍数的 4x4 仿射矩阵（左矩阵）。</returns>
        </member>
        <member name="M:Com.PointD3D.ScaleXMatrix(System.Double)">
            <summary>
            返回表示按双精度浮点数表示的缩放因数将 PointD3D 结构在 X 轴的分量缩放指定的倍数的 4x4 仿射矩阵（左矩阵）的 Matrix 的新实例。
            </summary>
            <param name="s">双精度浮点数表示的缩放因数。</param>
            <returns>Matrix 对象，表示按双精度浮点数表示的缩放因数将 PointD3D 结构在 X 轴的分量缩放指定的倍数的 4x4 仿射矩阵（左矩阵）。</returns>
        </member>
        <member name="M:Com.PointD3D.ScaleYMatrix(System.Double)">
            <summary>
            返回表示按双精度浮点数表示的缩放因数将 PointD3D 结构在 Y 轴的分量缩放指定的倍数的 4x4 仿射矩阵（左矩阵）的 Matrix 的新实例。
            </summary>
            <param name="s">双精度浮点数表示的缩放因数。</param>
            <returns>Matrix 对象，表示按双精度浮点数表示的缩放因数将 PointD3D 结构在 Y 轴的分量缩放指定的倍数的 4x4 仿射矩阵（左矩阵）。</returns>
        </member>
        <member name="M:Com.PointD3D.ScaleZMatrix(System.Double)">
            <summary>
            返回表示按双精度浮点数表示的缩放因数将 PointD3D 结构在 Z 轴的分量缩放指定的倍数的 4x4 仿射矩阵（左矩阵）的 Matrix 的新实例。
            </summary>
            <param name="s">双精度浮点数表示的缩放因数。</param>
            <returns>Matrix 对象，表示按双精度浮点数表示的缩放因数将 PointD3D 结构在 Z 轴的分量缩放指定的倍数的 4x4 仿射矩阵（左矩阵）。</returns>
        </member>
        <member name="M:Com.PointD3D.ReflectMatrix(System.Int32)">
            <summary>
            返回表示将 PointD3D 结构在指定的基向量方向的分量翻转的 4x4 仿射矩阵（左矩阵）的 Matrix 的新实例。
            </summary>
            <param name="index">索引，用于指定翻转的分量所在方向的基向量。</param>
            <returns>Matrix 对象，表示将 PointD3D 结构在指定的基向量方向的分量翻转的 4x4 仿射矩阵（左矩阵）。</returns>
        </member>
        <member name="M:Com.PointD3D.ReflectXMatrix">
            <summary>
            返回表示将 PointD3D 结构在 X 轴的分量翻转的 4x4 仿射矩阵（左矩阵）的 Matrix 的新实例。
            </summary>
            <returns>Matrix 对象，表示将 PointD3D 结构在 X 轴的分量翻转的 4x4 仿射矩阵（左矩阵）。</returns>
        </member>
        <member name="M:Com.PointD3D.ReflectYMatrix">
            <summary>
            返回表示将 PointD3D 结构在 Y 轴的分量翻转的 4x4 仿射矩阵（左矩阵）的 Matrix 的新实例。
            </summary>
            <returns>Matrix 对象，表示将 PointD3D 结构在 Y 轴的分量翻转的 4x4 仿射矩阵（左矩阵）。</returns>
        </member>
        <member name="M:Com.PointD3D.ReflectZMatrix">
            <summary>
            返回表示将 PointD3D 结构在 Z 轴的分量翻转的 4x4 仿射矩阵（左矩阵）的 Matrix 的新实例。
            </summary>
            <returns>Matrix 对象，表示将 PointD3D 结构在 Z 轴的分量翻转的 4x4 仿射矩阵（左矩阵）。</returns>
        </member>
        <member name="M:Com.PointD3D.ShearMatrix(System.Int32,System.Int32,System.Double)">
            <summary>
            返回表示用于错切 PointD3D 结构的 4x4 仿射矩阵（左矩阵）的 Matrix 的新实例。
            </summary>
            <param name="index1">索引，用于指定与错切方向同向的基向量。</param>
            <param name="index2">索引，用于指定与错切方向共面正交的基向量。</param>
            <param name="angle">双精度浮点数，表示此 PointD3D 结构沿索引 index1 指定的基向量方向且共面正交于 index2 指定的基向量方向错切的角度（弧度）。</param>
            <returns>Matrix 对象，表示用于错切 PointD3D 结构的 4x4 仿射矩阵（左矩阵）。</returns>
        </member>
        <member name="M:Com.PointD3D.ShearXYMatrix(System.Double)">
            <summary>
            返回表示按双精度浮点数表示的弧度将 PointD3D 结构在 XY 平面向 +X 轴错切指定的角度的 4x4 仿射矩阵（左矩阵）的 Matrix 的新实例。
            </summary>
            <param name="angle">双精度浮点数，表示此 PointD3D 结构在 XY 平面向 +X 轴错切的角度（弧度）。</param>
            <returns>Matrix 对象，表示按双精度浮点数表示的弧度将 PointD3D 结构在 XY 平面向 +X 轴错切指定的角度的 4x4 仿射矩阵（左矩阵）。</returns>
        </member>
        <member name="M:Com.PointD3D.ShearYXMatrix(System.Double)">
            <summary>
            返回表示按双精度浮点数表示的弧度将 PointD3D 结构在 XY 平面向 +Y 轴错切指定的角度的 4x4 仿射矩阵（左矩阵）的 Matrix 的新实例。
            </summary>
            <param name="angle">双精度浮点数，表示此 PointD3D 结构在 XY 平面向 +Y 轴错切的角度（弧度）。</param>
            <returns>Matrix 对象，表示按双精度浮点数表示的弧度将 PointD3D 结构在 XY 平面向 +Y 轴错切指定的角度的 4x4 仿射矩阵（左矩阵）。</returns>
        </member>
        <member name="M:Com.PointD3D.ShearYZMatrix(System.Double)">
            <summary>
            返回表示按双精度浮点数表示的弧度将 PointD3D 结构在 YZ 平面向 +Y 轴错切指定的角度的 4x4 仿射矩阵（左矩阵）的 Matrix 的新实例。
            </summary>
            <param name="angle">双精度浮点数，表示此 PointD3D 结构在 YZ 平面向 +Y 轴错切的角度（弧度）。</param>
            <returns>Matrix 对象，表示按双精度浮点数表示的弧度将 PointD3D 结构在 YZ 平面向 +Y 轴错切指定的角度的 4x4 仿射矩阵（左矩阵）。</returns>
        </member>
        <member name="M:Com.PointD3D.ShearZYMatrix(System.Double)">
            <summary>
            返回表示按双精度浮点数表示的弧度将 PointD3D 结构在 YZ 平面向 +Z 轴错切指定的角度的 4x4 仿射矩阵（左矩阵）的 Matrix 的新实例。
            </summary>
            <param name="angle">双精度浮点数，表示此 PointD3D 结构在 YZ 平面向 +Z 轴错切的角度（弧度）。</param>
            <returns>Matrix 对象，表示按双精度浮点数表示的弧度将 PointD3D 结构在 YZ 平面向 +Z 轴错切指定的角度的 4x4 仿射矩阵（左矩阵）。</returns>
        </member>
        <member name="M:Com.PointD3D.ShearZXMatrix(System.Double)">
            <summary>
            返回表示按双精度浮点数表示的弧度将 PointD3D 结构在 ZX 平面向 +Z 轴错切指定的角度的 4x4 仿射矩阵（左矩阵）的 Matrix 的新实例。
            </summary>
            <param name="angle">双精度浮点数，表示此 PointD3D 结构在 ZX 平面向 +Z 轴错切的角度（弧度）。</param>
            <returns>Matrix 对象，表示按双精度浮点数表示的弧度将 PointD3D 结构在 ZX 平面向 +Z 轴错切指定的角度的 4x4 仿射矩阵（左矩阵）。</returns>
        </member>
        <member name="M:Com.PointD3D.ShearXZMatrix(System.Double)">
            <summary>
            返回表示按双精度浮点数表示的弧度将 PointD3D 结构在 ZX 平面向 +X 轴错切指定的角度的 4x4 仿射矩阵（左矩阵）的 Matrix 的新实例。
            </summary>
            <param name="angle">双精度浮点数，表示此 PointD3D 结构在 ZX 平面向 +X 轴错切的角度（弧度）。</param>
            <returns>Matrix 对象，表示按双精度浮点数表示的弧度将 PointD3D 结构在 ZX 平面向 +X 轴错切指定的角度的 4x4 仿射矩阵（左矩阵）。</returns>
        </member>
        <member name="M:Com.PointD3D.RotateMatrix(System.Int32,System.Int32,System.Double)">
            <summary>
            返回表示用于旋转 PointD3D 结构的 4x4 仿射矩阵（左矩阵）的 Matrix 的新实例。
            </summary>
            <param name="index1">索引，用于指定构成旋转轨迹所在平面的第一个基向量。</param>
            <param name="index2">索引，用于指定构成旋转轨迹所在平面的第二个基向量。</param>
            <param name="angle">双精度浮点数，表示 PointD3D 结构绕索引 index1 与 index2 指定的基向量构成的平面的法向空间旋转的角度（弧度）（以索引 index1 指定的基向量为 0 弧度，从索引 index1 指定的基向量指向索引 index2 指定的基向量的方向为正方向）。</param>
            <returns>Matrix 对象，表示用于旋转 PointD3D 结构的 4x4 仿射矩阵（左矩阵）。</returns>
        </member>
        <member name="M:Com.PointD3D.RotateXMatrix(System.Double)">
            <summary>
            返回表示按双精度浮点数表示的弧度将 PointD3D 结构绕 X 轴旋转指定的角度的 4x4 仿射矩阵（左矩阵）的 Matrix 的新实例。
            </summary>
            <param name="angle">双精度浮点数，表示 PointD3D 结构绕 X 轴旋转的角度（弧度）（以 +Y 轴为 0 弧度，从 +Y 轴指向 +Z 轴的方向为正方向）。</param>
            <returns>Matrix 对象，表示按双精度浮点数表示的弧度将 PointD3D 结构绕 X 轴旋转指定的角度的 4x4 仿射矩阵（左矩阵）。</returns>
        </member>
        <member name="M:Com.PointD3D.RotateYMatrix(System.Double)">
            <summary>
            返回表示按双精度浮点数表示的弧度将 PointD3D 结构绕 Y 轴旋转指定的角度的 4x4 仿射矩阵（左矩阵）的 Matrix 的新实例。
            </summary>
            <param name="angle">双精度浮点数，表示 PointD3D 结构绕 Y 轴旋转的角度（弧度）（以 +Z 轴为 0 弧度，从 +Z 轴指向 +X 轴的方向为正方向）。</param>
            <returns>Matrix 对象，表示按双精度浮点数表示的弧度将 PointD3D 结构绕 Y 轴旋转指定的角度的 4x4 仿射矩阵（左矩阵）。</returns>
        </member>
        <member name="M:Com.PointD3D.RotateZMatrix(System.Double)">
            <summary>
            返回表示按双精度浮点数表示的弧度将 PointD3D 结构绕 Z 轴旋转指定的角度的 4x4 仿射矩阵（左矩阵）的 Matrix 的新实例。
            </summary>
            <param name="angle">双精度浮点数，表示 PointD3D 结构绕 Z 轴旋转的角度（弧度）（以 +X 轴为 0 弧度，从 +X 轴指向 +Y 轴的方向为正方向）。</param>
            <returns>Matrix 对象，表示按双精度浮点数表示的弧度将 PointD3D 结构绕 Z 轴旋转指定的角度的 4x4 仿射矩阵（左矩阵）。</returns>
        </member>
        <member name="M:Com.PointD3D.DistanceBetween(Com.PointD3D,Com.PointD3D)">
            <summary>
            返回两个 PointD3D 结构之间的距离。
            </summary>
            <param name="left">第一个 PointD3D 结构。</param>
            <param name="right">第二个 PointD3D 结构。</param>
            <returns>双精度浮点数，表示两个 PointD3D 结构之间的距离。</returns>
        </member>
        <member name="M:Com.PointD3D.AngleBetween(Com.PointD3D,Com.PointD3D)">
            <summary>
            返回两个 PointD3D 结构之间的夹角（弧度）。
            </summary>
            <param name="left">第一个 PointD3D 结构。</param>
            <param name="right">第二个 PointD3D 结构。</param>
            <returns>双精度浮点数，表示两个 PointD3D 结构之间的夹角（弧度）。</returns>
        </member>
        <member name="M:Com.PointD3D.DotProduct(Com.PointD3D,Com.PointD3D)">
            <summary>
            返回两个 PointD3D 结构的内积。
            </summary>
            <param name="left">第一个 PointD3D 结构。</param>
            <param name="right">第二个 PointD3D 结构。</param>
            <returns>双精度浮点数，表示两个 PointD3D 结构的内积。</returns>
        </member>
        <member name="M:Com.PointD3D.CrossProduct(Com.PointD3D,Com.PointD3D)">
            <summary>
            返回两个 PointD3D 结构的外积。该外积为一个三维向量，其所有分量的数值依次为 X 基向量、Y 基向量与 Z 基向量的系数。
            </summary>
            <param name="left">第一个 PointD3D 结构。</param>
            <param name="right">第二个 PointD3D 结构。</param>
            <returns>PointD3D 结构，表示两个 PointD3D 结构的外积。</returns>
        </member>
        <member name="M:Com.PointD3D.Sign(Com.PointD3D)">
            <summary>
            返回将 PointD3D 结构的所有分量取符号数得到的 PointD3D 结构的新实例。
            </summary>
            <param name="pt">PointD3D 结构，用于转换的结构。</param>
            <returns>PointD3D 结构，表示将 PointD3D 结构的所有分量取符号数得到的结果</returns>
        </member>
        <member name="M:Com.PointD3D.Abs(Com.PointD3D)">
            <summary>
            返回将 PointD3D 结构的所有分量取绝对值得到的 PointD3D 结构的新实例。
            </summary>
            <param name="pt">PointD3D 结构，用于转换的结构。</param>
            <returns>PointD3D 结构，表示将 PointD3D 结构的所有分量取绝对值得到的结果</returns>
        </member>
        <member name="M:Com.PointD3D.Ceiling(Com.PointD3D)">
            <summary>
            返回将 PointD3D 结构的所有分量舍入到较大的整数值得到的 PointD3D 结构的新实例。
            </summary>
            <param name="pt">PointD3D 结构，用于转换的结构。</param>
            <returns>PointD3D 结构，表示将 PointD3D 结构的所有分量舍入到较大的整数值得到的结果</returns>
        </member>
        <member name="M:Com.PointD3D.Floor(Com.PointD3D)">
            <summary>
            返回将 PointD3D 结构的所有分量舍入到较小的整数值得到的 PointD3D 结构的新实例。
            </summary>
            <param name="pt">PointD3D 结构，用于转换的结构。</param>
            <returns>PointD3D 结构，表示将 PointD3D 结构的所有分量舍入到较小的整数值得到的结果</returns>
        </member>
        <member name="M:Com.PointD3D.Round(Com.PointD3D)">
            <summary>
            返回将 PointD3D 结构的所有分量舍入到最接近的整数值得到的 PointD3D 结构的新实例。
            </summary>
            <param name="pt">PointD3D 结构，用于转换的结构。</param>
            <returns>PointD3D 结构，表示将 PointD3D 结构的所有分量舍入到最接近的整数值得到的结果</returns>
        </member>
        <member name="M:Com.PointD3D.Truncate(Com.PointD3D)">
            <summary>
            返回将 PointD3D 结构的所有分量截断小数部分取整得到的 PointD3D 结构的新实例。
            </summary>
            <param name="pt">PointD3D 结构，用于转换的结构。</param>
            <returns>PointD3D 结构，表示将 PointD3D 结构的所有分量截断小数部分取整得到的结果</returns>
        </member>
        <member name="M:Com.PointD3D.Max(Com.PointD3D,Com.PointD3D)">
            <summary>
            返回将两个 PointD3D 结构的所有分量分别取最大值得到的 PointD3D 结构的新实例。
            </summary>
            <param name="left">PointD3D 结构，用于比较的第一个结构。</param>
            <param name="right">PointD3D 结构，用于比较的第二个结构。</param>
            <returns>PointD3D 结构，表示将两个 PointD3D 结构的所有分量分别取最大值得到的结果</returns>
        </member>
        <member name="M:Com.PointD3D.Min(Com.PointD3D,Com.PointD3D)">
            <summary>
            返回将两个 PointD3D 结构的所有分量分别取最小值得到的 PointD3D 结构的新实例。
            </summary>
            <param name="left">PointD3D 结构，用于比较的第一个结构。</param>
            <param name="right">PointD3D 结构，用于比较的第二个结构。</param>
            <returns>PointD3D 结构，表示将两个 PointD3D 结构的所有分量分别取最小值得到的结果</returns>
        </member>
        <member name="M:Com.PointD3D.op_Equality(Com.PointD3D,Com.PointD3D)">
            <summary>
            判断两个 PointD3D 结构是否相等。
            </summary>
            <param name="left">运算符左侧比较的 PointD3D 结构。</param>
            <param name="right">运算符右侧比较的 PointD3D 结构。</param>
            <returns>布尔值，表示两个 PointD3D 结构是否相等。</returns>
        </member>
        <member name="M:Com.PointD3D.op_Inequality(Com.PointD3D,Com.PointD3D)">
            <summary>
            判断两个 PointD3D 结构是否不相等。
            </summary>
            <param name="left">运算符左侧比较的 PointD3D 结构。</param>
            <param name="right">运算符右侧比较的 PointD3D 结构。</param>
            <returns>布尔值，表示两个 PointD3D 结构是否不相等。</returns>
        </member>
        <member name="M:Com.PointD3D.op_LessThan(Com.PointD3D,Com.PointD3D)">
            <summary>
            判断两个 PointD3D 结构的字典序是否前者小于后者。
            </summary>
            <param name="left">运算符左侧比较的 PointD3D 结构。</param>
            <param name="right">运算符右侧比较的 PointD3D 结构。</param>
            <returns>布尔值，表示两个 PointD3D 结构的字典序是否前者小于后者。</returns>
        </member>
        <member name="M:Com.PointD3D.op_GreaterThan(Com.PointD3D,Com.PointD3D)">
            <summary>
            判断两个 PointD3D 结构的字典序是否前者大于后者。
            </summary>
            <param name="left">运算符左侧比较的 PointD3D 结构。</param>
            <param name="right">运算符右侧比较的 PointD3D 结构。</param>
            <returns>布尔值，表示两个 PointD3D 结构的字典序是否前者大于后者。</returns>
        </member>
        <member name="M:Com.PointD3D.op_LessThanOrEqual(Com.PointD3D,Com.PointD3D)">
            <summary>
            判断两个 PointD3D 结构的字典序是否前者小于或等于后者。
            </summary>
            <param name="left">运算符左侧比较的 PointD3D 结构。</param>
            <param name="right">运算符右侧比较的 PointD3D 结构。</param>
            <returns>布尔值，表示两个 PointD3D 结构的字典序是否前者小于或等于后者。</returns>
        </member>
        <member name="M:Com.PointD3D.op_GreaterThanOrEqual(Com.PointD3D,Com.PointD3D)">
            <summary>
            判断两个 PointD3D 结构的字典序是否前者大于或等于后者。
            </summary>
            <param name="left">运算符左侧比较的 PointD3D 结构。</param>
            <param name="right">运算符右侧比较的 PointD3D 结构。</param>
            <returns>布尔值，表示两个 PointD3D 结构的字典序是否前者大于或等于后者。</returns>
        </member>
        <member name="M:Com.PointD3D.op_UnaryPlus(Com.PointD3D)">
            <summary>
            返回在 PointD3D 结构的所有分量前添加正号得到的 PointD3D 结构的新实例。
            </summary>
            <param name="pt">运算符右侧的 PointD3D 结构。</param>
            <returns>PointD3D 结构，表示在 PointD3D 结构的所有分量前添加正号得到的结果。</returns>
        </member>
        <member name="M:Com.PointD3D.op_UnaryNegation(Com.PointD3D)">
            <summary>
            返回在 PointD3D 结构的所有分量前添加负号得到的 PointD3D 结构的新实例。
            </summary>
            <param name="pt">运算符右侧的 PointD3D 结构。</param>
            <returns>PointD3D 结构，表示在 PointD3D 结构的所有分量前添加负号得到的结果。</returns>
        </member>
        <member name="M:Com.PointD3D.op_Addition(Com.PointD3D,System.Double)">
            <summary>
            返回将 PointD3D 结构的所有分量与双精度浮点数相加得到的 PointD3D 结构的新实例。
            </summary>
            <param name="pt">PointD3D 结构，表示被加数。</param>
            <param name="n">双精度浮点数，表示加数。</param>
            <returns>PointD3D 结构，表示将 PointD3D 结构的所有分量与双精度浮点数相加得到的结果。</returns>
        </member>
        <member name="M:Com.PointD3D.op_Addition(System.Double,Com.PointD3D)">
            <summary>
            返回将双精度浮点数与 PointD3D 结构的所有分量相加得到的 PointD3D 结构的新实例。
            </summary>
            <param name="n">双精度浮点数，表示被加数。</param>
            <param name="pt">PointD3D 结构，表示加数。</param>
            <returns>PointD3D 结构，表示将双精度浮点数与 PointD3D 结构的所有分量相加得到的结果。</returns>
        </member>
        <member name="M:Com.PointD3D.op_Addition(Com.PointD3D,Com.PointD3D)">
            <summary>
            返回将 PointD3D 结构与 PointD3D 结构的所有分量对应相加得到的 PointD3D 结构的新实例。
            </summary>
            <param name="left">PointD3D 结构，表示被加数。</param>
            <param name="right">PointD3D 结构，表示加数。</param>
            <returns>PointD3D 结构，表示将 PointD3D 结构与 PointD3D 结构的所有分量对应相加得到的结果。</returns>
        </member>
        <member name="M:Com.PointD3D.op_Subtraction(Com.PointD3D,System.Double)">
            <summary>
            返回将 PointD3D 结构的所有分量与双精度浮点数相减得到的 PointD3D 结构的新实例。
            </summary>
            <param name="pt">PointD3D 结构，表示被减数。</param>
            <param name="n">双精度浮点数，表示减数。</param>
            <returns>PointD3D 结构，表示将 PointD3D 结构的所有分量与双精度浮点数相减得到的结果。</returns>
        </member>
        <member name="M:Com.PointD3D.op_Subtraction(System.Double,Com.PointD3D)">
            <summary>
            返回将双精度浮点数与 PointD3D 结构的所有分量相减得到的 PointD3D 结构的新实例。
            </summary>
            <param name="n">双精度浮点数，表示被减数。</param>
            <param name="pt">PointD3D 结构，表示减数。</param>
            <returns>PointD3D 结构，表示将双精度浮点数与 PointD3D 结构的所有分量相减得到的结果。</returns>
        </member>
        <member name="M:Com.PointD3D.op_Subtraction(Com.PointD3D,Com.PointD3D)">
            <summary>
            返回将 PointD3D 结构与 PointD3D 结构的所有分量对应相减得到的 PointD3D 结构的新实例。
            </summary>
            <param name="left">PointD3D 结构，表示被减数。</param>
            <param name="right">PointD3D 结构，表示减数。</param>
            <returns>PointD3D 结构，表示将 PointD3D 结构与 PointD3D 结构的所有分量对应相减得到的结果。</returns>
        </member>
        <member name="M:Com.PointD3D.op_Multiply(Com.PointD3D,System.Double)">
            <summary>
            返回将 PointD3D 结构的所有分量与双精度浮点数相乘得到的 PointD3D 结构的新实例。
            </summary>
            <param name="pt">PointD3D 结构，表示被乘数。</param>
            <param name="n">双精度浮点数，表示乘数。</param>
            <returns>PointD3D 结构，表示将 PointD3D 结构的所有分量与双精度浮点数相乘得到的结果。</returns>
        </member>
        <member name="M:Com.PointD3D.op_Multiply(System.Double,Com.PointD3D)">
            <summary>
            返回将双精度浮点数与 PointD3D 结构的所有分量相乘得到的 PointD3D 结构的新实例。
            </summary>
            <param name="n">双精度浮点数，表示被乘数。</param>
            <param name="pt">PointD3D 结构，表示乘数。</param>
            <returns>PointD3D 结构，表示将双精度浮点数与 PointD3D 结构的所有分量相乘得到的结果。</returns>
        </member>
        <member name="M:Com.PointD3D.op_Multiply(Com.PointD3D,Com.PointD3D)">
            <summary>
            返回将 PointD3D 结构与 PointD3D 结构的所有分量对应相乘得到的 PointD3D 结构的新实例。
            </summary>
            <param name="left">PointD3D 结构，表示被乘数。</param>
            <param name="right">PointD3D 结构，表示乘数。</param>
            <returns>PointD3D 结构，表示将 PointD3D 结构与 PointD3D 结构的所有分量对应相乘得到的结果。</returns>
        </member>
        <member name="M:Com.PointD3D.op_Division(Com.PointD3D,System.Double)">
            <summary>
            返回将 PointD3D 结构的所有分量与双精度浮点数相除得到的 PointD3D 结构的新实例。
            </summary>
            <param name="pt">PointD3D 结构，表示被除数。</param>
            <param name="n">双精度浮点数，表示除数。</param>
            <returns>PointD3D 结构，表示将 PointD3D 结构的所有分量与双精度浮点数相除得到的结果。</returns>
        </member>
        <member name="M:Com.PointD3D.op_Division(System.Double,Com.PointD3D)">
            <summary>
            返回将双精度浮点数与 PointD3D 结构的所有分量相除得到的 PointD3D 结构的新实例。
            </summary>
            <param name="n">双精度浮点数，表示被除数。</param>
            <param name="pt">PointD3D 结构，表示除数。</param>
            <returns>PointD3D 结构，表示将双精度浮点数与 PointD3D 结构的所有分量相除得到的结果。</returns>
        </member>
        <member name="M:Com.PointD3D.op_Division(Com.PointD3D,Com.PointD3D)">
            <summary>
            返回将 PointD3D 结构与 PointD3D 结构的所有分量对应相除得到的 PointD3D 结构的新实例。
            </summary>
            <param name="left">PointD3D 结构，表示被除数。</param>
            <param name="right">PointD3D 结构，表示除数。</param>
            <returns>PointD3D 结构，表示将 PointD3D 结构与 PointD3D 结构的所有分量对应相除得到的结果。</returns>
        </member>
        <member name="M:Com.PointD3D.op_Implicit(System.ValueTuple{System.Double,System.Double,System.Double})~Com.PointD3D">
            <summary>
            将指定的值元组隐式转换为 PointD3D 结构。
            </summary>
            <param name="tuple">用于转换的值元组。</param>
            <returns>PointD3D 结构，表示隐式转换的结果。</returns>
        </member>
        <member name="M:Com.PointD3D.op_Implicit(Com.PointD3D)~System.ValueTuple{System.Double,System.Double,System.Double}">
            <summary>
            将指定的 PointD3D 结构隐式转换为值元组。
            </summary>
            <param name="pt">用于转换的 PointD3D 结构。</param>
            <returns>值元组，表示隐式转换的结果。</returns>
        </member>
        <member name="T:Com.PointD4D">
            <summary>
            以一组有序的双精度浮点数表示的四维直角坐标系坐标。
            </summary>
        </member>
        <member name="M:Com.PointD4D.#ctor(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            使用双精度浮点数表示的 X 坐标、Y 坐标、Z 坐标与 U 坐标初始化 PointD4D 结构的新实例。
            </summary>
            <param name="x">双精度浮点数表示的 X 坐标。</param>
            <param name="y">双精度浮点数表示的 Y 坐标。</param>
            <param name="z">双精度浮点数表示的 Z 坐标。</param>
            <param name="u">双精度浮点数表示的 U 坐标。</param>
        </member>
        <member name="F:Com.PointD4D.Zero">
            <summary>
            表示零向量的 PointD4D 结构的实例。
            </summary>
        </member>
        <member name="F:Com.PointD4D.NaN">
            <summary>
            表示所有分量为非数字的 PointD4D 结构的实例。
            </summary>
        </member>
        <member name="F:Com.PointD4D.Ex">
            <summary>
            表示 X 基向量的 PointD4D 结构的实例。
            </summary>
        </member>
        <member name="F:Com.PointD4D.Ey">
            <summary>
            表示 Y 基向量的 PointD4D 结构的实例。
            </summary>
        </member>
        <member name="F:Com.PointD4D.Ez">
            <summary>
            表示 Z 基向量的 PointD4D 结构的实例。
            </summary>
        </member>
        <member name="F:Com.PointD4D.Eu">
            <summary>
            表示 U 基向量的 PointD4D 结构的实例。
            </summary>
        </member>
        <member name="P:Com.PointD4D.Item(System.Int32)">
            <summary>
            获取或设置此 PointD4D 结构在指定的基向量方向的分量。
            </summary>
            <param name="index">索引。</param>
        </member>
        <member name="P:Com.PointD4D.X">
            <summary>
            获取或设置此 PointD4D 结构在 X 轴的分量。
            </summary>
        </member>
        <member name="P:Com.PointD4D.Y">
            <summary>
            获取或设置此 PointD4D 结构在 Y 轴的分量。
            </summary>
        </member>
        <member name="P:Com.PointD4D.Z">
            <summary>
            获取或设置此 PointD4D 结构在 Z 轴的分量。
            </summary>
        </member>
        <member name="P:Com.PointD4D.U">
            <summary>
            获取或设置此 PointD4D 结构在 U 轴的分量。
            </summary>
        </member>
        <member name="P:Com.PointD4D.Dimension">
            <summary>
            获取此 PointD4D 结构的维度。
            </summary>
        </member>
        <member name="P:Com.PointD4D.IsEmpty">
            <summary>
            获取表示此 PointD4D 结构是否为空向量的布尔值。
            </summary>
        </member>
        <member name="P:Com.PointD4D.IsZero">
            <summary>
            获取表示此 PointD4D 结构是否为零向量的布尔值。
            </summary>
        </member>
        <member name="P:Com.PointD4D.IsReadOnly">
            <summary>
            获取表示此 PointD4D 结构是否只读的布尔值。
            </summary>
        </member>
        <member name="P:Com.PointD4D.IsFixedSize">
            <summary>
            获取表示此 PointD4D 结构是否具有固定的维度的布尔值。
            </summary>
        </member>
        <member name="P:Com.PointD4D.IsNaN">
            <summary>
            获取表示此 PointD4D 结构是否包含非数字分量的布尔值。
            </summary>
        </member>
        <member name="P:Com.PointD4D.IsInfinity">
            <summary>
            获取表示此 PointD4D 结构是否包含无穷大分量的布尔值。
            </summary>
        </member>
        <member name="P:Com.PointD4D.IsNaNOrInfinity">
            <summary>
            获取表示此 PointD4D 结构是否包含非数字或无穷大分量的布尔值。
            </summary>
        </member>
        <member name="P:Com.PointD4D.Module">
            <summary>
            获取此 PointD4D 结构的模。
            </summary>
        </member>
        <member name="P:Com.PointD4D.ModuleSquared">
            <summary>
            获取此 PointD4D 结构的模的平方。
            </summary>
        </member>
        <member name="P:Com.PointD4D.Opposite">
            <summary>
            获取此 PointD4D 结构的相反向量。
            </summary>
        </member>
        <member name="P:Com.PointD4D.Normalize">
            <summary>
            获取此 PointD4D 结构的规范化向量。
            </summary>
        </member>
        <member name="P:Com.PointD4D.XYZ">
            <summary>
            获取或设置此 PointD4D 结构在 XYZ 空间的分量。
            </summary>
        </member>
        <member name="P:Com.PointD4D.YZU">
            <summary>
            获取或设置此 PointD4D 结构在 YZU 空间的分量。
            </summary>
        </member>
        <member name="P:Com.PointD4D.ZUX">
            <summary>
            获取或设置此 PointD4D 结构在 ZUX 空间的分量。
            </summary>
        </member>
        <member name="P:Com.PointD4D.UXY">
            <summary>
            获取或设置此 PointD4D 结构在 UXY 空间的分量。
            </summary>
        </member>
        <member name="P:Com.PointD4D.AngleFromX">
            <summary>
            获取此 PointD4D 结构与 X 轴之间的夹角（弧度）。
            </summary>
        </member>
        <member name="P:Com.PointD4D.AngleFromY">
            <summary>
            获取此 PointD4D 结构与 Y 轴之间的夹角（弧度）。
            </summary>
        </member>
        <member name="P:Com.PointD4D.AngleFromZ">
            <summary>
            获取此 PointD4D 结构与 Z 轴之间的夹角（弧度）。
            </summary>
        </member>
        <member name="P:Com.PointD4D.AngleFromU">
            <summary>
            获取此 PointD4D 结构与 U 轴之间的夹角（弧度）。
            </summary>
        </member>
        <member name="P:Com.PointD4D.AngleFromXYZ">
            <summary>
            获取此 PointD4D 结构与 XYZ 空间之间的夹角（弧度）。
            </summary>
        </member>
        <member name="P:Com.PointD4D.AngleFromYZU">
            <summary>
            获取此 PointD4D 结构与 YZU 空间之间的夹角（弧度）。
            </summary>
        </member>
        <member name="P:Com.PointD4D.AngleFromZUX">
            <summary>
            获取此 PointD4D 结构与 ZUX 空间之间的夹角（弧度）。
            </summary>
        </member>
        <member name="P:Com.PointD4D.AngleFromUXY">
            <summary>
            获取此 PointD4D 结构与 UXY 空间之间的夹角（弧度）。
            </summary>
        </member>
        <member name="M:Com.PointD4D.Equals(System.Object)">
            <summary>
            判断此 PointD4D 结构是否与指定的对象相等。
            </summary>
            <param name="obj">用于比较的对象。</param>
            <returns>布尔值，表示此 PointD4D 结构是否与指定的对象相等。</returns>
        </member>
        <member name="M:Com.PointD4D.GetHashCode">
            <summary>
            返回此 PointD4D 结构的哈希代码。
            </summary>
            <returns>32 位整数，表示此 PointD4D 结构的哈希代码。</returns>
        </member>
        <member name="M:Com.PointD4D.ToString">
            <summary>
            将此 PointD4D 结构转换为字符串。
            </summary>
            <returns>字符串，表示此 PointD4D 结构的字符串形式。</returns>
        </member>
        <member name="M:Com.PointD4D.Equals(Com.PointD4D)">
            <summary>
            判断此 PointD4D 结构是否与指定的 PointD4D 结构相等。
            </summary>
            <param name="pt">用于比较的 PointD4D 结构。</param>
            <returns>布尔值，表示此 PointD4D 结构是否与指定的 PointD4D 结构相等。</returns>
        </member>
        <member name="M:Com.PointD4D.CompareTo(System.Object)">
            <summary>
            将此 PointD4D 结构与指定的对象进行次序比较。
            </summary>
            <param name="obj">用于比较的对象。</param>
            <returns>32 位整数，表示将此 PointD4D 结构与指定的对象进行次序比较得到的结果。</returns>
        </member>
        <member name="M:Com.PointD4D.CompareTo(Com.PointD4D)">
            <summary>
            将此 PointD4D 结构与指定的 PointD4D 结构进行次序比较。
            </summary>
            <param name="pt">用于比较的 PointD4D 结构。</param>
            <returns>32 位整数，表示将此 PointD4D 结构与指定的 PointD4D 结构进行次序比较得到的结果。</returns>
        </member>
        <member name="M:Com.PointD4D.IndexOf(System.Double)">
            <summary>
            遍历此 PointD4D 结构的所有分量并返回第一个与指定值相等的分量的索引。
            </summary>
            <param name="item">用于检索的值。</param>
            <returns>32 位整数，表示第一个与指定值相等的分量的索引。</returns>
        </member>
        <member name="M:Com.PointD4D.IndexOf(System.Double,System.Int32)">
            <summary>
            从指定的索引开始遍历此 PointD4D 结构的所有分量并返回第一个与指定值相等的分量的索引。
            </summary>
            <param name="item">用于检索的值。</param>
            <param name="startIndex">起始索引。</param>
            <returns>32 位整数，表示第一个与指定值相等的分量的索引。</returns>
        </member>
        <member name="M:Com.PointD4D.IndexOf(System.Double,System.Int32,System.Int32)">
            <summary>
            从指定的索引开始遍历此 PointD4D 结构指定数量的分量并返回第一个与指定值相等的分量的索引。
            </summary>
            <param name="item">用于检索的值。</param>
            <param name="startIndex">起始索引。</param>
            <param name="count">遍历的分量数量。</param>
            <returns>32 位整数，表示第一个与指定值相等的分量的索引。</returns>
        </member>
        <member name="M:Com.PointD4D.LastIndexOf(System.Double)">
            <summary>
            逆序遍历此 PointD4D 结构的所有分量并返回第一个与指定值相等的分量的索引。
            </summary>
            <param name="item">用于检索的值。</param>
            <returns>32 位整数，表示第一个与指定值相等的分量的索引。</returns>
        </member>
        <member name="M:Com.PointD4D.LastIndexOf(System.Double,System.Int32)">
            <summary>
            从指定的索引开始逆序遍历此 PointD4D 结构的所有分量并返回第一个与指定值相等的分量的索引。
            </summary>
            <param name="item">用于检索的值。</param>
            <param name="startIndex">起始索引。</param>
            <returns>32 位整数，表示第一个与指定值相等的分量的索引。</returns>
        </member>
        <member name="M:Com.PointD4D.LastIndexOf(System.Double,System.Int32,System.Int32)">
            <summary>
            从指定的索引开始逆序遍历此 PointD4D 结构指定数量的分量并返回第一个与指定值相等的分量的索引。
            </summary>
            <param name="item">用于检索的值。</param>
            <param name="startIndex">起始索引。</param>
            <param name="count">遍历的分量数量。</param>
            <returns>32 位整数，表示第一个与指定值相等的分量的索引。</returns>
        </member>
        <member name="M:Com.PointD4D.Contains(System.Double)">
            <summary>
            遍历此 PointD4D 结构的所有分量并返回表示是否存在与指定值相等的分量的布尔值。
            </summary>
            <param name="item">用于检索的值。</param>
            <returns>布尔值，表示是否存在与指定值相等的分量。</returns>
        </member>
        <member name="M:Com.PointD4D.ToArray">
            <summary>
            将此 PointD4D 结构转换为双精度浮点数数组。
            </summary>
            <returns>双精度浮点数数组，数组元素表示此 PointD4D 结构的分量。</returns>
        </member>
        <member name="M:Com.PointD4D.ToList">
            <summary>
            将此 PointD4D 结构转换为双精度浮点数列表。
            </summary>
            <returns>双精度浮点数列表，列表元素表示此 PointD4D 结构的分量。</returns>
        </member>
        <member name="M:Com.PointD4D.CopyTo(System.Double[],System.Int32)">
            <summary>
            将此 PointD4D 结构的所有分量复制到双精度浮点数数组中。
            </summary>
            <param name="array">双精度浮点数数组。</param>
            <param name="index">双精度浮点数数组的起始索引。</param>
        </member>
        <member name="M:Com.PointD4D.ToSpherical">
            <summary>
            返回将此 PointD4D 结构表示的直角坐标系坐标转换为超球坐标系坐标的 PointD4D 结构的新实例。
            </summary>
            <returns>PointD4D 结构，表示将此 PointD4D 结构表示的直角坐标系坐标转换为超球坐标系坐标得到的结果。</returns>
        </member>
        <member name="M:Com.PointD4D.ToCartesian">
            <summary>
            返回将此 PointD4D 结构表示的超球坐标系坐标转换为直角坐标系坐标的 PointD4D 结构的新实例。
            </summary>
            <returns>PointD4D 结构，表示将此 PointD4D 结构表示的超球坐标系坐标转换为直角坐标系坐标得到的结果。</returns>
        </member>
        <member name="M:Com.PointD4D.DistanceFrom(Com.PointD4D)">
            <summary>
            返回此 PointD4D 结构与指定的 PointD4D 结构之间的距离。
            </summary>
            <param name="pt">PointD4D 结构，表示另一个向量。</param>
            <returns>双精度浮点数，表示此 PointD4D 结构与指定的 PointD4D 结构之间的距离。</returns>
        </member>
        <member name="M:Com.PointD4D.AngleFrom(Com.PointD4D)">
            <summary>
            返回此 PointD4D 结构与指定的 PointD4D 结构之间的夹角（弧度）。
            </summary>
            <param name="pt">PointD4D 结构，表示另一个向量。</param>
            <returns>双精度浮点数，表示此 PointD4D 结构与指定的 PointD4D 结构之间的夹角（弧度）。</returns>
        </member>
        <member name="M:Com.PointD4D.Offset(System.Int32,System.Double)">
            <summary>
            按双精度浮点数表示的位移将此 PointD4D 结构在指定的基向量方向的分量平移指定的量。
            </summary>
            <param name="index">索引，用于指定平移的分量所在方向的基向量。</param>
            <param name="d">双精度浮点数表示的位移。</param>
        </member>
        <member name="M:Com.PointD4D.Offset(System.Double)">
            <summary>
            按双精度浮点数表示的位移将此 PointD4D 结构的所有分量平移指定的量。
            </summary>
            <param name="d">双精度浮点数表示的位移。</param>
        </member>
        <member name="M:Com.PointD4D.Offset(Com.PointD4D)">
            <summary>
            按 PointD4D 结构表示的位移将此 PointD4D 结构平移指定的量。
            </summary>
            <param name="pt">PointD4D 结构表示的位移。</param>
        </member>
        <member name="M:Com.PointD4D.Offset(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            按双精度浮点数表示的 X 坐标位移、Y 坐标位移、Z 坐标位移与 U 坐标位移将此 PointD4D 结构平移指定的量。
            </summary>
            <param name="dx">双精度浮点数表示的 X 坐标位移。</param>
            <param name="dy">双精度浮点数表示的 Y 坐标位移。</param>
            <param name="dz">双精度浮点数表示的 Z 坐标位移。</param>
            <param name="du">双精度浮点数表示的 U 坐标位移。</param>
        </member>
        <member name="M:Com.PointD4D.OffsetCopy(System.Int32,System.Double)">
            <summary>
            返回按双精度浮点数表示的位移将此 PointD4D 结构在指定的基向量方向的分量平移指定的量的 PointD4D 结构的新实例。
            </summary>
            <param name="index">索引，用于指定平移的分量所在方向的基向量。</param>
            <param name="d">双精度浮点数表示的位移。</param>
            <returns>PointD4D 结构，表示按双精度浮点数表示的位移将此 PointD4D 结构在指定的基向量方向的分量平移指定的量得到的结果。</returns>
        </member>
        <member name="M:Com.PointD4D.OffsetCopy(System.Double)">
            <summary>
            返回按双精度浮点数表示的位移将此 PointD4D 结构的所有分量平移指定的量的 PointD4D 结构的新实例。
            </summary>
            <param name="d">双精度浮点数表示的位移。</param>
            <returns>PointD4D 结构，表示按双精度浮点数表示的位移将此 PointD4D 结构的所有分量平移指定的量得到的结果。</returns>
        </member>
        <member name="M:Com.PointD4D.OffsetCopy(Com.PointD4D)">
            <summary>
            返回按 PointD4D 结构表示的位移将此 PointD4D 结构平移指定的量的 PointD4D 结构的新实例。
            </summary>
            <param name="pt">PointD4D 结构表示的位移。</param>
            <returns>PointD4D 结构，表示按 PointD4D 结构表示的位移将此 PointD4D 结构平移指定的量得到的结果。</returns>
        </member>
        <member name="M:Com.PointD4D.OffsetCopy(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            返回按双精度浮点数表示的 X 坐标位移、Y 坐标位移、Z 坐标位移与 U 坐标位移将此 PointD4D 结构平移指定的量的 PointD4D 结构的新实例。
            </summary>
            <param name="dx">双精度浮点数表示的 X 坐标位移。</param>
            <param name="dy">双精度浮点数表示的 Y 坐标位移。</param>
            <param name="dz">双精度浮点数表示的 Z 坐标位移。</param>
            <param name="du">双精度浮点数表示的 U 坐标位移。</param>
            <returns>PointD4D 结构，表示按双精度浮点数表示的 X 坐标位移、Y 坐标位移、Z 坐标位移与 U 坐标位移将此 PointD4D 结构平移指定的量得到的结果。</returns>
        </member>
        <member name="M:Com.PointD4D.Scale(System.Int32,System.Double)">
            <summary>
            按双精度浮点数表示的缩放因数将此 PointD4D 结构在指定的基向量方向的分量缩放指定的倍数。
            </summary>
            <param name="index">索引，用于指定缩放的分量所在方向的基向量。</param>
            <param name="s">双精度浮点数表示的缩放因数。</param>
        </member>
        <member name="M:Com.PointD4D.Scale(System.Double)">
            <summary>
            按双精度浮点数表示的缩放因数将此 PointD4D 结构的所有分量缩放指定的倍数。
            </summary>
            <param name="s">双精度浮点数表示的缩放因数。</param>
        </member>
        <member name="M:Com.PointD4D.Scale(Com.PointD4D)">
            <summary>
            按 PointD4D 结构表示的缩放因数将此 PointD4D 结构缩放指定的倍数。
            </summary>
            <param name="pt">PointD4D 结构表示的缩放因数。</param>
        </member>
        <member name="M:Com.PointD4D.Scale(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            按双精度浮点数表示的 X 坐标缩放因数、Y 坐标缩放因数、Z 坐标缩放因数与 U 坐标缩放因数将此 PointD4D 结构缩放指定的倍数。
            </summary>
            <param name="sx">双精度浮点数表示的 X 坐标缩放因数。</param>
            <param name="sy">双精度浮点数表示的 Y 坐标缩放因数。</param>
            <param name="sz">双精度浮点数表示的 Z 坐标缩放因数。</param>
            <param name="su">双精度浮点数表示的 U 坐标缩放因数。</param>
        </member>
        <member name="M:Com.PointD4D.ScaleCopy(System.Int32,System.Double)">
            <summary>
            返回按双精度浮点数表示的缩放因数将此 PointD4D 结构在指定的基向量方向的分量缩放指定的倍数的 PointD4D 结构的新实例。
            </summary>
            <param name="index">索引，用于指定缩放的分量所在方向的基向量。</param>
            <param name="s">双精度浮点数表示的缩放因数。</param>
            <returns>PointD4D 结构，表示按双精度浮点数表示的缩放因数将此 PointD4D 结构在指定的基向量方向的分量缩放指定的倍数得到的结果。</returns>
        </member>
        <member name="M:Com.PointD4D.ScaleCopy(System.Double)">
            <summary>
            返回按双精度浮点数表示的缩放因数将此 PointD4D 结构的所有分量缩放指定的倍数的 PointD4D 结构的新实例。
            </summary>
            <param name="s">双精度浮点数表示的缩放因数。</param>
            <returns>PointD4D 结构，表示按双精度浮点数表示的缩放因数将此 PointD4D 结构的所有分量缩放指定的倍数得到的结果。</returns>
        </member>
        <member name="M:Com.PointD4D.ScaleCopy(Com.PointD4D)">
            <summary>
            返回按 PointD4D 结构表示的缩放因数将此 PointD4D 结构缩放指定的倍数的 PointD4D 结构的新实例。
            </summary>
            <param name="pt">PointD4D 结构表示的缩放因数。</param>
            <returns>PointD4D 结构，表示按 PointD4D 结构表示的缩放因数将此 PointD4D 结构缩放指定的倍数得到的结果。</returns>
        </member>
        <member name="M:Com.PointD4D.ScaleCopy(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            返回按双精度浮点数表示的 X 坐标缩放因数、Y 坐标缩放因数、Z 坐标缩放因数与 U 坐标缩放因数将此 PointD4D 结构缩放指定的倍数的 PointD4D 结构的新实例。
            </summary>
            <param name="sx">双精度浮点数表示的 X 坐标缩放因数。</param>
            <param name="sy">双精度浮点数表示的 Y 坐标缩放因数。</param>
            <param name="sz">双精度浮点数表示的 Z 坐标缩放因数。</param>
            <param name="su">双精度浮点数表示的 U 坐标缩放因数。</param>
            <returns>PointD4D 结构，表示按双精度浮点数表示的 X 坐标缩放因数、Y 坐标缩放因数、Z 坐标缩放因数与 U 坐标缩放因数将此 PointD4D 结构缩放指定的倍数得到的结果。</returns>
        </member>
        <member name="M:Com.PointD4D.Reflect(System.Int32)">
            <summary>
            将此 PointD4D 结构在指定的基向量方向的分量翻转。
            </summary>
            <param name="index">索引，用于指定翻转的分量所在方向的基向量。</param>
        </member>
        <member name="M:Com.PointD4D.ReflectCopy(System.Int32)">
            <summary>
            返回将此 PointD4D 结构在指定的基向量方向的分量翻转的 PointD4D 结构的新实例。
            </summary>
            <param name="index">索引，用于指定翻转的分量所在方向的基向量。</param>
            <returns>PointD4D 结构，表示将此 PointD4D 结构在指定的基向量方向的分量翻转得到的结果。</returns>
        </member>
        <member name="M:Com.PointD4D.Shear(System.Int32,System.Int32,System.Double)">
            <summary>
            按双精度浮点数表示的弧度将此 PointD4D 结构错切指定的角度。
            </summary>
            <param name="index1">索引，用于指定与错切方向同向的基向量。</param>
            <param name="index2">索引，用于指定与错切方向共面正交的基向量。</param>
            <param name="angle">双精度浮点数，表示此 PointD4D 结构沿索引 index1 指定的基向量方向且共面正交于 index2 指定的基向量方向错切的角度（弧度）。</param>
        </member>
        <member name="M:Com.PointD4D.ShearCopy(System.Int32,System.Int32,System.Double)">
            <summary>
            返回按双精度浮点数表示的弧度将此 PointD4D 结构错切指定的角度的 PointD4D 结构的新实例。
            </summary>
            <param name="index1">索引，用于指定与错切方向同向的基向量。</param>
            <param name="index2">索引，用于指定与错切方向共面正交的基向量。</param>
            <param name="angle">双精度浮点数，表示此 PointD4D 结构沿索引 index1 指定的基向量方向且共面正交于 index2 指定的基向量方向错切的角度（弧度）。</param>
            <returns>PointD4D 结构，表示按双精度浮点数表示的弧度将此 PointD4D 结构错切指定的角度得到的结果。</returns>
        </member>
        <member name="M:Com.PointD4D.Rotate(System.Int32,System.Int32,System.Double)">
            <summary>
            按双精度浮点数表示的弧度将此 PointD4D 结构旋转指定的角度。
            </summary>
            <param name="index1">索引，用于指定构成旋转轨迹所在平面的第一个基向量。</param>
            <param name="index2">索引，用于指定构成旋转轨迹所在平面的第二个基向量。</param>
            <param name="angle">双精度浮点数，表示此 PointD4D 结构绕索引 index1 与 index2 指定的基向量构成的平面的法向空间旋转的角度（弧度）（以索引 index1 指定的基向量为 0 弧度，从索引 index1 指定的基向量指向索引 index2 指定的基向量的方向为正方向）。</param>
        </member>
        <member name="M:Com.PointD4D.RotateCopy(System.Int32,System.Int32,System.Double)">
            <summary>
            返回按双精度浮点数表示的弧度将此 PointD4D 结构旋转指定的角度的 PointD4D 结构的新实例。
            </summary>
            <param name="index1">索引，用于指定构成旋转轨迹所在平面的第一个基向量。</param>
            <param name="index2">索引，用于指定构成旋转轨迹所在平面的第二个基向量。</param>
            <param name="angle">双精度浮点数，表示此 PointD4D 结构绕索引 index1 与 index2 指定的基向量构成的平面的法向空间旋转的角度（弧度）（以索引 index1 指定的基向量为 0 弧度，从索引 index1 指定的基向量指向索引 index2 指定的基向量的方向为正方向）。</param>
            <returns>PointD4D 结构，表示按双精度浮点数表示的弧度将此 PointD4D 结构旋转指定的角度得到的结果。</returns>
        </member>
        <member name="M:Com.PointD4D.MatrixTransform(Com.Matrix)">
            <summary>
            按 Matrix 对象表示的 5x5 仿射矩阵（左矩阵）将此 PointD4D 结构进行仿射变换。
            </summary>
            <param name="matrixLeft">Matrix 对象，表示 5x5 仿射矩阵（左矩阵）。</param>
        </member>
        <member name="M:Com.PointD4D.MatrixTransformCopy(Com.Matrix)">
            <summary>
            返回按 Matrix 对象表示的 5x5 仿射矩阵（左矩阵）将此 PointD4D 结构进行仿射变换的 PointD4D 结构的新实例。
            </summary>
            <param name="matrixLeft">Matrix 对象列表，表示 5x5 仿射矩阵（左矩阵）。</param>
            <returns>PointD4D 结构，表示按 Matrix 对象表示的 5x5 仿射矩阵（左矩阵）将此 PointD4D 结构进行仿射变换得到的结果。</returns>
        </member>
        <member name="M:Com.PointD4D.AffineTransform(Com.AffineTransformation)">
            <summary>
            按 AffineTransformation 对象将此 PointD4D 结构进行仿射变换。
            </summary>
            <param name="affineTransformation">AffineTransformation 对象。</param>
        </member>
        <member name="M:Com.PointD4D.AffineTransformCopy(Com.AffineTransformation)">
            <summary>
            返回按 AffineTransformation 对象将此 PointD4D 结构进行仿射变换得到的结果。
            </summary>
            <param name="affineTransformation">AffineTransformation 对象。</param>
            <returns>PointD4D 结构，表示按 AffineTransformation 对象将此 PointD4D 结构进行仿射变换得到的结果。</returns>
        </member>
        <member name="M:Com.PointD4D.AffineTransform(Com.PointD4D,Com.PointD4D,Com.PointD4D,Com.PointD4D,Com.PointD4D)">
            <summary>
            按 PointD4D 结构表示的 X 基向量、Y 基向量、Z 基向量、U 基向量与偏移向量将此 PointD4D 结构进行仿射变换。
            </summary>
            <param name="ex">PointD4D 结构表示的 X 基向量。</param>
            <param name="ey">PointD4D 结构表示的 Y 基向量。</param>
            <param name="ez">PointD4D 结构表示的 Z 基向量。</param>
            <param name="eu">PointD4D 结构表示的 U 基向量。</param>
            <param name="offset">PointD4D 结构表示的偏移向量。</param>
        </member>
        <member name="M:Com.PointD4D.AffineTransform(Com.Matrix)">
            <summary>
            按 Matrix 对象表示的 5x5 仿射矩阵（左矩阵）将此 PointD4D 结构进行仿射变换。
            </summary>
            <param name="matrixLeft">Matrix 对象，表示 5x5 仿射矩阵（左矩阵）。</param>
        </member>
        <member name="M:Com.PointD4D.AffineTransform(Com.Matrix[])">
            <summary>
            按 Matrix 对象数组表示的 5x5 仿射矩阵（左矩阵）数组将此 PointD4D 结构进行仿射变换。
            </summary>
            <param name="matricesLeft">Matrix 对象数组，表示 5x5 仿射矩阵（左矩阵）数组。</param>
        </member>
        <member name="M:Com.PointD4D.AffineTransform(System.Collections.Generic.List{Com.Matrix})">
            <summary>
            按 Matrix 对象列表表示的 5x5 仿射矩阵（左矩阵）列表将此 PointD4D 结构进行仿射变换。
            </summary>
            <param name="matricesLeft">Matrix 对象列表，表示 5x5 仿射矩阵（左矩阵）列表。</param>
        </member>
        <member name="M:Com.PointD4D.AffineTransformCopy(Com.PointD4D,Com.PointD4D,Com.PointD4D,Com.PointD4D,Com.PointD4D)">
            <summary>
            返回按 PointD4D 结构表示的 X 基向量、Y 基向量、Z 基向量、U 基向量与偏移向量将此 PointD4D 结构进行仿射变换的 PointD4D 结构的新实例。
            </summary>
            <param name="ex">PointD4D 结构表示的 X 基向量。</param>
            <param name="ey">PointD4D 结构表示的 Y 基向量。</param>
            <param name="ez">PointD4D 结构表示的 Z 基向量。</param>
            <param name="eu">PointD4D 结构表示的 U 基向量。</param>
            <param name="offset">PointD4D 结构表示的偏移向量。</param>
            <returns>PointD4D 结构，表示按 PointD4D 结构表示的 X 基向量、Y 基向量、Z 基向量、U 基向量与偏移向量将此 PointD4D 结构进行仿射变换得到的结果。</returns>
        </member>
        <member name="M:Com.PointD4D.AffineTransformCopy(Com.Matrix)">
            <summary>
            返回按 Matrix 对象表示的 5x5 仿射矩阵（左矩阵）将此 PointD4D 结构进行仿射变换的 PointD4D 结构的新实例。
            </summary>
            <param name="matrixLeft">Matrix 对象，表示 5x5 仿射矩阵（左矩阵）。</param>
            <returns>PointD4D 结构，表示按 Matrix 对象表示的 5x5 仿射矩阵（左矩阵）将此 PointD4D 结构进行仿射变换得到的结果。</returns>
        </member>
        <member name="M:Com.PointD4D.AffineTransformCopy(Com.Matrix[])">
            <summary>
            返回按 Matrix 对象数组表示的 5x5 仿射矩阵（左矩阵）数组将此 PointD4D 结构进行仿射变换的 PointD4D 结构的新实例。
            </summary>
            <param name="matricesLeft">Matrix 对象数组，表示 5x5 仿射矩阵（左矩阵）数组。</param>
            <returns>PointD4D 结构，表示按 Matrix 对象数组表示的 5x5 仿射矩阵（左矩阵）数组将此 PointD4D 结构进行仿射变换得到的结果。</returns>
        </member>
        <member name="M:Com.PointD4D.AffineTransformCopy(System.Collections.Generic.List{Com.Matrix})">
            <summary>
            返回按 Matrix 对象列表表示的 5x5 仿射矩阵（左矩阵）列表将此 PointD4D 结构进行仿射变换的 PointD4D 结构的新实例。
            </summary>
            <param name="matricesLeft">Matrix 对象列表，表示 5x5 仿射矩阵（左矩阵）列表。</param>
            <returns>PointD4D 结构，表示按 Matrix 对象列表表示的 5x5 仿射矩阵（左矩阵）列表将此 PointD4D 结构进行仿射变换得到的结果。</returns>
        </member>
        <member name="M:Com.PointD4D.InverseAffineTransform(Com.PointD4D,Com.PointD4D,Com.PointD4D,Com.PointD4D,Com.PointD4D)">
            <summary>
            按 PointD4D 结构表示的 X 基向量、Y 基向量、Z 基向量、U 基向量与偏移向量将此 PointD4D 结构进行逆仿射变换。
            </summary>
            <param name="ex">PointD4D 结构表示的 X 基向量。</param>
            <param name="ey">PointD4D 结构表示的 Y 基向量。</param>
            <param name="ez">PointD4D 结构表示的 Z 基向量。</param>
            <param name="eu">PointD4D 结构表示的 U 基向量。</param>
            <param name="offset">PointD4D 结构表示的偏移向量。</param>
        </member>
        <member name="M:Com.PointD4D.InverseAffineTransform(Com.Matrix)">
            <summary>
            按 Matrix 对象表示的 5x5 仿射矩阵（左矩阵）将此 PointD4D 结构进行逆仿射变换。
            </summary>
            <param name="matrixLeft">Matrix 对象，表示 5x5 仿射矩阵（左矩阵）。</param>
        </member>
        <member name="M:Com.PointD4D.InverseAffineTransform(Com.Matrix[])">
            <summary>
            按 Matrix 对象数组表示的 5x5 仿射矩阵（左矩阵）数组将此 PointD4D 结构进行逆仿射变换。
            </summary>
            <param name="matricesLeft">Matrix 对象数组，表示 5x5 仿射矩阵（左矩阵）数组。</param>
        </member>
        <member name="M:Com.PointD4D.InverseAffineTransform(System.Collections.Generic.List{Com.Matrix})">
            <summary>
            按 Matrix 对象列表表示的 5x5 仿射矩阵（左矩阵）列表将此 PointD4D 结构进行逆仿射变换。
            </summary>
            <param name="matricesLeft">Matrix 对象列表，表示 5x5 仿射矩阵（左矩阵）列表。</param>
        </member>
        <member name="M:Com.PointD4D.InverseAffineTransformCopy(Com.PointD4D,Com.PointD4D,Com.PointD4D,Com.PointD4D,Com.PointD4D)">
            <summary>
            返回按 PointD4D 结构表示的 X 基向量、Y 基向量、Z 基向量、U 基向量与偏移向量将此 PointD4D 结构进行逆仿射变换的 PointD4D 结构的新实例。
            </summary>
            <param name="ex">PointD4D 结构表示的 X 基向量。</param>
            <param name="ey">PointD4D 结构表示的 Y 基向量。</param>
            <param name="ez">PointD4D 结构表示的 Z 基向量。</param>
            <param name="eu">PointD4D 结构表示的 U 基向量。</param>
            <param name="offset">PointD4D 结构表示的偏移向量。</param>
            <returns>PointD4D 结构，表示按 PointD4D 结构表示的 X 基向量、Y 基向量、Z 基向量、U 基向量与偏移向量将此 PointD4D 结构进行逆仿射变换得到的结果。</returns>
        </member>
        <member name="M:Com.PointD4D.InverseAffineTransformCopy(Com.Matrix)">
            <summary>
            返回按 Matrix 对象表示的 5x5 仿射矩阵（左矩阵）将此 PointD4D 结构进行逆仿射变换的 PointD4D 结构的新实例。
            </summary>
            <param name="matrixLeft">Matrix 对象，表示 5x5 仿射矩阵（左矩阵）。</param>
            <returns>PointD4D 结构，表示按 Matrix 对象表示的 5x5 仿射矩阵（左矩阵）将此 PointD4D 结构进行逆仿射变换得到的结果。</returns>
        </member>
        <member name="M:Com.PointD4D.InverseAffineTransformCopy(Com.Matrix[])">
            <summary>
            返回按 Matrix 对象数组表示的 5x5 仿射矩阵（左矩阵）数组将此 PointD4D 结构进行逆仿射变换的 PointD4D 结构的新实例。
            </summary>
            <param name="matricesLeft">Matrix 对象数组，表示 5x5 仿射矩阵（左矩阵）数组。</param>
            <returns>PointD4D 结构，表示按 Matrix 对象数组表示的 5x5 仿射矩阵（左矩阵）数组将此 PointD4D 结构进行逆仿射变换得到的结果。</returns>
        </member>
        <member name="M:Com.PointD4D.InverseAffineTransformCopy(System.Collections.Generic.List{Com.Matrix})">
            <summary>
            返回按 Matrix 对象列表表示的 5x5 仿射矩阵（左矩阵）列表将此 PointD4D 结构进行逆仿射变换的 PointD4D 结构的新实例。
            </summary>
            <param name="matricesLeft">Matrix 对象列表，表示 5x5 仿射矩阵（左矩阵）列表。</param>
            <returns>PointD4D 结构，表示按 Matrix 对象列表表示的 5x5 仿射矩阵（左矩阵）列表将此 PointD4D 结构进行逆仿射变换得到的结果。</returns>
        </member>
        <member name="M:Com.PointD4D.ProjectToXYZ(Com.PointD4D,System.Double)">
            <summary>
            返回将此 PointD4D 结构投影至平行于 XYZ 空间的投影空间的 PointD3D 结构的新实例。
            </summary>
            <param name="prjCenter">PointD4D 结构，表示投影中心在投影空间的正投影在原坐标系的坐标。</param>
            <param name="focalLength">双精度浮点数表示的焦距，平行于投影空间的一维测度其真实大小与投影大小的比值等于其到投影空间的距离与焦距的比值。</param>
            <returns>PointD3D 结构，表示将此 PointD4D 结构投影至平行于 XYZ 空间的投影空间得到的结果。</returns>
        </member>
        <member name="M:Com.PointD4D.ProjectToYZU(Com.PointD4D,System.Double)">
            <summary>
            返回将此 PointD4D 结构投影至平行于 YZU 空间的投影空间的 PointD3D 结构的新实例。
            </summary>
            <param name="prjCenter">PointD4D 结构，表示投影中心在投影空间的正投影在原坐标系的坐标。</param>
            <param name="focalLength">双精度浮点数表示的焦距，平行于投影空间的一维测度其真实大小与投影大小的比值等于其到投影空间的距离与焦距的比值。</param>
            <returns>PointD3D 结构，表示将此 PointD4D 结构投影至平行于 YZU 空间的投影空间得到的结果。</returns>
        </member>
        <member name="M:Com.PointD4D.ProjectToZUX(Com.PointD4D,System.Double)">
            <summary>
            返回将此 PointD4D 结构投影至平行于 ZUX 空间的投影空间的 PointD3D 结构的新实例。
            </summary>
            <param name="prjCenter">PointD4D 结构，表示投影中心在投影空间的正投影在原坐标系的坐标。</param>
            <param name="focalLength">双精度浮点数表示的焦距，平行于投影空间的一维测度其真实大小与投影大小的比值等于其到投影空间的距离与焦距的比值。</param>
            <returns>PointD3D 结构，表示将此 PointD4D 结构投影至平行于 ZUX 空间的投影空间得到的结果。</returns>
        </member>
        <member name="M:Com.PointD4D.ProjectToUXY(Com.PointD4D,System.Double)">
            <summary>
            返回将此 PointD4D 结构投影至平行于 UXY 空间的投影空间的 PointD3D 结构的新实例。
            </summary>
            <param name="prjCenter">PointD4D 结构，表示投影中心在投影空间的正投影在原坐标系的坐标。</param>
            <param name="focalLength">双精度浮点数表示的焦距，平行于投影空间的一维测度其真实大小与投影大小的比值等于其到投影空间的距离与焦距的比值。</param>
            <returns>PointD3D 结构，表示将此 PointD4D 结构投影至平行于 UXY 空间的投影空间得到的结果。</returns>
        </member>
        <member name="M:Com.PointD4D.ToColumnVector">
            <summary>
            返回将此 PointD4D 结构转换为列向量的 Vector 的新实例。
            </summary>
            <returns>Vector 对象，表示将此 PointD4D 结构转换为列向量得到的结果。</returns>
        </member>
        <member name="M:Com.PointD4D.ToRowVector">
            <summary>
            返回将此 PointD4D 结构转换为行向量的 Vector 的新实例。
            </summary>
            <returns>Vector 对象，表示将此 PointD4D 结构转换为行向量得到的结果。</returns>
        </member>
        <member name="M:Com.PointD4D.Equals(Com.PointD4D,Com.PointD4D)">
            <summary>
            判断两个 PointD4D 结构是否相等。
            </summary>
            <param name="left">用于比较的第一个 PointD4D 结构。</param>
            <param name="right">用于比较的第二个 PointD4D 结构。</param>
            <returns>布尔值，表示两个 PointD4D 结构是否相等。</returns>
        </member>
        <member name="M:Com.PointD4D.Compare(Com.PointD4D,Com.PointD4D)">
            <summary>
            比较两个 PointD4D 结构的次序。
            </summary>
            <param name="left">用于比较的第一个 PointD4D 结构。</param>
            <param name="right">用于比较的第二个 PointD4D 结构。</param>
            <returns>32 位整数，表示将两个 PointD4D 结构进行次序比较得到的结果。</returns>
        </member>
        <member name="M:Com.PointD4D.FromVector(Com.Vector)">
            <summary>
            返回将 Vector 对象转换为 PointD4D 结构的新实例。
            </summary>
            <param name="vector">Vector 对象。</param>
            <returns>PointD4D 结构，表示转换的结果。</returns>
        </member>
        <member name="M:Com.PointD4D.IdentityMatrix">
            <summary>
            返回单位矩阵，表示不对 PointD4D 结构进行仿射变换的 5x5 仿射矩阵（左矩阵）的 Matrix 的新实例。
            </summary>
            <returns>Matrix 对象，表示不对 PointD4D 结构进行仿射变换的 5x5 仿射矩阵（左矩阵）。</returns>
        </member>
        <member name="M:Com.PointD4D.OffsetMatrix(System.Int32,System.Double)">
            <summary>
            返回表示按双精度浮点数表示的位移将 PointD4D 结构在指定的基向量方向的分量平移指定的量的 5x5 仿射矩阵（左矩阵）的 Matrix 的新实例。
            </summary>
            <param name="index">索引，用于指定平移的分量所在方向的基向量。</param>
            <param name="d">双精度浮点数表示的位移。</param>
            <returns>Matrix 对象，表示按双精度浮点数表示的位移将 PointD4D 结构在指定的基向量方向的分量平移指定的量的 5x5 仿射矩阵（左矩阵）。</returns>
        </member>
        <member name="M:Com.PointD4D.OffsetMatrix(System.Double)">
            <summary>
            返回表示按双精度浮点数表示的位移将 PointD4D 结构的所有分量平移指定的量的 5x5 仿射矩阵（左矩阵）的 Matrix 的新实例。
            </summary>
            <param name="d">双精度浮点数表示的位移。</param>
            <returns>Matrix 对象，表示按双精度浮点数表示的位移将 PointD4D 结构的所有分量平移指定的量的 5x5 仿射矩阵（左矩阵）。</returns>
        </member>
        <member name="M:Com.PointD4D.OffsetMatrix(Com.PointD4D)">
            <summary>
            返回表示按 PointD4D 结构表示的位移将 PointD4D 结构平移指定的量的 5x5 仿射矩阵（左矩阵）的 Matrix 的新实例。
            </summary>
            <param name="pt">PointD4D 结构表示的位移。</param>
            <returns>Matrix 对象，表示按 PointD4D 结构表示的位移将 PointD4D 结构平移指定的量的 5x5 仿射矩阵（左矩阵）。</returns>
        </member>
        <member name="M:Com.PointD4D.OffsetMatrix(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            返回表示按双精度浮点数表示的 X 坐标位移、Y 坐标位移、Z 坐标位移与 U 坐标位移将 PointD4D 结构平移指定的量的 5x5 仿射矩阵（左矩阵）的 Matrix 的新实例。
            </summary>
            <param name="dx">双精度浮点数表示的 X 坐标位移。</param>
            <param name="dy">双精度浮点数表示的 Y 坐标位移。</param>
            <param name="dz">双精度浮点数表示的 Z 坐标位移。</param>
            <param name="du">双精度浮点数表示的 U 坐标位移。</param>
            <returns>Matrix 对象，表示按双精度浮点数表示的 X 坐标位移、Y 坐标位移、Z 坐标位移与 U 坐标位移将 PointD4D 结构平移指定的量的 5x5 仿射矩阵（左矩阵）。</returns>
        </member>
        <member name="M:Com.PointD4D.ScaleMatrix(System.Int32,System.Double)">
            <summary>
            返回表示按双精度浮点数表示的缩放因数将 PointD4D 结构在指定的基向量方向的分量缩放指定的倍数的 5x5 仿射矩阵（左矩阵）的 Matrix 的新实例。
            </summary>
            <param name="index">索引，用于指定平移的分量所在方向的基向量。</param>
            <param name="s">双精度浮点数表示的缩放因数。</param>
            <returns>Matrix 对象，表示按双精度浮点数表示的缩放因数将 PointD4D 结构在指定的基向量方向的分量缩放指定的倍数的 5x5 仿射矩阵（左矩阵）。</returns>
        </member>
        <member name="M:Com.PointD4D.ScaleMatrix(System.Double)">
            <summary>
            返回表示按双精度浮点数表示的缩放因数将 PointD4D 结构的所有分量缩放指定的倍数的 5x5 仿射矩阵（左矩阵）的 Matrix 的新实例。
            </summary>
            <param name="s">双精度浮点数表示的缩放因数。</param>
            <returns>Matrix 对象，表示按双精度浮点数表示的缩放因数将 PointD4D 结构的所有分量缩放指定的倍数的 5x5 仿射矩阵（左矩阵）。</returns>
        </member>
        <member name="M:Com.PointD4D.ScaleMatrix(Com.PointD4D)">
            <summary>
            返回表示按 PointD4D 结构表示的缩放因数将 PointD4D 结构缩放指定的倍数的 5x5 仿射矩阵（左矩阵）的 Matrix 的新实例。
            </summary>
            <param name="pt">PointD4D 结构表示的缩放因数。</param>
            <returns>Matrix 对象，表示按 PointD4D 结构表示的缩放因数将 PointD4D 结构缩放指定的倍数的 5x5 仿射矩阵（左矩阵）。</returns>
        </member>
        <member name="M:Com.PointD4D.ScaleMatrix(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            返回表示按双精度浮点数表示的 X 坐标缩放因数、Y 坐标缩放因数、Z 坐标缩放因数与 U 坐标缩放因数将 PointD4D 结构缩放指定的倍数的 5x5 仿射矩阵（左矩阵）的 Matrix 的新实例。
            </summary>
            <param name="sx">双精度浮点数表示的 X 坐标缩放因数。</param>
            <param name="sy">双精度浮点数表示的 Y 坐标缩放因数。</param>
            <param name="sz">双精度浮点数表示的 Z 坐标缩放因数。</param>
            <param name="su">双精度浮点数表示的 U 坐标缩放因数。</param>
            <returns>Matrix 对象，表示按双精度浮点数表示的 X 坐标缩放因数、Y 坐标缩放因数、Z 坐标缩放因数与 U 坐标缩放因数将 PointD4D 结构缩放指定的倍数的 5x5 仿射矩阵（左矩阵）。</returns>
        </member>
        <member name="M:Com.PointD4D.ReflectMatrix(System.Int32)">
            <summary>
            返回表示将 PointD4D 结构在指定的基向量方向的分量翻转的 5x5 仿射矩阵（左矩阵）的 Matrix 的新实例。
            </summary>
            <param name="index">索引，用于指定翻转的分量所在方向的基向量。</param>
            <returns>Matrix 对象，表示将 PointD4D 结构在指定的基向量方向的分量翻转的 5x5 仿射矩阵（左矩阵）。</returns>
        </member>
        <member name="M:Com.PointD4D.ShearMatrix(System.Int32,System.Int32,System.Double)">
            <summary>
            返回表示用于错切 PointD4D 结构的 5x5 仿射矩阵（左矩阵）的 Matrix 的新实例。
            </summary>
            <param name="index1">索引，用于指定与错切方向同向的基向量。</param>
            <param name="index2">索引，用于指定与错切方向共面正交的基向量。</param>
            <param name="angle">双精度浮点数，表示此 PointD4D 结构沿索引 index1 指定的基向量方向且共面正交于 index2 指定的基向量方向错切的角度（弧度）。</param>
            <returns>Matrix 对象，表示用于错切 PointD4D 结构的 5x5 仿射矩阵（左矩阵）。</returns>
        </member>
        <member name="M:Com.PointD4D.RotateMatrix(System.Int32,System.Int32,System.Double)">
            <summary>
            返回表示用于旋转 PointD4D 结构的 5x5 仿射矩阵（左矩阵）的 Matrix 的新实例。
            </summary>
            <param name="index1">索引，用于指定构成旋转轨迹所在平面的第一个基向量。</param>
            <param name="index2">索引，用于指定构成旋转轨迹所在平面的第二个基向量。</param>
            <param name="angle">双精度浮点数，表示 PointD4D 结构绕索引 index1 与 index2 指定的基向量构成的平面的法向空间旋转的角度（弧度）（以索引 index1 指定的基向量为 0 弧度，从索引 index1 指定的基向量指向索引 index2 指定的基向量的方向为正方向）。</param>
            <returns>Matrix 对象，表示用于旋转 PointD4D 结构的 5x5 仿射矩阵（左矩阵）。</returns>
        </member>
        <member name="M:Com.PointD4D.DistanceBetween(Com.PointD4D,Com.PointD4D)">
            <summary>
            返回两个 PointD4D 结构之间的距离。
            </summary>
            <param name="left">第一个 PointD4D 结构。</param>
            <param name="right">第二个 PointD4D 结构。</param>
            <returns>双精度浮点数，表示两个 PointD4D 结构之间的距离。</returns>
        </member>
        <member name="M:Com.PointD4D.AngleBetween(Com.PointD4D,Com.PointD4D)">
            <summary>
            返回两个 PointD4D 结构之间的夹角（弧度）。
            </summary>
            <param name="left">第一个 PointD4D 结构。</param>
            <param name="right">第二个 PointD4D 结构。</param>
            <returns>双精度浮点数，表示两个 PointD4D 结构之间的夹角（弧度）。</returns>
        </member>
        <member name="M:Com.PointD4D.DotProduct(Com.PointD4D,Com.PointD4D)">
            <summary>
            返回两个 PointD4D 结构的内积。
            </summary>
            <param name="left">第一个 PointD4D 结构。</param>
            <param name="right">第二个 PointD4D 结构。</param>
            <returns>双精度浮点数，表示两个 PointD4D 结构的内积。</returns>
        </member>
        <member name="M:Com.PointD4D.CrossProduct(Com.PointD4D,Com.PointD4D)">
            <summary>
            返回两个 PointD4D 结构的外积。该外积为一个六维向量，其所有分量的数值依次为 X∧Y 基向量、X∧Z 基向量、X∧U 基向量、Y∧Z 基向量、Y∧U 基向量与 Z∧U 基向量的系数。
            </summary>
            <param name="left">第一个 PointD4D 结构。</param>
            <param name="right">第二个 PointD4D 结构。</param>
            <returns>Vector 对象，表示两个 PointD4D 结构的外积。</returns>
        </member>
        <member name="M:Com.PointD4D.Sign(Com.PointD4D)">
            <summary>
            返回将 PointD4D 结构的所有分量取符号数得到的 PointD4D 结构的新实例。
            </summary>
            <param name="pt">PointD4D 结构，用于转换的结构。</param>
            <returns>PointD4D 结构，表示将 PointD4D 结构的所有分量取符号数得到的结果</returns>
        </member>
        <member name="M:Com.PointD4D.Abs(Com.PointD4D)">
            <summary>
            返回将 PointD4D 结构的所有分量取绝对值得到的 PointD4D 结构的新实例。
            </summary>
            <param name="pt">PointD4D 结构，用于转换的结构。</param>
            <returns>PointD4D 结构，表示将 PointD4D 结构的所有分量取绝对值得到的结果</returns>
        </member>
        <member name="M:Com.PointD4D.Ceiling(Com.PointD4D)">
            <summary>
            返回将 PointD4D 结构的所有分量舍入到较大的整数值得到的 PointD4D 结构的新实例。
            </summary>
            <param name="pt">PointD4D 结构，用于转换的结构。</param>
            <returns>PointD4D 结构，表示将 PointD4D 结构的所有分量舍入到较大的整数值得到的结果</returns>
        </member>
        <member name="M:Com.PointD4D.Floor(Com.PointD4D)">
            <summary>
            返回将 PointD4D 结构的所有分量舍入到较小的整数值得到的 PointD4D 结构的新实例。
            </summary>
            <param name="pt">PointD4D 结构，用于转换的结构。</param>
            <returns>PointD4D 结构，表示将 PointD4D 结构的所有分量舍入到较小的整数值得到的结果</returns>
        </member>
        <member name="M:Com.PointD4D.Round(Com.PointD4D)">
            <summary>
            返回将 PointD4D 结构的所有分量舍入到最接近的整数值得到的 PointD4D 结构的新实例。
            </summary>
            <param name="pt">PointD4D 结构，用于转换的结构。</param>
            <returns>PointD4D 结构，表示将 PointD4D 结构的所有分量舍入到最接近的整数值得到的结果</returns>
        </member>
        <member name="M:Com.PointD4D.Truncate(Com.PointD4D)">
            <summary>
            返回将 PointD4D 结构的所有分量截断小数部分取整得到的 PointD4D 结构的新实例。
            </summary>
            <param name="pt">PointD4D 结构，用于转换的结构。</param>
            <returns>PointD4D 结构，表示将 PointD4D 结构的所有分量截断小数部分取整得到的结果</returns>
        </member>
        <member name="M:Com.PointD4D.Max(Com.PointD4D,Com.PointD4D)">
            <summary>
            返回将两个 PointD4D 结构的所有分量分别取最大值得到的 PointD4D 结构的新实例。
            </summary>
            <param name="left">PointD4D 结构，用于比较的第一个结构。</param>
            <param name="right">PointD4D 结构，用于比较的第二个结构。</param>
            <returns>PointD4D 结构，表示将两个 PointD4D 结构的所有分量分别取最大值得到的结果</returns>
        </member>
        <member name="M:Com.PointD4D.Min(Com.PointD4D,Com.PointD4D)">
            <summary>
            返回将两个 PointD4D 结构的所有分量分别取最小值得到的 PointD4D 结构的新实例。
            </summary>
            <param name="left">PointD4D 结构，用于比较的第一个结构。</param>
            <param name="right">PointD4D 结构，用于比较的第二个结构。</param>
            <returns>PointD4D 结构，表示将两个 PointD4D 结构的所有分量分别取最小值得到的结果</returns>
        </member>
        <member name="M:Com.PointD4D.op_Equality(Com.PointD4D,Com.PointD4D)">
            <summary>
            判断两个 PointD4D 结构是否相等。
            </summary>
            <param name="left">运算符左侧比较的 PointD4D 结构。</param>
            <param name="right">运算符右侧比较的 PointD4D 结构。</param>
            <returns>布尔值，表示两个 PointD4D 结构是否相等。</returns>
        </member>
        <member name="M:Com.PointD4D.op_Inequality(Com.PointD4D,Com.PointD4D)">
            <summary>
            判断两个 PointD4D 结构是否不相等。
            </summary>
            <param name="left">运算符左侧比较的 PointD4D 结构。</param>
            <param name="right">运算符右侧比较的 PointD4D 结构。</param>
            <returns>布尔值，表示两个 PointD4D 结构是否不相等。</returns>
        </member>
        <member name="M:Com.PointD4D.op_LessThan(Com.PointD4D,Com.PointD4D)">
            <summary>
            判断两个 PointD4D 结构的字典序是否前者小于后者。
            </summary>
            <param name="left">运算符左侧比较的 PointD4D 结构。</param>
            <param name="right">运算符右侧比较的 PointD4D 结构。</param>
            <returns>布尔值，表示两个 PointD4D 结构的字典序是否前者小于后者。</returns>
        </member>
        <member name="M:Com.PointD4D.op_GreaterThan(Com.PointD4D,Com.PointD4D)">
            <summary>
            判断两个 PointD4D 结构的字典序是否前者大于后者。
            </summary>
            <param name="left">运算符左侧比较的 PointD4D 结构。</param>
            <param name="right">运算符右侧比较的 PointD4D 结构。</param>
            <returns>布尔值，表示两个 PointD4D 结构的字典序是否前者大于后者。</returns>
        </member>
        <member name="M:Com.PointD4D.op_LessThanOrEqual(Com.PointD4D,Com.PointD4D)">
            <summary>
            判断两个 PointD4D 结构的字典序是否前者小于或等于后者。
            </summary>
            <param name="left">运算符左侧比较的 PointD4D 结构。</param>
            <param name="right">运算符右侧比较的 PointD4D 结构。</param>
            <returns>布尔值，表示两个 PointD4D 结构的字典序是否前者小于或等于后者。</returns>
        </member>
        <member name="M:Com.PointD4D.op_GreaterThanOrEqual(Com.PointD4D,Com.PointD4D)">
            <summary>
            判断两个 PointD4D 结构的字典序是否前者大于或等于后者。
            </summary>
            <param name="left">运算符左侧比较的 PointD4D 结构。</param>
            <param name="right">运算符右侧比较的 PointD4D 结构。</param>
            <returns>布尔值，表示两个 PointD4D 结构的字典序是否前者大于或等于后者。</returns>
        </member>
        <member name="M:Com.PointD4D.op_UnaryPlus(Com.PointD4D)">
            <summary>
            返回在 PointD4D 结构的所有分量前添加正号得到的 PointD4D 结构的新实例。
            </summary>
            <param name="pt">运算符右侧的 PointD4D 结构。</param>
            <returns>PointD4D 结构，表示在 PointD4D 结构的所有分量前添加正号得到的结果。</returns>
        </member>
        <member name="M:Com.PointD4D.op_UnaryNegation(Com.PointD4D)">
            <summary>
            返回在 PointD4D 结构的所有分量前添加负号得到的 PointD4D 结构的新实例。
            </summary>
            <param name="pt">运算符右侧的 PointD4D 结构。</param>
            <returns>PointD4D 结构，表示在 PointD4D 结构的所有分量前添加负号得到的结果。</returns>
        </member>
        <member name="M:Com.PointD4D.op_Addition(Com.PointD4D,System.Double)">
            <summary>
            返回将 PointD4D 结构的所有分量与双精度浮点数相加得到的 PointD4D 结构的新实例。
            </summary>
            <param name="pt">PointD4D 结构，表示被加数。</param>
            <param name="n">双精度浮点数，表示加数。</param>
            <returns>PointD4D 结构，表示将 PointD4D 结构的所有分量与双精度浮点数相加得到的结果。</returns>
        </member>
        <member name="M:Com.PointD4D.op_Addition(System.Double,Com.PointD4D)">
            <summary>
            返回将双精度浮点数与 PointD4D 结构的所有分量相加得到的 PointD4D 结构的新实例。
            </summary>
            <param name="n">双精度浮点数，表示被加数。</param>
            <param name="pt">PointD4D 结构，表示加数。</param>
            <returns>PointD4D 结构，表示将双精度浮点数与 PointD4D 结构的所有分量相加得到的结果。</returns>
        </member>
        <member name="M:Com.PointD4D.op_Addition(Com.PointD4D,Com.PointD4D)">
            <summary>
            返回将 PointD4D 结构与 PointD4D 结构的所有分量对应相加得到的 PointD4D 结构的新实例。
            </summary>
            <param name="left">PointD4D 结构，表示被加数。</param>
            <param name="right">PointD4D 结构，表示加数。</param>
            <returns>PointD4D 结构，表示将 PointD4D 结构与 PointD4D 结构的所有分量对应相加得到的结果。</returns>
        </member>
        <member name="M:Com.PointD4D.op_Subtraction(Com.PointD4D,System.Double)">
            <summary>
            返回将 PointD4D 结构的所有分量与双精度浮点数相减得到的 PointD4D 结构的新实例。
            </summary>
            <param name="pt">PointD4D 结构，表示被减数。</param>
            <param name="n">双精度浮点数，表示减数。</param>
            <returns>PointD4D 结构，表示将 PointD4D 结构的所有分量与双精度浮点数相减得到的结果。</returns>
        </member>
        <member name="M:Com.PointD4D.op_Subtraction(System.Double,Com.PointD4D)">
            <summary>
            返回将双精度浮点数与 PointD4D 结构的所有分量相减得到的 PointD4D 结构的新实例。
            </summary>
            <param name="n">双精度浮点数，表示被减数。</param>
            <param name="pt">PointD4D 结构，表示减数。</param>
            <returns>PointD4D 结构，表示将双精度浮点数与 PointD4D 结构的所有分量相减得到的结果。</returns>
        </member>
        <member name="M:Com.PointD4D.op_Subtraction(Com.PointD4D,Com.PointD4D)">
            <summary>
            返回将 PointD4D 结构与 PointD4D 结构的所有分量对应相减得到的 PointD4D 结构的新实例。
            </summary>
            <param name="left">PointD4D 结构，表示被减数。</param>
            <param name="right">PointD4D 结构，表示减数。</param>
            <returns>PointD4D 结构，表示将 PointD4D 结构与 PointD4D 结构的所有分量对应相减得到的结果。</returns>
        </member>
        <member name="M:Com.PointD4D.op_Multiply(Com.PointD4D,System.Double)">
            <summary>
            返回将 PointD4D 结构的所有分量与双精度浮点数相乘得到的 PointD4D 结构的新实例。
            </summary>
            <param name="pt">PointD4D 结构，表示被乘数。</param>
            <param name="n">双精度浮点数，表示乘数。</param>
            <returns>PointD4D 结构，表示将 PointD4D 结构的所有分量与双精度浮点数相乘得到的结果。</returns>
        </member>
        <member name="M:Com.PointD4D.op_Multiply(System.Double,Com.PointD4D)">
            <summary>
            返回将双精度浮点数与 PointD4D 结构的所有分量相乘得到的 PointD4D 结构的新实例。
            </summary>
            <param name="n">双精度浮点数，表示被乘数。</param>
            <param name="pt">PointD4D 结构，表示乘数。</param>
            <returns>PointD4D 结构，表示将双精度浮点数与 PointD4D 结构的所有分量相乘得到的结果。</returns>
        </member>
        <member name="M:Com.PointD4D.op_Multiply(Com.PointD4D,Com.PointD4D)">
            <summary>
            返回将 PointD4D 结构与 PointD4D 结构的所有分量对应相乘得到的 PointD4D 结构的新实例。
            </summary>
            <param name="left">PointD4D 结构，表示被乘数。</param>
            <param name="right">PointD4D 结构，表示乘数。</param>
            <returns>PointD4D 结构，表示将 PointD4D 结构与 PointD4D 结构的所有分量对应相乘得到的结果。</returns>
        </member>
        <member name="M:Com.PointD4D.op_Division(Com.PointD4D,System.Double)">
            <summary>
            返回将 PointD4D 结构的所有分量与双精度浮点数相除得到的 PointD4D 结构的新实例。
            </summary>
            <param name="pt">PointD4D 结构，表示被除数。</param>
            <param name="n">双精度浮点数，表示除数。</param>
            <returns>PointD4D 结构，表示将 PointD4D 结构的所有分量与双精度浮点数相除得到的结果。</returns>
        </member>
        <member name="M:Com.PointD4D.op_Division(System.Double,Com.PointD4D)">
            <summary>
            返回将双精度浮点数与 PointD4D 结构的所有分量相除得到的 PointD4D 结构的新实例。
            </summary>
            <param name="n">双精度浮点数，表示被除数。</param>
            <param name="pt">PointD4D 结构，表示除数。</param>
            <returns>PointD4D 结构，表示将双精度浮点数与 PointD4D 结构的所有分量相除得到的结果。</returns>
        </member>
        <member name="M:Com.PointD4D.op_Division(Com.PointD4D,Com.PointD4D)">
            <summary>
            返回将 PointD4D 结构与 PointD4D 结构的所有分量对应相除得到的 PointD4D 结构的新实例。
            </summary>
            <param name="left">PointD4D 结构，表示被除数。</param>
            <param name="right">PointD4D 结构，表示除数。</param>
            <returns>PointD4D 结构，表示将 PointD4D 结构与 PointD4D 结构的所有分量对应相除得到的结果。</returns>
        </member>
        <member name="M:Com.PointD4D.op_Implicit(System.ValueTuple{System.Double,System.Double,System.Double,System.Double})~Com.PointD4D">
            <summary>
            将指定的值元组隐式转换为 PointD4D 结构。
            </summary>
            <param name="tuple">用于转换的值元组。</param>
            <returns>PointD4D 结构，表示隐式转换的结果。</returns>
        </member>
        <member name="M:Com.PointD4D.op_Implicit(Com.PointD4D)~System.ValueTuple{System.Double,System.Double,System.Double,System.Double}">
            <summary>
            将指定的 PointD4D 结构隐式转换为值元组。
            </summary>
            <param name="pt">用于转换的 PointD4D 结构。</param>
            <returns>值元组，表示隐式转换的结果。</returns>
        </member>
        <member name="T:Com.Text">
            <summary>
            为文本处理提供静态方法。
            </summary>
        </member>
        <member name="M:Com.Text.GetScientificNotationString(System.Double,System.Int32,System.Boolean,System.Boolean,System.String)">
            <summary>
            返回一个以科学记数法表示数值的字符串。
            </summary>
            <param name="value">数值。</param>
            <param name="significance">有效数字位数，0 表示保留所有有效数字。</param>
            <param name="useNaturalExpression">是否使用 "m×10^n" 的格式，而不是 "mE+n"。</param>
            <param name="useMagnitudeOrderCode">对于数量级介于 ±24 的数值，是否使用千进制数量级符号。</param>
            <param name="unit">单位。</param>
            <returns>字符串，表示以科学记数法表示的数值。</returns>
        </member>
        <member name="M:Com.Text.GetScientificNotationString(System.Double,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            返回一个以科学记数法表示数值的字符串。
            </summary>
            <param name="value">数值。</param>
            <param name="significance">有效数字位数，0 表示保留所有有效数字。</param>
            <param name="useNaturalExpression">是否使用 "m×10^n" 的格式，而不是 "mE+n"。</param>
            <param name="useMagnitudeOrderCode">对于数量级介于 ±24 的数值，是否使用千进制数量级符号。</param>
            <returns>字符串，表示以科学记数法表示的数值。</returns>
        </member>
        <member name="M:Com.Text.GetScientificNotationString(System.Double,System.Int32,System.Boolean,System.String)">
            <summary>
            返回一个以科学记数法表示数值的字符串。
            </summary>
            <param name="value">数值。</param>
            <param name="significance">有效数字位数，0 表示保留所有有效数字。</param>
            <param name="useNaturalExpression">是否使用 "m×10^n" 的格式，而不是 "mE+n"。</param>
            <param name="unit">单位。</param>
            <returns>字符串，表示以科学记数法表示的数值。</returns>
        </member>
        <member name="M:Com.Text.GetScientificNotationString(System.Double,System.Int32,System.Boolean)">
            <summary>
            返回一个以科学记数法表示数值的字符串。
            </summary>
            <param name="value">数值。</param>
            <param name="significance">有效数字位数，0 表示保留所有有效数字。</param>
            <param name="useNaturalExpression">是否使用 "m×10^n" 的格式，而不是 "mE+n"。</param>
            <returns>字符串，表示以科学记数法表示的数值。</returns>
        </member>
        <member name="M:Com.Text.GetScientificNotationString(System.Double,System.Int32,System.String)">
            <summary>
            返回一个以科学记数法表示数值的字符串。
            </summary>
            <param name="value">数值。</param>
            <param name="significance">有效数字位数，0 表示保留所有有效数字。</param>
            <param name="unit">单位。</param>
            <returns>字符串，表示以科学记数法表示的数值。</returns>
        </member>
        <member name="M:Com.Text.GetScientificNotationString(System.Double,System.Int32)">
            <summary>
            返回一个以科学记数法表示数值的字符串。
            </summary>
            <param name="value">数值。</param>
            <param name="significance">有效数字位数，0 表示保留所有有效数字。</param>
            <returns>字符串，表示以科学记数法表示的数值。</returns>
        </member>
        <member name="M:Com.Text.GetScientificNotationString(System.Double,System.Boolean,System.Boolean,System.String)">
            <summary>
            返回一个以科学记数法表示数值的字符串。
            </summary>
            <param name="value">数值。</param>
            <param name="useNaturalExpression">是否使用 "m×10^n" 的格式，而不是 "mE+n"。</param>
            <param name="useMagnitudeOrderCode">对于数量级介于 ±24 的数值，是否使用千进制数量级符号。</param>
            <param name="unit">单位。</param>
            <returns>字符串，表示以科学记数法表示的数值。</returns>
        </member>
        <member name="M:Com.Text.GetScientificNotationString(System.Double,System.Boolean,System.Boolean)">
            <summary>
            返回一个以科学记数法表示数值的字符串。
            </summary>
            <param name="value">数值。</param>
            <param name="useNaturalExpression">是否使用 "m×10^n" 的格式，而不是 "mE+n"。</param>
            <param name="useMagnitudeOrderCode">对于数量级介于 ±24 的数值，是否使用千进制数量级符号。</param>
            <returns>字符串，表示以科学记数法表示的数值。</returns>
        </member>
        <member name="M:Com.Text.GetScientificNotationString(System.Double,System.Boolean,System.String)">
            <summary>
            返回一个以科学记数法表示数值的字符串。
            </summary>
            <param name="value">数值。</param>
            <param name="useNaturalExpression">是否使用 "m×10^n" 的格式，而不是 "mE+n"。</param>
            <param name="unit">单位。</param>
            <returns>字符串，表示以科学记数法表示的数值。</returns>
        </member>
        <member name="M:Com.Text.GetScientificNotationString(System.Double,System.Boolean)">
            <summary>
            返回一个以科学记数法表示数值的字符串。
            </summary>
            <param name="value">数值。</param>
            <param name="useNaturalExpression">是否使用 "m×10^n" 的格式，而不是 "mE+n"。</param>
            <returns>字符串，表示以科学记数法表示的数值。</returns>
        </member>
        <member name="M:Com.Text.GetScientificNotationString(System.Double,System.String)">
            <summary>
            返回一个以科学记数法表示数值的字符串。
            </summary>
            <param name="value">数值。</param>
            <param name="unit">单位。</param>
            <returns>字符串，表示以科学记数法表示的数值。</returns>
        </member>
        <member name="M:Com.Text.GetScientificNotationString(System.Double)">
            <summary>
            返回一个以科学记数法表示数值的字符串。
            </summary>
            <param name="value">数值。</param>
            <returns>字符串，表示以科学记数法表示的数值。</returns>
        </member>
        <member name="M:Com.Text.GetIntervalString(System.String,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            获取源字符串中位于两个指定字符串之间的部分。
            </summary>
            <param name="sourceString">源字符串。</param>
            <param name="startString">起始字符串。</param>
            <param name="endString">结尾字符串。</param>
            <param name="includeStartString">结果是否包含起始字符串。</param>
            <param name="includeEndString">结果是否包含结尾字符串。</param>
            <returns>字符串，表示源字符串中位于两个指定字符串之间的部分。</returns>
        </member>
        <member name="M:Com.Text.StringIntercept(System.String,System.Drawing.Font,System.Int32)">
            <summary>
            返回按照指定字体与绘图宽度截取后的字符串。
            </summary>
            <param name="text">字符串。</param>
            <param name="font">字体。</param>
            <param name="width">绘图宽度（像素）。</param>
            <returns>字符串，表示按照指定字体与绘图宽度截取后的字符串。</returns>
        </member>
        <member name="M:Com.Text.GetSuitableFont(System.String,System.Drawing.Font,System.Drawing.SizeF)">
            <summary>
            返回一个字体（仅改变当前字体的大小），使字符串的绘图区域不超过指定的大小。
            </summary>
            <param name="text">字符串。</param>
            <param name="font">字体。</param>
            <param name="size">绘图区域的大小（像素）。</param>
            <returns>Font 对象，表示使字符串的绘图区域不超过指定大小的字体。</returns>
        </member>
        <member name="M:Com.Text.GetLongTimeStringFromTimeSpan(System.TimeSpan)">
            <summary>
            返回一个以 "hh:mm:ss.ms" 格式表示时间间隔的字符串。
            </summary>
            <param name="timeSpan">时间间隔。</param>
            <returns>字符串，表示以 "hh:mm:ss.ms" 格式表示的时间间隔。</returns>
        </member>
        <member name="M:Com.Text.GetTimeStringFromTimeSpan(System.TimeSpan)">
            <summary>
            返回一个以 "h 小时 m 分 s 秒" 格式表示时间间隔的字符串。
            </summary>
            <param name="timeSpan">时间间隔。</param>
            <returns>字符串，表示以 "h 小时 m 分 s 秒" 格式表示的时间间隔。</returns>
        </member>
        <member name="M:Com.Text.GetStandardizationTimespanOfSecond(System.Double,System.Int32)">
            <summary>
            返回将一个时间间隔在合适的单位下保留指定位数有效数字的数值。
            </summary>
            <param name="seconds">时间间隔（秒）。</param>
            <param name="significance">有效数字位数，0 表示保留所有有效数字。</param>
            <returns>双精度浮点数，表示将一个时间间隔在合适的单位下保留指定位数有效数字的数值。</returns>
        </member>
        <member name="M:Com.Text.GetLargeTimespanStringOfSecond(System.Double)">
            <summary>
            返回一个表示时间间隔的字符串。
            </summary>
            <param name="seconds">时间间隔（秒）。</param>
            <returns>字符串，表示时间间隔。</returns>
        </member>
        <member name="M:Com.Text.GetStandardizationDistanceOfMeter(System.Double,System.Int32)">
            <summary>
            返回将一个距离在合适的单位下保留指定位数有效数字的数值。
            </summary>
            <param name="meters">距离（米）。</param>
            <param name="significance">有效数字位数，0 表示保留所有有效数字。</param>
            <returns>双精度浮点数，表示将一个距离在合适的单位下保留指定位数有效数字的数值。</returns>
        </member>
        <member name="M:Com.Text.GetLargeDistanceStringOfMeter(System.Double)">
            <summary>
            返回一个表示距离的字符串。
            </summary>
            <param name="meters">距离（米）。</param>
            <returns>字符串，表示距离。</returns>
        </member>
        <member name="M:Com.Text.GetAngleStringOfDegree(System.Double,System.Int32,System.Boolean)">
            <summary>
            返回一个以 "d° m′ s″ " 格式表示角度的字符串。
            </summary>
            <param name="degree">以角度为单位的角度。</param>
            <param name="decimalDigits">保留的小数位数，0 表示不保留小数，-1 表示保留所有小数。</param>
            <param name="cutdownIdleZeros">是否删除小数点后所有不必要的 "0"。</param>
            <returns>字符串，表示以 "d° m′ s″ " 格式表示的角度。</returns>
        </member>
        <member name="M:Com.Text.GetSize64StringFromByte(System.Int64)">
            <summary>
            返回一个表示存储大小的字符串。
            </summary>
            <param name="bytes">存储大小（字节）。</param>
            <returns>字符串，表示存储大小。</returns>
        </member>
    </members>
</doc>
